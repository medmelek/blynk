{"version":3,"sources":["components/Pages/ProjectPage/Widget/Views/ButtonView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/TwoAxisJoystickView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/TextInputView/styles.module.scss","components/Pages/ProjectPage/Widget/WidgetLabel/styles.module.scss","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/ChartLegend/styles.module.scss","components/Pages/ProjectPage/Widget/Views/LcdDisplayView/styles.module.scss","components/Pages/ConnectionPage/GitHubLink/styles.module.scss","components/Pages/ProjectPage/Widget/styles.module.scss","components/Pages/ProjectPage/Widget/Views/TerminalView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/LevelView/LevelChart/styles.module.scss","components/Pages/ProjectPage/Widget/Views/LedView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/SliderView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/NumericalDisplayView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/DataStreamsChart/styles.module.scss","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/ChartControl/styles.module.scss","components/Pages/ProjectPage/Widget/Views/RgbView/styles.module.scss","components/Pages/Scrollbar/styles.module.scss","components/Pages/ProjectPage/Widget/Views/GaugeView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/LevelView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/MapView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/ImageView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/SegmentedControlView/styles.module.scss","components/Pages/ProjectPage/styles.module.scss","components/Pages/ConnectionPage/styles.module.scss","browser.js","redux/modules/settings/actionTypes.js","redux/modules/settings/reducer.js","redux/modules/settings/index.js","redux/modules/blynk/actionTypes.js","redux/modules/blynk/reducer.js","redux/modules/blynk/index.js","redux/modules/index.js","redux/store.js","utils/immutable.js","common/blynkWSClient.js","utils/connection.js","utils/data.js","redux/modules/blynk/actions.js","utils/validation.js","components/Pages/ConnectionPage/GitHubLink/GitHubLink.js","components/Pages/ConnectionPage/ConnectionPage.js","components/Pages/ProjectPage/Widget/WidgetLabel/WidgetLabel.js","redux/selectors.js","utils/color.js","components/Pages/ProjectPage/Widget/Views/ButtonView/ButtonView.js","components/Pages/ProjectPage/Widget/Views/SliderView/SliderView.js","components/Pages/ProjectPage/Widget/Views/NumericalDisplayView/NumericalDisplayView.js","components/Pages/ProjectPage/Widget/Views/UnknownView/UnknownView.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/DataStreamsChart/DataStreamsChart.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/ChartLegend/ChartLegend.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/ChartControl/ChartControl.js","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/EnhancedGraphView.js","components/Pages/ProjectPage/Widget/Views/RgbView/RgbView.js","components/Pages/ProjectPage/Widget/Views/TwoAxisJoystickView/TwoAxisJoystickView.js","components/Pages/Scrollbar/Scrollbar.js","components/Pages/ProjectPage/Widget/Views/TerminalView/TerminalView.js","components/Pages/ProjectPage/Widget/Views/VerticalSliderView/VerticalSliderView.js","components/Pages/ProjectPage/Widget/Views/LcdDisplayView/LcdDisplayView.js","components/Pages/ProjectPage/Widget/Views/GaugeView/GaugeChart/GaugeChart.js","components/Pages/ProjectPage/Widget/Views/GaugeView/GaugeView.js","components/Pages/ProjectPage/Widget/Views/LevelView/LevelChart/LevelChart.js","components/Pages/ProjectPage/Widget/Views/LevelView/LevelView.js","components/Pages/ProjectPage/Widget/Views/StepView/StepView.js","components/Pages/ProjectPage/Widget/Views/LedView/LedView.js","components/Pages/ProjectPage/Widget/Views/TabsView/TabsView.js","components/Pages/ProjectPage/Widget/Views/EmptyView/EmptyView.js","components/Pages/ProjectPage/Widget/Views/MapView/MapView.js","components/Pages/ProjectPage/Widget/Views/ImageView/ImageView.js","components/Pages/ProjectPage/Widget/Views/TextInputView/TextInputView.js","components/Pages/ProjectPage/Widget/Views/SegmentedControlView/SegmentedControlView.js","components/Pages/ProjectPage/Widget/Widget.js","components/Pages/ProjectPage/ProjectPage.js","components/Root/Root.js","index.js","serviceWorker.js","components/Pages/ProjectPage/Widget/Views/StepView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/EnhancedGraphView/styles.module.scss","components/Pages/ProjectPage/Widget/Views/GaugeView/GaugeChart/styles.module.scss","components/Pages/ProjectPage/Widget/Views/TabsView/styles.module.scss"],"names":["module","exports","button","styledButton","buttonContainer","sizeContainer","stickContainer","mainContainer","stick","container","controlButton","root","title","information","legend","legendItem","legendCell","value","line","main","octicon","tabsRoot","outputContainer","output","backLine","ledContainer","ledCircle","sliderContainer","chartContainer","control","colorPickerContainer","thumb","loading","chart","widgetLabelContainer","widgetLabel","map","imageContainer","workspace","workspaceInner","header","headerInner","headerTitle","headerControls","headerDelimiter","widgetsArea","selectAutoSync","emptyFiller","form","form-appear","error","connectionProblem","tokensInput","Element","prototype","closest","css","node","this","matches","parentElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","UPDATE_SETTINGS","initialState","Immutable","reducer","state","arguments","length","undefined","action","type","settings","merge","SET_CONNECTION_PARAMS","SET_PROJECT","SET_PIN_VALUE","SET_PIN_HISTORY","LOGOUT","SET_ACTIVE_TAB_ID","SET_AUTO_SYNC","defaultTokens","localStorage","getItem","split","defaultServerHost","defaultPort","Number","defaultConnectionMode","defaultAutoSync","tokens","serverHost","serverPort","connectionMode","autoSync","activeTabId","project","devices","set","tabId","deviceId","pin","device","getIn","setIn","history","combineReducers","blynk","configureStore","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","rootReducer","listToMap","list","keyField","result","forEach","listItem","get","MsgType","RESPONSE","LOGIN","PING","TWEET","EMAIL","NOTIFY","BRIDGE","HW_SYNC","HW_INFO","HARDWARE","BlynkWSClient","isRunning","socket","pingTimer","token","debugging","handleWSMessage","event","data","ArrayBuffer","bufArray","DataView","getInt8","_this","console","info","messageToDebugString","handleHardwareMessage","buf","slice","String","fromCharCode","Uint8Array","warn","_throttleSendFunctions","throttleSend","throttle","send","bind","Object","assertThisInitialized","_this2","_ref","stop","WebSocket","binaryType","onmessage","onopen","start","onclose","onerror","syncTimer","repeat","sync","delay","skipFirst","_this3","firstTimeDelay","interval","updateDelay","close","dataView","cmdString","cmd","getStringByCommandCode","msgId","getUint16","responseCode","statusCode","getStatusByCode","dispatchEvent","dontSend","pinType","pinNumber","dispatchWritePin","_data$split","_data$split2","slicedToArray","readyState","OPEN","commandAndBody","message","createMessage","cmdBody","join","getCommandByString","buildBlynkMessage","bodyLength","setInt8","setInt16","i","offset","charCodeAt","EventHandler","classCallCheck","_events","includes","push","filter","details","eventHandler","blynkWSMultiClient","_clients","getBlynkWSClient","_this4","getHttpBlynkUrl","getWidgetPinAddress","widget","toLowerCase","formatValueString","valueFormatting","pinExpression","replace","RegExp","escapeRegExp","g1","g2","g3","valueStr","parseFloat","toFixed","escape","setPinValue","_ref6","required","GitHubLink","react_default","a","createElement","className","styles","href","target","rel","viewBox","version","aria-hidden","fillRule","d","React","Component","ErrorString","meta","touched","InputGroupField","input","props","objectWithoutProperties","Fragment","inputGroup","objectSpread","ConnectionPage_ErrorString","TextAreaField","_ref2","textArea","HTMLSelectField","_ref3","htmlSelect","ConnectionPage","_React$Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","busy","connectionError","handleSubmit","_ref4","asyncToGenerator","regenerator_default","mark","_callee","params","_this$props","setConnectionParams","testConnection","wrap","_context","prev","next","trim","setState","t0","response","text","_x","inherits","createClass","key","_this$state","_this$props2","cn","react_final_form_es","onSubmit","initialValues","render","_ref5","formGroup","label","labelFor","helperText","name","id","component","validate","fill","options","buttons","disabled","icon","submitButton","intent","Intent","PRIMARY","GitHubLink_GitHubLink","connect","ownProps","setItem","_callee2","dispatch","getState","_getState$blynk$toObj2","_context2","toObject","request","first","_x3","_x4","isEmptyString","str","WidgetLabel","emptyHide","defaultProps","pinValueSelector","pinId","isNaN","widgetDataStreamsHistorySelector","createCachedSelector","dataStreamsHistory","dataStream","decodeBlynkColor","blynkColor","color","gradient","ButtonView","pressed","handleMouseDown","blynkWSClient","sendWritePin","handleMouseUp","isButtonActive","width","height","isStyledButton","buttonActive","borderRadius","backgroundColor","margin","Math","min","border","WidgetLabel_WidgetLabel","dist_index_esm","_cn","defineProperty","active","onMouseDown","onMouseUp","style","getButtonStyle","renderButtonLabel","SliderView","handleChange","fakeUpdate","handleRelease","vertical","sliderValue","max","slider","labelRenderer","onChange","onRelease","NumericalDisplayView","dangerouslySetInnerHTML","__html","fontSize","textAlign","colorRange","valueProportion","d3","getWidgetValueColor","renderValue","UnknownView","DataStreamsChart","prevProps","prevState","snapshot","disabledItems","renderChart","dataStreams","chartDataStreams","idx","colors","chartDataStream","colorGradient","showAxis","strokeWidth","showDots","scaleDomain","scaleRange","showXAxis","TimeseriesMultiChart","containerRef","chartDuration","showTimeAxis","_this$props3","ref","ChartLegend","handleClickItem","e","onClickItem","currentTarget","dataset","onClick","data-idx","ChartControl","handleSelectDuration","onChangeDuration","duration","buttonGroup","minWidth","data-duration","small","EnhancedGraphView","historyIsReady","hiddenDataStreams","handleChangeDuration","dataStreamsChart","setChartDuration","handleClickLegendItem","itemId","toConsumableArray","_getHistory","getPinHistory","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","Symbol","iterator","done","return","finish","getHistory","ChartLegend_ChartLegend","ChartControl_ChartControl","DataStreamsChart_DataStreamsChart","controlBlockRef","legendBlockRef","spinner","renderLoading","_ref7","_ref8","_callee3","_getState$blynk$toObj3","res","processData","_context3","toUpperCase","responseType","sent","Promise","resolve","reject","reader","FileReader","onload","csv","pako","ungzip","to","item","readAsArrayBuffer","body","_x5","_x6","RgbView","handleChangeColor","pin1Id","pin2Id","pin3Id","rgb","r","g","b","pin1Value","pin2Value","pin3Value","chroma","hex","lib_default","opacity","TwoAxisJoystickView","handleStartDrag","handleDrag","deltaX","deltaY","rX","getMiddleX","rY","getMiddleY","distance","sqrt","floor","handleStop","pinIdx","_middleX","getMiddleValue","_middleY","areaSize","moreSize","stickSize","x","y","react_draggable","onStart","onDrag","onStop","left","top","transform","Scrollbar","renderThumb","assign","scrollRef","react_custom_scrollbars_lib","renderThumbHorizontal","renderThumbVertical","TerminalView","inputValue","lastOwnChange","handleSendInput","handleChangeInput","handleKeyPress","keyCode","which","pinWriteHistory","scrollComponent","scrollToBottom","historyItem","size","terminalInputOn","Scrollbar_Scrollbar","generateHistoryOutput","placeholder","onKeyPress","rightElement","minimal","VerticalSliderView","_SliderView","LcdDisplayView","value1","value2","GaugeChart","append","attr","radius","thickness","arc","cornerRadius","innerRadius","outerRadius","startAngle","PI","endAngle","frontLine","minLabel","sin","cos","maxLabel","redraw","fillFactor","select","html","GaugeView","GaugeView_GaugeChart_GaugeChart","LevelChart","flipAxis","LevelView","isVertical","LevelView_LevelChart_LevelChart","StepView","step","isSendStep","isLoopOn","direction","sendRepeatAction","sendValue","_cn2","defaultLabel","verticalButtonsContainer","buttonsContainer","data-direction","getButtonLabel","dividerHorizontal","dividerVertical","LedView","cx","cy","stroke","fillOpacity","TabsView","handleClickTab","setActiveTabId","tabsContainer","tabsInner","tabList","tab","activeTab","data-tab-id","EmptyView","MapView","lat","lon","L","mapContainerRef","setView","tileLayer","addTo","marker","ImageView","imageUrl","imgWidth","imgHeight","src","alt","TextInputView","context","handleChangeValue","blur","handleBlur","isNumberInput","handleConfirmButtonClick","handleClickPlusMinus","resultValue","leftElement","suffix","data-action","onBlur","leftIcon","SegmentedControlView","handleClick","fontWeight","data-value","WIDGET_VIEW_COMPONENTS","BUTTON","STYLED_BUTTON","SLIDER","VERTICAL_SLIDER","RGB","TWO_AXIS_JOYSTICK","ENHANCED_GRAPH","DIGIT4_DISPLAY","LABELED_VALUE_DISPLAY","GAUGE","LCD","LEVEL_DISPLAY","VERTICAL_LEVEL_DISPLAY","TERMINAL","STEP","VERTICAL_STEP","LED","TABS","NOTIFICATION","TWITTER","RTC","MAP","IMAGE","TEXT_INPUT","NUMBER_INPUT","SEGMENTED_CONTROL","Widget","ViewComponent","renderContent","ProjectPage","handleLogout","logout","handleChangeAutoSync","setAutoSyncValue","handleSync","_componentDidMount","getProject","widgets","ProjectPage_Widget_Widget","_this$props4","isDarkTheme","bp3-dark","DANGER","renderWidgets","_getState$blynk$toObj","processWidgetPin","widgetPinBlock","widgetPins","widgetDataStreams","widgetDataStream","init","addEventListener","setSyncTimerInterval","_x2","Root","store","react_redux_es","HashRouter","Route","exact","path","Redirect","FocusStyleManager","onlyShowFocusOnTabs","document","querySelector","ReactDOM","Root_Root","navigator","serviceWorker","ready","then","registration","unregister","minMaxLabel"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,OAAA,uBAAAC,aAAA,6BAAAC,gBAAA,gCAAAC,cAAA,oDCAlBL,EAAAC,QAAA,CAAkBK,eAAA,+BAAAD,cAAA,8BAAAE,cAAA,8BAAAC,MAAA,4CCAlBR,EAAAC,QAAA,CAAkBQ,UAAA,0BAAAC,cAAA,oDCAlBV,EAAAC,QAAA,CAAkBU,KAAA,qBAAAC,MAAA,sBAAAC,YAAA,kDCAlBb,EAAAC,QAAA,CAAkBa,OAAA,uBAAAC,WAAA,2BAAAC,WAAA,iDCAlBhB,EAAAC,QAAA,CAAkBgB,MAAA,sBAAAC,KAAA,2CCAlBlB,EAAAC,QAAA,CAAkBkB,KAAA,qBAAAC,QAAA,8CCAlBpB,EAAAC,QAAA,CAAkBU,KAAA,qBAAAU,SAAA,+CCAlBrB,EAAAC,QAAA,CAAkBqB,gBAAA,gCAAAC,OAAA,6CCAlBvB,EAAAC,QAAA,CAAkBuB,SAAA,+CCAlBxB,EAAAC,QAAA,CAAkBwB,aAAA,6BAAAC,UAAA,gDCAlB1B,EAAAC,QAAA,CAAkB0B,gBAAA,sDCAlB3B,EAAAC,QAAA,CAAkBgB,MAAA,4CCAlBjB,EAAAC,QAAA,CAAkB2B,eAAA,qDCAlB5B,EAAAC,QAAA,CAAkB4B,QAAA,8CCAlB7B,EAAAC,QAAA,CAAkB6B,qBAAA,2DCAlB9B,EAAAC,QAAA,CAAkB8B,MAAA,4CCAlB/B,EAAAC,QAAA,CAAkB+B,QAAA,wBAAAC,MAAA,sBAAAC,qBAAA,qCAAAC,YAAA,kDCAlBnC,EAAAC,QAAA,CAAkB+B,QAAA,wBAAAC,MAAA,sBAAAC,qBAAA,qCAAAC,YAAA,kDCAlBnC,EAAAC,QAAA,CAAkBmC,IAAA,0CCAlBpC,EAAAC,QAAA,CAAkBoC,eAAA,qDCAlBrC,EAAAC,QAAA,CAAkBQ,UAAA,qFCAlBT,EAAAC,QAAA,CAAkBU,KAAA,qBAAA2B,UAAA,0BAAAC,eAAA,+BAAAC,OAAA,uBAAAC,YAAA,4BAAAC,YAAA,4BAAAC,eAAA,+BAAAC,gBAAA,gCAAAC,YAAA,4BAAAC,eAAA,oDCAlB9C,EAAAC,QAAA,CAAkBkB,KAAA,qBAAA4B,YAAA,4BAAAC,KAAA,qBAAAC,cAAA,4BAAArC,MAAA,sBAAAsC,MAAA,sBAAAC,kBAAA,kCAAAC,YAAA,sECAbC,QAAQC,UAAUC,UACnBF,QAAQC,UAAUC,QAAU,SAASC,GAGjC,IAFA,IAAIC,EAAOC,KAEJD,GAAM,CACT,GAAIA,EAAKE,QAAQH,GACb,OAAOC,EAGXA,EAAOA,EAAKG,cAEhB,OAAO,OAKVP,QAAQC,UAAUK,UACnBN,QAAQC,UAAUK,QACdN,QAAQC,UAAUO,iBAClBR,QAAQC,UAAUQ,uBAClBT,QAAQC,UAAUS,oBAClBV,QAAQC,UAAUU,kJCtBbC,EAAkB,+BCGzBC,EAAeC,IAAiB,ICDvBC,MDGA,WAAoD,IAAnCC,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3BJ,EAAcO,EAAaH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC3D,OAAQG,EAAOC,MACX,KAAKT,EAAiB,IACVU,EAAaF,EAAbE,SAER,OAAON,EAAMO,MAAMD,GAEvB,QACI,OAAON,IEbNQ,EAAwB,kCACxBC,EAAc,wBACdC,EAAgB,0BAChBC,EAAkB,4BAElBC,EAAS,mBACTC,EAAoB,8BACpBC,EAAgB,0BCIvBC,GAAiBC,aAAaC,QAAQ,4BAA8B,IAAIC,MAAM,KAC9EC,EAAoBH,aAAaC,QAAQ,gCAAkC,kBAC3EG,EAAcC,OAAOL,aAAaC,QAAQ,iCAAmC,KAC7EK,EAAwBN,aAAaC,QAAQ,oCAAsC,SACnFM,EAAkBF,OAAOL,aAAaC,QAAQ,+BAAiC,EAE/EpB,EAAeC,IAAiB,CAClC0B,OAAQT,EACRU,WAAYN,EACZO,WAAYN,EACZO,eAAgBL,EAEhBM,SAAUL,EAEVM,YAAa,EAEbC,QAAS,KAETC,QAAS,KC3BEhC,MD8BA,WAAoD,IAAnCC,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3BJ,EAAcO,EAAaH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC3D,OAAQG,EAAOC,MACX,KAAKG,EAAuB,IAChBgB,EAAmDpB,EAAnDoB,OAAQC,EAA2CrB,EAA3CqB,WAAYC,EAA+BtB,EAA/BsB,WAAYC,EAAmBvB,EAAnBuB,eACxC,OAAO3B,EACFgC,IAAI,SAAUR,GACdQ,IAAI,aAAcP,GAClBO,IAAI,aAAcN,GAClBM,IAAI,iBAAkBL,GAE/B,KAAKf,EACD,OAAOZ,EACFgC,IAAI,SAAU,IAAIlC,KAClBkC,IAAI,cAAe,GACnBA,IAAI,UAAW,MACfA,IAAI,OAAQ,IAAIlC,KAChBkC,IAAI,cAAe,IAAIlC,KACvBkC,IAAI,mBAAoB,IAAIlC,KAC5BkC,IAAI,UAAW,IAAIlC,KAE5B,KAAKe,EAAmB,IACZoB,EAAU7B,EAAV6B,MACR,OAAOjC,EAAMgC,IAAI,cAAeC,GAEpC,KAAKxB,EAAa,IACNqB,EAAqB1B,EAArB0B,QAASC,EAAY3B,EAAZ2B,QAEjB,OAAO/B,EAAMgC,IAAI,UAAWF,GAASE,IAAI,UAAWD,GAExD,KAAKrB,EAAe,IACRwB,EAAyB9B,EAAzB8B,SAAUC,EAAe/B,EAAf+B,IAAKvF,EAAUwD,EAAVxD,MAEnBwF,EAASpC,EAAMqC,MAAM,CAAC,UAAWH,IAUrC,OARAE,EAASA,EAAOE,MAAM,CAAC,OAAQH,GAAMvF,GAQ9BoD,EAAMsC,MAAM,CAAC,UAAWJ,GAAWE,GAE9C,KAAKzB,EAAiB,IACVuB,EAA2B9B,EAA3B8B,SAAUC,EAAiB/B,EAAjB+B,IAAKI,EAAYnC,EAAZmC,QAEnBH,EAASpC,EAAMqC,MAAM,CAAC,UAAWH,IAGrC,OAFAE,EAASA,EAAOE,MAAM,CAAC,cAAeH,GAAMI,GAErCvC,EAAMsC,MAAM,CAAC,UAAWJ,GAAWE,GAE9C,KAAKtB,EAAe,IACRlE,EAAUwD,EAAVxD,MAER,OAAOoD,EAAMgC,IAAI,WAAYpF,GAEjC,QACI,OAAOoD,IErFJwC,cAAgB,CAC3BlC,WACAmC,UC4BWC,EA/BQ,WACnB,IAEMC,EAAa,CAACC,KAUdC,EAAoBC,IAAOC,WAAP,GACtBC,IAAeD,WAAf,EAAmBJ,IADGM,OAXR,KA0BlB,OAVcC,YAAYC,EAjBL,GAiBgCN,8PCpBlD,SAASO,GAAUC,GAAuB,IAAjBC,EAAiBrD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KACnCsD,EAAS,IAAIzD,IAIjB,OAHAuD,EAAKG,QAAQ,SAAAC,GACTF,EAASA,EAAOvB,IAAIyB,EAASC,IAAIJ,GAAWG,KAEzCF,yDCJLI,GAAU,CACZC,SAAU,EACVC,MAAO,EACPC,KAAM,EACNC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,QAAS,GACTC,QAAS,GACTC,SAAU,QAyFRC,8MACFC,WAAY,IACZC,OAAS,OACTC,UAAY,OACZC,MAAQ,OACRC,WAAY,IAqFZC,gBAAkB,SAAAC,GACd,GAAIA,EAAMC,gBAAgBC,YAAa,CACnC,IAAMC,EAAWH,EAAMC,KAKvB,OAHiB,IAAIG,SAASD,GACFE,QAAQ,IAGhC,KAAKvB,GAAQC,SACTuB,EAAKR,WAAaS,QAAQC,KAAKF,EAAKG,qBAAqBN,IAEzD,MAEJ,KAAKrB,GAAQU,SACTc,EAAKI,uBArITC,EAqIsCR,EAASS,MAAM,GApI1DC,OAAOC,aAAa5C,MAAM,KAAM,IAAI6C,WAAWJ,YA0I9CJ,QAAQS,KAAR,yBAAA5C,OAAsC4B,EAAMC,OA3IxD,IAAgBU,KAoLZM,uBAAyB,KACzBC,aAAe,SAAA5D,GAEX,OADAgD,EAAKW,uBAAuB3D,GAAOgD,EAAKW,uBAAuB3D,IAAQ6D,KAASb,EAAKc,KAAKC,KAAVC,OAAAC,GAAA,EAAAD,QAAAC,GAAA,EAAAD,CAAAhB,KAAsB,KAC/FA,EAAKW,uBAAuB3D,2EA5IiB,IAAAkE,EAAAhH,KAAjDqF,EAAiD4B,EAAjD5B,MAAOjD,EAA0C6E,EAA1C7E,WAAYC,EAA8B4E,EAA9B5E,WAAYC,EAAkB2E,EAAlB3E,eAClCtC,KAAKkH,OACLlH,KAAKqF,MAAQA,EAEbrF,KAAKmF,OAAS,IAAIgC,UAAJ,GAAAvD,OACY,WAAnBtB,EAA8B,KAAO,MAD9B,OAAAsB,OACyCxB,EADzC,KAAAwB,OACuDvB,EADvD,gBAGdrC,KAAKmF,OAAOiC,WAAa,cAEzBpH,KAAKmF,OAAOkC,UAAYrH,KAAKuF,gBAC7BvF,KAAKmF,OAAOmC,OAAS,SAAA9B,GACjBwB,EAAKO,QACLP,EAAK1B,WAAaS,QAAQC,KAAK,kBAEnChG,KAAKmF,OAAOqC,QAAU,SAAAhC,GAClBwB,EAAKE,OACLF,EAAK1B,WAAaS,QAAQC,KAAK,qBAEnChG,KAAKmF,OAAOsC,QAAU,SAAAjC,GAClBO,QAAQS,KAAK,cAGjBxG,KAAK0H,UAAYC,aAAO,CACpB5G,OAAQ,WACJiG,EAAKY,QAETC,MAAO,IACPC,WAAW,oCAIX,IAAAC,EAAA/H,KACAA,KAAKkF,YAGTlF,KAAKkF,WAAY,EAEjBlF,KAAK4G,KAAL,SAAAhD,OAAmB5D,KAAKqF,QAExBrF,KAAK4G,KAAL,iBAAAhD,OAA2B5D,KAAKqF,QAEhCrF,KAAKoF,UAAYuC,aAAO,CACpB5G,OAAQ,WACJgH,EAAKnB,KAAK,SAEdiB,MAAO,IACPG,eAAgB,IAChBF,WAAW,IAEf9H,KAAKoF,UAAUmC,sDAGEU,GACZA,GAGDjI,KAAK0H,UAAUQ,YAAYD,GAC3BjI,KAAK0H,UAAUR,OACflH,KAAK0H,UAAUH,SAJfvH,KAAK0H,UAAUR,sCASnBlH,KAAK4G,KAAL,yCAIK5G,KAAKkF,YAIVlF,KAAKkF,WAAY,EACjBlF,KAAKoF,UAAU8B,OACflH,KAAKmF,OAAOgD,sDA2BKxC,GACjB,IAAMyC,EAAW,IAAIxC,SAASD,GACxB0C,EAjLd,SAAgCC,GAC5B,OAAQA,GACJ,KAAK,EACD,MAAO,WACX,KAAK,GACD,MAAO,YA4KOC,CAAuBH,EAASvC,QAAQ,IACpD2C,EAAQJ,EAASK,UAAU,GAC3BC,EAxKd,SAAyBC,GACrB,OAAQA,GACJ,KAAK,IACD,MAAO,KACX,KAAK,EACD,MAAO,kBACX,KAAK,EACD,MAAO,sBACX,KAAK,EACD,MAAO,gBACX,KAAK,GACD,MAAO,wBA6JUC,CAAgBR,EAASK,UAAU,IACxD,mBAAA7E,OAAoByE,EAApB,cAAAzE,OAA0C4E,EAA1C,qBAAA5E,OAAmE8E,4CAQtD5F,EAAKvF,GAClByC,KAAK6I,cAAc,YAAa,CAC5B/F,IAAG,GAAAc,OAAKd,GACRvF,+CAUKuF,EAAKvF,GAAyB,IAAlBuL,EAAkBlI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACjCmI,EAAUjG,EAAI,GACdkG,EAAYlG,EAAIsD,MAAM,GAEvB0C,GACD9I,KAAK0G,aAAa5D,EAAlB9C,CAAA,eAAA4D,OAAsCmF,EAAtC,MAAAnF,OAAkDoF,EAAlD,KAAApF,OAA+DrG,IAGnEyC,KAAKiJ,iBAAiBnG,EAAKvF,iDASTkI,GAAM,IAAAyD,EACGzD,EAAK5D,MAAMwE,OAAOC,aAAa,IADlC6C,EAAArC,OAAAsC,GAAA,EAAAtC,CAAAoC,EAAA,GACjBlI,EADiBmI,EAAA,GACXrG,EADWqG,EAAA,GACN5L,EADM4L,EAAA,GAExB,OAAQnI,GACJ,IAAK,KAEDhB,KAAKiJ,iBAAL,IAAArF,OAA0Bd,GAAOvF,GACjC,MAEJ,IAAK,KAEDyC,KAAKiJ,iBAAL,IAAArF,OAA0Bd,GAAOvF,GACjC,MAEJ,IAAK,KAEDyC,KAAKiJ,iBAAL,IAAArF,OAA0Bd,GAAOvF,iCAOxCkI,GACD,GAAKzF,KAAKkF,WAGNlF,KAAKmF,OAAOkE,aAAelC,UAAUmC,KAAzC,CAIA,IAAMC,EAAiB9D,EAAK5D,MAAM,KAC5B2H,EAAUxJ,KAAKyJ,cAAcF,GAEnCvJ,KAAKsF,WAAaS,QAAQC,KAAR,gBAAApC,OAA6B6B,IAE/CzF,KAAKmF,OAAOyB,KAAK4C,0CAGPD,GACV,IAAMlB,EAAYkB,EAAe,GAC3BG,EAAUH,EAAe1I,OAAS,EAAI0I,EAAenD,MAAM,GAAGuD,KAAK,MAAQ,KAC3ErB,EAnRd,SAA4BD,GACxB,OAAQA,GACJ,IAAK,OACD,OAAO/D,GAAQG,KACnB,IAAK,QACD,OAAOH,GAAQE,MACnB,IAAK,WACD,OAAOF,GAAQU,SACnB,IAAK,SACD,OAAOV,GAAQO,OACnB,IAAK,SACD,OAAOP,GAAQQ,SAwQP8E,CAAmBvB,GAC/B,OAAOrI,KAAK6J,kBAAkBvB,EAAK,EAAGoB,6CAGxBpB,EAAKE,EAAOkB,GAC1B,IACMI,EAAaJ,EAAUA,EAAQ7I,OAAS,EACxC8E,EAAW,IAAID,YAFK,EAE2BoE,GAC/C1B,EAAW,IAAIxC,SAASD,GAI9B,GAHAyC,EAAS2B,QAAQ,EAAGzB,GACpBF,EAAS4B,SAAS,EAAGxB,GACrBJ,EAAS4B,SAAS,EAAGF,GACjBA,EAAa,EACb,IAAK,IAAIG,EAAI,EAAGC,EAAS,EAAGD,EAAIP,EAAQ7I,OAAQoJ,GAAK,EAAGC,GAAU,EAC9D9B,EAAS2B,QAAQG,EAAQR,EAAQS,WAAWF,IAGpD,OAAO,IAAI1D,WAAWZ,qBA/O1B,SAAAyE,IAAetD,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAoK,GACXpK,KAAKsK,QAAU,gEAGF9E,EAAOzE,GACpBf,KAAKsK,QAAQ9E,GAASxF,KAAKsK,QAAQ9E,IAAU,GACxCxF,KAAKsK,QAAQ9E,GAAO+E,SAASxJ,IAC9Bf,KAAKsK,QAAQ9E,GAAOgF,KAAKzJ,+CAIbyE,EAAOzE,GACvBf,KAAKsK,QAAQ9E,GAASxF,KAAKsK,QAAQ9E,IAAU,GAC7CxF,KAAKsK,QAAQ9E,GAASxF,KAAKsK,QAAQ9E,GAAOiF,OAAO,SAAAR,GAAC,OAAIA,IAAMlJ,0CAGlDyE,EAAOkF,GACjB1K,KAAKsK,QAAQ9E,GAASxF,KAAKsK,QAAQ9E,IAAU,GAC7CxF,KAAKsK,QAAQ9E,GAAOrB,QAAQ,SAAAwG,GACxBA,EAAaD,eA6OVE,IAFY,qDAVvBC,SAAW,QAEXC,iBAAmB,SAAAjI,GAIf,OAHKkI,EAAKF,SAASxE,OAAOxD,MACtBkI,EAAKF,SAASxE,OAAOxD,IAAa,IAAIoC,IAEnC8F,EAAKF,SAASxE,OAAOxD,OAMpC,iBC9UO,SAASmI,GAAT/D,GAA4E,IAAjD5B,EAAiD4B,EAAjD5B,MAAOjD,EAA0C6E,EAA1C7E,WAAYC,EAA8B4E,EAA9B5E,WAAYC,EAAkB2E,EAAlB3E,eAC7D,SAAAsB,OAA6B,WAAnBtB,EAA8B,OAAS,QAAjD,OAAAsB,OAA8DxB,EAA9D,KAAAwB,OAA4EvB,EAA5E,KAAAuB,OAA0FyB,iDCEvF,SAAS4F,GAAoBC,GAChC,OAA2B,IAAvBA,EAAO7G,IAAI,QACH,EAEL6G,EAAO7G,IAAI,WAAW,GAAG8G,cAAgBD,EAAO7G,IAAI,OAOxD,SAAS+G,GAAkB7N,EAAO8N,GAAwC,IAAvBC,EAAuB1K,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,MACtE,OAAKyK,EAIEA,EAAgBE,QAAQ,IAAIC,OAAJ,IAAA5H,OAAe6H,KAAaH,GAA5B,kBAA4D,SAASI,EAAIC,EAAIC,GACxG,IAAI1H,EAVkB2H,EAgBtB,OAJI3H,EADAyH,EACSG,WAAW9J,OAAOzE,GAAOwO,QAAQH,EAAG/K,SAEpCtD,EAdSsO,EAgBDxF,OAAOnC,GAfhC,0BAAAN,OAAiCoI,KAAOH,GAAxC,aAKI,0BAAAjI,OAAiCoI,KAAOzO,GAAxC,WC2JD,SAAS0O,GAATC,GAA+C,IAAxBrJ,EAAwBqJ,EAAxBrJ,SAAUC,EAAcoJ,EAAdpJ,IAAKvF,EAAS2O,EAAT3O,MACzC,MAAO,CACHyD,KAAMK,EACNwB,WACAC,MACAvF,iCChLK4O,GAAW,SAAA5O,GAAK,OAAKA,OAAQuD,EAAY,8CCIjCsL,oLAEb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOhP,MACnB4O,EAAAC,EAAAC,cAAA,KAAGG,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBACnEP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO/O,QAASmP,QAAQ,YAAYC,QAAQ,MAAMC,cAAY,QAC1EV,EAAAC,EAAAC,cAAA,QACIS,SAAS,UACTC,EAAE,ykBARUC,IAAMC,WCQxCC,GAAc,SAAAC,GAAI,OAAKA,EAAK7N,OAAS6N,EAAKC,QAAUjB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOjN,OAAQ6N,EAAK7N,OAAe,MAEvG+N,GAAkB,SAAAtG,GAAA,IAAGuG,EAAHvG,EAAGuG,MAAOH,EAAVpG,EAAUoG,KAASI,EAAnB3G,OAAA4G,EAAA,EAAA5G,CAAAG,EAAA,yBACpBoF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACqB,EAAA,EAAD9G,OAAA+G,EAAA,EAAA/G,CAAA,GAAqB0G,EAAUC,IAC/BpB,EAAAC,EAAAC,cAACuB,GAAgBT,KAInBU,GAAgB,SAAAC,GAAA,IAAGR,EAAHQ,EAAGR,MAAOH,EAAVW,EAAUX,KAASI,EAAnB3G,OAAA4G,EAAA,EAAA5G,CAAAkH,EAAA,yBAClB3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAAC0B,EAAA,EAADnH,OAAA+G,EAAA,EAAA/G,CAAA,GAAmB0G,EAAUC,IAC7BpB,EAAAC,EAAAC,cAACuB,GAAgBT,KAInBa,GAAkB,SAAAC,GAAA,IAAGX,EAAHW,EAAGX,MAAgBC,GAAnBU,EAAUd,KAAVvG,OAAA4G,EAAA,EAAA5G,CAAAqH,EAAA,0BAA+B9B,EAAAC,EAAAC,cAAC6B,EAAA,EAADtH,OAAA+G,EAAA,EAAA/G,CAAA,GAAqB0G,EAAUC,KAEzEY,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAqO,GAAA,QAAAG,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAAuH,IAAAS,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACI9N,MAAQ,CACJoO,MAAM,EACNC,gBAAiB,MAHzBlJ,EAMImJ,aANJ,eAAAC,EAAApI,OAAAqI,EAAA,EAAArI,CAAAsI,EAAA9C,EAAA+C,KAMmB,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAvM,EAAAwM,EAAAvN,EAAA3C,EAAA,OAAA4P,EAAA9C,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAN,EAC8C1J,EAAK2H,MAAtDgC,EADGD,EACHC,oBAAqBvM,EADlBsM,EACkBtM,QAASwM,EAD3BF,EAC2BE,eAEhCvN,EAASoN,EAAOpN,OACjBN,MAAM,WACNnD,IAAI,SAAAuL,GAAC,OAAI8F,IAAK9F,KACdQ,OAAO,SAAAR,GAAC,OAAIA,IAEjBwF,EAAoB,CAChBtN,OAAQ1B,IAAiB0B,GACzBC,WAAYmN,EAAOnN,WACnBC,WAAYkN,EAAOlN,WACnBC,eAAgBiN,EAAOjN,iBAG3BwD,EAAKkK,SAAS,CAAEjB,MAAM,IAfXa,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAiBDJ,IAjBC,OAmBPxM,EAAQsH,KAAK,WAnBNoF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAqBDpQ,EAAQoQ,EAAAK,GAAEC,SAAWN,EAAAK,GAAEC,SAASC,KAAOP,EAAAK,GAAEzG,QAC/C1D,EAAKkK,SAAS,CAAEjB,MAAM,EAAOC,gBAAiBxP,IAtBvC,yBAAAoQ,EAAA1I,SAAAoI,EAAAtP,KAAA,aANnB,gBAAAoQ,GAAA,OAAAlB,EAAAxL,MAAA1D,KAAAY,YAAA,GAAAkF,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAuH,EAAAC,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAuH,EAAA,EAAAkC,IAAA,SAAAhT,MAAA,WAgCa,IAAAiT,EAC6BxQ,KAAKW,MAA/BoO,EADHyB,EACGzB,KAAMC,EADTwB,EACSxB,gBADTyB,EAEsDzQ,KAAKyN,MAAxDtL,EAFHsO,EAEGtO,OAAQC,EAFXqO,EAEWrO,WAAYC,EAFvBoO,EAEuBpO,WAAYC,EAFnCmO,EAEmCnO,eAExC,OACI+J,EAAAC,EAAAC,cAAA,OAAKC,UAAWkE,YAAG,WAAYjE,KAAOhP,OAClC4O,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOpN,cACvBgN,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACIC,SAAU5Q,KAAKiP,aACf4B,cAAe,CACX1O,OAAQA,EAAOwH,KAAK,MACpBvH,aACAC,aACAC,kBAEJwO,OAAQ,SAAAC,GAAA,IAAG9B,EAAH8B,EAAG9B,aAAH,OACJ5C,EAAAC,EAAAC,cAAA,QAAMqE,SAAU3B,EAAczC,UAAWkE,YAAG,WAAYjE,KAAOnN,OAC3D+M,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOvP,OAAvB,kBACAmP,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACIC,MAAM,kCACNC,SAAS,eACTC,WAAW,8CAEX9E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACIS,KAAK,SACLC,GAAG,eACHC,UAAWvD,GACXwD,SAAUpF,GACVK,UAAWC,KAAO/M,eAI1B2M,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAWC,MAAM,kBAAkBC,SAAS,wBACxC7E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACIS,KAAK,iBACLC,GAAG,uBACHC,UAAWpD,GACXsD,MAAI,EACJC,QAAS,CAAC,CAAER,MAAO,SAAU1T,MAAO,UAAY,CAAE0T,MAAO,MAAO1T,MAAO,WAI/E8O,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAWC,MAAM,cAAcC,SAAS,oBACpC7E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACIS,KAAK,aACLC,GAAG,mBACHC,UAAW/D,GACXgE,SAAUpF,MAIlBE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAWC,MAAM,cAAcC,SAAS,oBACpC7E,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACIS,KAAK,aACLC,GAAG,mBACHC,UAAW/D,GACXgE,SAAUpF,MAIlBE,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACI1Q,KAAK,SACL2Q,SAAU5C,EACV6C,KAAK,SACLJ,MAAI,EACJhF,UAAWC,KAAOoF,aAClBC,OAAQC,IAAOC,SAEdjD,EAAO,gBAAkB,WAG7BC,GACG3C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOhN,mBAAvB,iCACmCuP,EADnC,SAQhB3C,EAAAC,EAAAC,cAAC0F,GAAD,WAhHhB5D,EAAA,CAAoCnB,IAAMC,WA+H3B+E,mBATf,SAAyBvR,EAAOwR,GAC5B,MAAO,CACHhQ,OAAQxB,EAAMyC,MAAMiB,IAAI,UACxBjC,WAAYzB,EAAMyC,MAAMiB,IAAI,cAC5BhC,WAAY1B,EAAMyC,MAAMiB,IAAI,cAC5B/B,eAAgB3B,EAAMyC,MAAMiB,IAAI,oBAMpC,CACIoL,oBHtID,SAAAxI,GAAiF,IAAlD9E,EAAkD8E,EAAlD9E,OAAQC,EAA0C6E,EAA1C7E,WAAYC,EAA8B4E,EAA9B5E,WAAYC,EAAkB2E,EAAlB3E,eAOlE,OALAX,aAAayQ,QAAQ,0BAA2BjQ,EAAOwH,KAAK,MAC5DhI,aAAayQ,QAAQ,8BAA+BhQ,GACpDT,aAAayQ,QAAQ,8BAA+B/P,GACpDV,aAAayQ,QAAQ,kCAAmC9P,GAEjD,CACHtB,KAAMG,EACNgB,SACAC,aACAC,aACAC,mBG2HAoN,eHPD,WACH,sBAAAqB,EAAAjK,OAAAqI,EAAA,EAAArI,CAAAsI,EAAA9C,EAAA+C,KAAO,SAAAgD,EAAOC,EAAUC,GAAjB,IAAAC,EAAArQ,EAAAC,EAAAC,EAAAC,EAAA,OAAA8M,EAAA9C,EAAAqD,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA0C,EACwDD,IAAWnP,MAAMsP,WAApEvQ,EADLqQ,EACKrQ,OAAQC,EADboQ,EACapQ,WAAYC,EADzBmQ,EACyBnQ,WAAYC,EADrCkQ,EACqClQ,eADrCmQ,EAAA3C,KAAA,EAGG6C,KACDtO,IADC,GAAAT,OACMoH,GAAgB,CAAE3F,MAAOlD,EAAOyQ,QAASxQ,aAAYC,aAAYC,mBADvE,oBAEDK,IAAI,SAAU,QALhB,wBAAA8P,EAAAvL,SAAAmL,EAAArS,SAAP,gBAAA6S,EAAAC,GAAA,OAAA/B,EAAArN,MAAA1D,KAAAY,YAAA,KGEWsR,CAMb7D,oFC/JI0E,GAAgB,SAAAC,GAAG,MAAY,KAARA,QAAsBlS,IAARkS,GAEtBC,oLAWR,IAAAzD,EACqCxP,KAAKyN,MAAvCvQ,EADHsS,EACGtS,MAAOC,EADVqS,EACUrS,YAAa+V,EADvB1D,EACuB0D,UAE5B,OAAIH,GAAc7V,IAAU6V,GAAc5V,IAAgB+V,EAC/C7G,EAAAC,EAAAC,cAAA,YAIPF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOxP,MACnBoP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOvP,OAAQA,GAC/BmP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOtP,aAAcA,WArBZ+P,IAAMC,WAA1B8F,GAOVE,aAAe,CAClBD,WAAW,sCCXNE,GAAmB,SAACzS,EAAOkC,EAAUwQ,GAC9C,IAAI9V,EAAQoD,EAAMyC,MAAMJ,MAAM,CAAC,UAAWH,EAAU,OAAQwQ,IAI5D,OAHI9V,IAAU+V,MAAM/V,KAChBA,EAAQuO,WAAW9J,OAAOzE,GAAOwO,QAAQ,KAEtCxO,GAGEgW,UAAmCC,GAC5C,SAAC7S,EAAOuK,GAAR,OAAmBA,GACnB,SAAAvK,GAAK,OAAIA,EAAMyC,MAAMJ,MAAM,CAAC,aAC5B,SAACkI,EAAQxI,GACL,IAAM+Q,EAAqB,GAO3B,OANAvI,EAAO7G,IAAI,cAAe,IAAI5D,KAAkB0D,QAAQ,SAAAuP,GACpD,IAAM7Q,EAAW6Q,EAAWrP,IAAI,YAC1BgP,EAAQK,EAAW1Q,MAAM,CAAC,MAAO,UACvCyQ,EAAmBjJ,KAAK9H,EAAQM,MAAM,CAACH,EAAU,cAAewQ,OAG7DI,GAXiCD,CAa9C,SAAC7S,EAAOuK,GAAR,OAAmBA,EAAO7G,IAAI,QCtBzB,SAASsP,GAAiBC,GAA8B,IACvDC,EADqCC,EAAkBlT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAE3D,OAAQgT,GACJ,KAAK,UACDC,EAAQ,UACR,MACJ,KAAK,WACDA,EAAQ,UACR,MACJ,KAAK,SACDA,EAAQ,UACR,MACJ,KAAM,UACFA,EAAQ,UACR,MACJ,KAAM,UACFA,EAAQ,UACR,MACJ,KAAM,EACFA,EAAQ,UACR,MACJ,KAAK,IACDA,EAAQ,UACR,MACJ,QACIA,EAAQ,OAGhB,IAAKC,EACD,OAAOD,EAGX,OAAQD,GACJ,KAAK,WACDC,EAAQ,CAAC,UAAW,UAAW,WAC/B,MACJ,KAAM,WACFA,EAAQ,CAAC,UAAW,UAAW,WAC/B,MACJ,KAAK,WACDA,EAAQ,CAAC,UAAW,UAAW,WAC/B,MACJ,KAAM,WACFA,EAAQ,CAAC,UAAW,UAAW,WAC/B,MAEJ,QACIA,EAAQ,CAACA,EAAOA,GAGxB,OAAOA,ECxCJ,IAAME,GAAb,SAAAzF,GAAA,SAAAyF,IAAA,IAAAxF,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAA+T,GAAA,QAAAvF,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAAiN,IAAAjF,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACI9N,MAAQ,CACJqT,SAAS,GAFjBlO,EAcImO,gBAAkB,WAAM,IAAAzE,EACM1J,EAAK2H,MAAvBvC,EADYsE,EACZtE,OAAQ3N,EADIiS,EACJjS,MAEhBuI,EAAKkK,SAAS,CACVgE,SAAS,IAGb,IAAMlR,EAAMmI,GAAoBC,IAEnB,IAATpI,IACIoI,EAAO7G,IAAI,YAEX6P,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKoI,EAAO7G,IAAI,QAI/DgC,OAAO9I,KAAW8I,OAAO6E,EAAO7G,IAAI,QACpC6P,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKoI,EAAO7G,IAAI,QAEnE6P,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKoI,EAAO7G,IAAI,UAjCvFyB,EAuCIsO,cAAgB,WAAM,IACVlJ,EAAWpF,EAAK2H,MAAhBvC,OAERpF,EAAKkK,SAAS,CACVgE,SAAS,IAGb,IAAMlR,EAAMmI,GAAoBC,IAEnB,IAATpI,GAAcoI,EAAO7G,IAAI,aACzB6P,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKoI,EAAO7G,IAAI,SAjD/EyB,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAiN,EAAAzF,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAiN,EAAA,EAAAxD,IAAA,oBAAAhT,MAAA,WAKwB,IACR2N,EAAWlL,KAAKyN,MAAhBvC,OAER,OAAIlL,KAAKqU,iBACEnJ,EAAO7G,IAAI,YAAc6G,EAAOlI,MAAM,CAAC,gBAAiB,UAAY,KAExEkI,EAAO7G,IAAI,aAAe6G,EAAOlI,MAAM,CAAC,iBAAkB,UAAY,QAXrF,CAAAuN,IAAA,iBAAAhT,MAAA,SAAA0J,GAqDsD,IAAjCqN,EAAiCrN,EAAjCqN,MAAOC,EAA0BtN,EAA1BsN,OAAQC,EAAkBvN,EAAlBuN,eACpBtJ,EAAWlL,KAAKyN,MAAhBvC,OAEFuJ,EAAezU,KAAKqU,iBAE1B,GAAIG,EAAgB,CAChB,IAAIE,EACJ,OAAQxJ,EAAO7G,IAAI,SACf,IAAK,QACDqQ,EAAe,EACf,MACJ,IAAK,UACDA,EAAe,EACf,MACJ,IAAK,OACDA,EAAeH,EAAS,EAKhC,MAAO,CACHD,QACAC,SACAG,eACAC,gBACMhB,GADWc,EACMvJ,EAAOlI,MAAM,CAAC,gBAAiB,oBAC/BkI,EAAOlI,MAAM,CAAC,iBAAkB,qBAEvD6Q,MACMF,GADCc,EACgBvJ,EAAOlI,MAAM,CAAC,gBAAiB,cAC/BkI,EAAOlI,MAAM,CAAC,iBAAkB,gBAI/D,MAAO,CACH4R,OAAQ,EACRN,MAAQO,KAAKC,IAAIR,EAAOC,GAAUrJ,EAAO7G,IAAI,SAAY,EAAI,EAC7DkQ,OAAQM,KAAKC,IAAIR,EAAOC,GAAU,EAClCQ,OAAM,aAAAnR,OAAe+P,GAAiBzI,EAAO7G,IAAI,WACjDwP,MAAO7T,KAAKqU,iBACNV,IAA0C,IAAzBzI,EAAO7G,IAAI,UAAmB,EAAI,KACnDsP,GAAiBzI,EAAO7G,IAAI,UAClCsQ,gBAAiB3U,KAAKqU,iBAAmBV,GAAiBzI,EAAO7G,IAAI,UAAYsP,GAAiB,QA/F9G,CAAApD,IAAA,iBAAAhT,MAAA,WAmGqB,IACLyW,EAAYhU,KAAKW,MAAjBqT,QADKvD,EAEazQ,KAAKyN,MAAvBvC,EAFKuF,EAELvF,OAAQ3N,EAFHkT,EAEGlT,MAEhB,OAAO8I,OAAO9I,KAAW8I,OAAO6E,EAAO7G,IAAI,SAAW2P,IAvG9D,CAAAzD,IAAA,SAAAhT,MAAA,WA0Ga,IAAAyJ,EAAAhH,KACGkL,EAAWlL,KAAKyN,MAAhBvC,OAEFsJ,EAAwC,kBAAvBtJ,EAAO7G,IAAI,QAElC,OACIgI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,WAAamQ,EAAiB,GAAK,YAClEnI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO/P,iBACnB2P,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQzI,UAAWC,KAAO9P,eACrB,SAAAqR,GAAA,IAAAkH,EAAGZ,EAAHtG,EAAGsG,MAAOC,EAAVvG,EAAUuG,OAAV,OACGlI,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACIlF,UAAWkE,aAAEwE,EAAA,GAAApO,OAAAqO,GAAA,EAAArO,CAAAoO,EACRzI,KAAOjQ,QAAUgY,GADT1N,OAAAqO,GAAA,EAAArO,CAAAoO,EAERzI,KAAOhQ,aAAe+X,GAFdU,IAIbE,OAAQpO,EAAKqN,iBACbgB,YAAarO,EAAKiN,gBAClBqB,UAAWtO,EAAKoN,cAChBmB,MAAOvO,EAAKwO,eAAe,CAAElB,QAAOC,SAAQC,oBAE3CxN,EAAKyO,6BA/HtC1B,EAAA,CAAgC7G,IAAMC,WAiJvB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMkB,EAAQlB,EAASjH,OAAO7G,IAAI,SAC5BxB,EAAWsP,EAASjH,OAAO7G,IAAI,YACrC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,KAM7C,GAFWnB,CAGb6B,mCCvJW2B,GAAb,SAAApH,GAAA,SAAAoH,IAAA,IAAAnH,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAA0V,GAAA,QAAAlH,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAA4O,IAAA5G,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACIkH,aAAe,SAAApY,GAAS,IACZ2N,EAAWpF,EAAK2H,MAAhBvC,OAEFpI,EAAMmI,GAAoBC,GAC1B0K,EAAa1K,EAAO7G,IAAI,mBAC9B6P,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKvF,EAAOqY,IANvE9P,EASI+P,cAAgB,SAAAtY,GAAS,IACb2N,EAAWpF,EAAK2H,MAAhBvC,OAER,GAAIA,EAAO7G,IAAI,mBAAoB,CAC/B,IAAMvB,EAAMmI,GAAoBC,GAChCgJ,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKvF,KAdpEuI,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAA4O,EAAApH,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAA4O,EAAA,EAAAnF,IAAA,SAAAhT,MAAA,WAkBa,IAAAiS,EAC+BxP,KAAKyN,MAAjCvC,EADHsE,EACGtE,OAAQ3N,EADXiS,EACWjS,MAAOuY,EADlBtG,EACkBsG,SAEjBC,EAAclB,KAAKmB,IAAInB,KAAKC,IAAI9S,OAAOzE,GAAQ2N,EAAO7G,IAAI,QAAS6G,EAAO7G,IAAI,QACpF,OACIgI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,WAAcyR,GAAY,SAAW3Y,YAAaI,IACjF8O,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOxO,iBACnBoO,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACI1Y,MAAOwY,EACPG,eAAe,EACfpB,IAAK5J,EAAO7G,IAAI,OAChB2R,IAAK9K,EAAO7G,IAAI,OAChB8R,SAAUnW,KAAK2V,aACfS,UAAWpW,KAAK6V,cAChBC,SAAUA,UAjClCJ,EAAA,CAAgCxI,IAAMC,WAiDvB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,KAM7C,GAFWnB,CAGbwD,yBCtDWW,GAAb,SAAA/H,GAAA,SAAA+H,IAAA,OAAAvP,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAqW,GAAAvP,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAuP,GAAA3S,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAuP,EAAA/H,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAuP,EAAA,EAAA9F,IAAA,cAAAhT,MAAA,WACkB,IAAAiS,EACgBxP,KAAKyN,MAAvBlQ,EADEiS,EACFjS,MAAO2N,EADLsE,EACKtE,OAEf,OACImB,EAAAC,EAAAC,cAAA,QACI+J,wBAAyB,CACrBC,OAAQnL,GAAkB7N,EAAO2N,EAAO7G,IAAI,yBAPhE,CAAAkM,IAAA,SAAAhT,MAAA,WAaa,IAGDiZ,EAOAC,EAVChG,EACqBzQ,KAAKyN,MAAvBvC,EADHuF,EACGvF,OAAQ3N,EADXkT,EACWlT,MAGe,UAA3B2N,EAAO7G,IAAI,YACXmS,EAAQ,OAC0B,UAA3BtL,EAAO7G,IAAI,cAClBmS,EAAQ,QAIwB,WAAhCtL,EAAO7G,IAAI,iBACXoS,EAAY,SAC2B,UAAhCvL,EAAO7G,IAAI,mBAClBoS,EAAY,SAGhB,IAAM5C,EH4CP,SAA6B3I,EAAQ3N,GACxC,IAAMmZ,EAAa/C,GAAiBzI,EAAO7G,IAAI,UAAU,GACnDsS,GAAmBpZ,EAAQ2N,EAAO7G,IAAI,QAAU6G,EAAO7G,IAAI,OAAS6G,EAAO7G,IAAI,OACrF,OAAIiP,MAAMqD,GACCD,EAAWA,EAAW7V,OAAS,GAEnC+V,KAAuBF,EAAvBE,CAAmCD,GGlDxBE,CAAoB3L,EAAQ3N,GAE1C,OACI8O,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAStB,EAAO7G,IAAI,UACnCgI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOlP,MAAOgY,MAAO,CAAEkB,YAAW5C,QAAO2C,aACpDxW,KAAK8W,oBApC1BT,EAAA,CAA0CnJ,IAAMC,WAmDjC+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,KAM7C,GAFWnB,CAGbmE,IC3DmBU,oLACR,IACG7L,EAAWlL,KAAKyN,MAAhBvC,OACR,OACImB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBADJ,IACqBrB,EAAO7G,IAAI,gBALH6I,IAAMC,6FCK1B6J,8LAYEC,EAAWC,EAAWC,GACjCF,EAAUG,gBAAkBpX,KAAKyN,MAAM2J,eACvCpX,KAAKqX,oDAIC,IAAA7H,EACiDxP,KAAKyN,MAAxD6J,EADE9H,EACF8H,YAAa7D,EADXjE,EACWiE,mBAAoB2D,EAD/B5H,EAC+B4H,cAEnCG,EAAmB,GACzBD,EAAYnT,QAAQ,SAACuP,EAAY8D,GAC7B,IAAIxW,EACJ,OAAQ0S,EAAWrP,IAAI,cACnB,IAAK,OACDrD,EAAO,OACP,MACJ,IAAK,MACDA,EAAO,MACP,MACJ,IAAK,cACDA,EAAO,OACP,MACJ,QACIA,EAAO,OAGf,IAAKoW,EAAc7M,SAASiN,GAAM,CAC9B,IAAMC,EAAS9D,GAAiBD,EAAWrP,IAAI,UAAU,GAEnDqT,EAAkB,CACpBzG,MAAOyC,EAAWrP,IAAI,SACtBwP,MAAO4D,EAAO,GACdE,cAAeF,EACfhS,KAAMgO,EAAmB+D,GACzBI,SAAUlE,EAAWrP,IAAI,aACzBwT,YAAa,EACbC,SAAmB,QAAT9W,EACVA,QAGJ,OAAQ0S,EAAWrP,IAAI,eACnB,IAAK,SACDqT,EAAgBK,YAAc,CAACrE,EAAWrP,IAAI,WAAY,GAAIqP,EAAWrP,IAAI,WAAY,IACzF,MAEJ,IAAK,SACDqT,EAAgBM,WAAa,CACzB,IAAMtE,EAAWrP,IAAI,WAAY,KACjC,IAAMqP,EAAWrP,IAAI,WAAY,IAW7CkT,EAAiB/M,KAAKkN,MAI9B1X,KAAKzB,MAAMuS,OAAOyG,+CAGF,IAAA9G,EACqBzQ,KAAKyN,MAAlC6G,EADQ7D,EACR6D,MAAOC,EADC9D,EACD8D,OADC9D,EACOwH,UACvBjY,KAAKzB,MAAQ,IAAI2Z,KAAqB,CAClCvL,OAAQ3M,KAAKmY,aACbC,cAAe,MACf9D,QACAC,SACA8D,cAAc,IAElBrY,KAAKqX,+CAGA,IAAAvR,EAAA9F,KAAAsY,EACqBtY,KAAKyN,MAAvB6G,EADHgE,EACGhE,MAAOC,EADV+D,EACU/D,OAEf,OACIlI,EAAAC,EAAAC,cAAA,OACIC,UAAWC,KAAOvO,eAClBqX,MAAO,CAAEjB,QAAOC,UAChBgE,IAAK,SAAAtO,GACDnE,EAAKqS,aAAelO,YAlGMiD,IAAMC,gCCF/BqL,8MAKjBC,gBAAkB,SAAAC,GAAK,IACXC,EAAgB7S,EAAK2H,MAArBkL,YACAnB,EAAQkB,EAAEE,cAAcC,QAAxBrB,IACRmB,EAAY3W,OAAOwV,6EAGd,IAAAxQ,EAAAhH,KAAAwP,EACkCxP,KAAKyN,MAApC6J,EADH9H,EACG8H,YAAaF,EADhB5H,EACgB4H,cAErB,OACI/K,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOrP,QAClBka,EAAY5Y,IAAI,SAACgV,EAAY8D,GAC1B,IAAM3D,EAAQF,GAAiBD,EAAWrP,IAAI,UAAU,GAExD,OACIgI,EAAAC,EAAAC,cAAA,OAAKgE,IAAKiH,EAAKhL,UAAWC,KAAOpP,WAAYyb,QAAS9R,EAAKyR,gBAAiBM,WAAUvB,GAClFnL,EAAAC,EAAAC,cAAA,OACIC,UAAWC,KAAOnP,WAClBiY,MAAO,CACHZ,gBAAiByC,EAAc7M,SAASiN,QAAO1W,EAAY+S,EAAM,GACjEkB,OAAM,aAAAnR,OAAeiQ,EAAM,OAGlCH,EAAWrP,IAAI,oBA5BH6I,IAAMC,0CCD1B6L,8MACjBC,qBAAuB,SAAAP,IAEnBQ,EAD6BpT,EAAK2H,MAA1ByL,kBACSlX,OAAO0W,EAAEE,cAAcC,QAAQM,oFAG3C,IAAAnS,EAAAhH,KACL,OACIqM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOtO,SACnBkO,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAa7D,MAAO,CAAE8D,SAAU,KAAO7H,MAAI,GACtC,CACG,CAAC,KAAM,MACP,CAAC,KAAM,OACP,CAAC,MAAO,OACR,CAAC,KAAM,OACP,CAAC,KAAM,SACT9S,IAAI,SAAAuI,GAAA,IAAA+G,EAAAlH,OAAAsC,GAAA,EAAAtC,CAAAG,EAAA,GAAEgK,EAAFjD,EAAA,GAASmL,EAATnL,EAAA,UACF3B,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAQnB,IAAKU,EAAO6H,QAAS9R,EAAKiS,qBAAsBK,gBAAeH,EAAUI,OAAK,GACjFtI,cAlBa/D,IAAMC,WCSnCqM,GAAb,SAAAlL,GAAA,SAAAkL,IAAA,IAAAjL,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAwZ,GAAA,QAAAhL,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAA0S,IAAA1K,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACI9N,MAAQ,CACJ8Y,gBAAgB,EAChBC,kBAAmB,IAH3B5T,EAuBI6T,qBAAuB,SAAAR,GACfrT,EAAK8T,kBAAoB9T,EAAK8T,iBAAiBrb,OAC/CuH,EAAK8T,iBAAiBrb,MAAMsb,iBAAiBV,IAzBzDrT,EA6BIgU,sBAAwB,SAAAC,GAAU,IACxBL,EAAsB5T,EAAKnF,MAA3B+Y,kBAEFA,EADAA,EAAkBnP,SAASwP,GACPL,EAAkBjP,OAAO,SAAAR,GAAC,OAAIA,IAAM8P,IAEvC,GAAAnW,OAAAkD,OAAAkT,GAAA,EAAAlT,CAAO4S,GAAP,CAA0BK,IAE/CjU,EAAKkK,SAAS,CAAE0J,uBApCxB5T,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAA0S,EAAAlL,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAA0S,EAAA,EAAAjJ,IAAA,aAAAhT,MAAA,eAAA0c,EAAAnT,OAAAqI,EAAA,EAAArI,CAAAsI,EAAA9C,EAAA+C,KAAA,SAAAC,IAAA,IAAAE,EAAAtE,EAAAgP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7G,EAAAL,EAAA,OAAAjE,EAAA9C,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAN,EAO0CxP,KAAKyN,MAA/BvC,EAPhBsE,EAOgBtE,OAAQgP,EAPxB1K,EAOwB0K,cAPxBC,GAAA,EAAAC,GAAA,EAAAC,OAAAvZ,EAAA8O,EAAAC,KAAA,EAAAyK,EASiCpP,EAAO7G,IAAI,cAAe,IAAI5D,KAT/D+Z,OAAAC,YAAA,UAAAN,GAAAI,EAAAD,EAAAxK,QAAA4K,KAAA,CAAA9K,EAAAE,KAAA,gBASmB4D,EATnB6G,EAAAhd,MAUkB8V,EAAQK,EAAW1Q,MAAM,CAAC,MAAO,UAVnD4M,EAAAE,KAAA,GAWkBoK,EAAc,CAAErX,SAAU6Q,EAAWrP,IAAI,YAAavB,IAAKuQ,IAX7E,QAAA8G,GAAA,EAAAvK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAAAwK,GAAA,EAAAC,EAAAzK,EAAAK,GAAA,QAAAL,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAsK,GAAA,MAAAG,EAAAK,QAAAL,EAAAK,SAAA,WAAA/K,EAAAC,KAAA,IAAAuK,EAAA,CAAAxK,EAAAE,KAAA,eAAAuK,EAAA,eAAAzK,EAAAgL,OAAA,mBAAAhL,EAAAgL,OAAA,YAcQ5a,KAAKgQ,SAAS,CACVyJ,gBAAgB,IAf5B,yBAAA7J,EAAA1I,SAAAoI,EAAAtP,KAAA,wDAAAia,EAAAvW,MAAA1D,KAAAY,YAAA,KAAA2P,IAAA,oBAAAhT,MAAA,WAoBQyC,KAAK6a,eApBb,CAAAtK,IAAA,cAAAhT,MAAA,WAuCkB,IAAAyJ,EAAAhH,KAAAyQ,EAC6BzQ,KAAKyN,MAApCvC,EADEuF,EACFvF,OAAQuI,EADNhD,EACMgD,mBACRiG,EAAsB1Z,KAAKW,MAA3B+Y,kBAEFzB,EAAY/M,EAAO7G,IAAI,eAE7B,OAAK6G,EAAO7G,IAAI,eAKZgI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO3N,QACnBuN,EAAAC,EAAAC,cAACuO,GAAD,CACIxD,YAAapM,EAAO7G,IAAI,eACxBsU,YAAa3Y,KAAK8Z,sBAClB1C,cAAesC,IAEnBrN,EAAAC,EAAAC,cAACwO,GAAD,CAAc7B,iBAAkBlZ,KAAK2Z,wBAEzCtN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOlO,OACnB8N,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,KACK,SAAAhO,GAAA,IAAGqN,EAAHrN,EAAGqN,MAAOC,EAAVtN,EAAUsN,OAAV,QACKA,GACElI,EAAAC,EAAAC,cAACyO,GAAD,CACI1D,YAAapM,EAAO7G,IAAI,eACxBoP,mBAAoBA,EACpBwH,gBAAiBjU,EAAKiU,gBACtBC,eAAgBlU,EAAKkU,eACrBjD,UAAWA,EACX3D,MAAOA,EACPC,OAAQA,EACR6C,cAAesC,EACfnB,IAAK,SAAAtO,GACDjD,EAAK4S,iBAAmB3P,SA3B7CoC,EAAAC,EAAAC,cAAA,4BA9CnB,CAAAgE,IAAA,gBAAAhT,MAAA,WAqFQ,OACI8O,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOnO,SACnB+N,EAAAC,EAAAC,cAAC4O,GAAA,EAAD,SAvFhB,CAAA5K,IAAA,SAAAhT,MAAA,WA4Fa,IAAAwK,EAAA/H,KACGyZ,EAAmBzZ,KAAKW,MAAxB8Y,eACAvO,EAAWlL,KAAKyN,MAAhBvC,OAER,OACImB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CACI9X,MACImP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOjO,sBACnB6N,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,KAAOhO,aAAcyM,EAAO7G,IAAI,UACjDgI,EAAAC,EAAAC,cAAA,OACIgM,IAAK,SAAAtO,GACDlC,EAAKmT,eAAiBjR,MAKtC9M,YACIkP,EAAAC,EAAAC,cAAA,OACIgM,IAAK,SAAAtO,GACDlC,EAAKkT,gBAAkBhR,KAInCiJ,WAAW,IAEduG,EAAiBzZ,KAAKqX,cAAgBrX,KAAKob,qBAtH5D5B,EAAA,CAAuCtM,IAAMC,WAkI9B+E,mBANf,SAAyBvR,EAAOwR,GAC5B,MAAO,CACHsB,mBAAoBF,GAAiC5S,EAAOwR,EAASjH,UAMzE,CACIgP,cdwCD,SAAAmB,GAA0C,IAAjBxY,EAAiBwY,EAAjBxY,SAAUC,EAAOuY,EAAPvY,IACtC,sBAAAwY,EAAAxU,OAAAqI,EAAA,EAAArI,CAAAsI,EAAA9C,EAAA+C,KAAO,SAAAkM,EAAOjJ,EAAUC,GAAjB,IAAAiJ,EAAApZ,EAAAC,EAAAC,EAAA+C,EAAAoW,EAAAC,EAAA,OAAAtM,EAAA9C,EAAAqD,KAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,cAAA0L,EACgDjJ,IAAWnP,MAAMsP,WAA5DtQ,EADLoZ,EACKpZ,WAAYC,EADjBmZ,EACiBnZ,WAAYC,EAD7BkZ,EAC6BlZ,eAE1B+C,EAAQkN,IAAWnP,MAAMJ,MAAM,CAAC,UAAWH,EAAU,UAHxD8Y,EAAA9L,KAAA,EAAA8L,EAAA7L,KAAA,EAMmB6C,KACbtO,IADa,GAAAT,OAEPoH,GAAgB,CACf3F,QACAjD,aACAC,aACAC,mBANM,UAAAsB,OAOCd,EAAI8Y,gBAElBC,aAAa,QAfnB,cAMOJ,EANPE,EAAAG,KAiBOJ,EAAc,SAAAjW,GAAI,OACpB,IAAIsW,QAAQ,SAACC,EAASC,GAClB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACZ,IAAMC,EAAMC,KAAKC,OAAOL,EAAOhY,OAAQ,CAAEsY,GAAI,WACvCtZ,EAAU0T,KAAgByF,GAAK3d,IAAI,SAAA+d,GAAI,MAAI,CAACza,OAAOya,EAAK,IAAKza,OAAOya,EAAK,OAC/EnK,EAAS,CACLtR,KAAMM,EACNuB,WACAC,MACAI,YAEJ8Y,KAEJE,EAAOQ,kBAAkBjX,MA/BlCkW,EAAA7L,KAAA,EAiCO4L,EAAYD,EAAIkB,MAjCvB,OAAAhB,EAAA7L,KAAA,iBAAA6L,EAAA9L,KAAA,GAAA8L,EAAA1L,GAAA0L,EAAA,SAmCCrJ,EAAS,CACLtR,KAAMM,EACNuB,WACAC,MACAI,QAAS,KAvCd,yBAAAyY,EAAAzU,SAAAqU,EAAAvb,KAAA,aAAP,gBAAA4c,EAAAC,GAAA,OAAAvB,EAAA5X,MAAA1D,KAAAY,YAAA,Kc5CWsR,CAKbsH,mEC3IWsD,GAAb,SAAAxO,GAAA,SAAAwO,IAAA,IAAAvO,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAA8c,GAAA,QAAAtO,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAAgW,IAAAhO,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACIsO,kBAAoB,SAAAlJ,GAAS,IACjB3I,EAAWpF,EAAK2H,MAAhBvC,OAEF8R,EAAS9R,EAAOlI,MAAM,CAAC,OAAQ,EAAG,UAClCia,EAAS/R,EAAOlI,MAAM,CAAC,OAAQ,EAAG,UAClCka,EAAShS,EAAOlI,MAAM,CAAC,OAAQ,EAAG,WAExB,IAAZga,GACA9I,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAa6I,EAAQnJ,EAAMsJ,IAAIC,IAEzD,IAAZH,GACA/I,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAa8I,EAAQpJ,EAAMsJ,IAAIE,IAEzD,IAAZH,GACAhJ,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAa+I,EAAQrJ,EAAMsJ,IAAIG,IAfjFxX,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAgW,EAAAxO,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAgW,EAAA,EAAAvM,IAAA,SAAAhT,MAAA,WAmBa,IAAAiS,EAC+CxP,KAAKyN,MAAjDvC,EADHsE,EACGtE,OAAQqS,EADX/N,EACW+N,UAAWC,EADtBhO,EACsBgO,UAAWC,EADjCjO,EACiCiO,UAEhC5J,EAAQ6J,KAAO,CAACH,EAAWC,EAAWC,IAAYE,MAExD,OACItR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,UAAY,WAC3CgI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOrO,sBACnBiO,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CAAauR,SAAS,EAAOhK,MAAOA,EAAOsC,SAAUnW,KAAK+c,0BA5B9ED,EAAA,CAA6B5P,IAAMC,WAgDpB+E,mBAbf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/B2Y,EAAS7K,EAASjH,OAAOlI,MAAM,CAAC,OAAQ,EAAG,UAC3Cia,EAAS9K,EAASjH,OAAOlI,MAAM,CAAC,OAAQ,EAAG,UAC3Cka,EAAS/K,EAASjH,OAAOlI,MAAM,CAAC,OAAQ,EAAG,UAEjD,MAAO,CACHua,UAAWnK,GAAiBzS,EAAOkC,EAAUma,GAC7CQ,UAAWpK,GAAiBzS,EAAOkC,EAAUoa,GAC7CQ,UAAWrK,GAAiBzS,EAAOkC,EAAUqa,KAMjD,GAFWhL,CAGb4K,mCCjDWgB,GAAb,SAAAxP,GAAA,SAAAwP,IAAA,IAAAvP,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAA8d,GAAA,QAAAtP,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAAgX,IAAAhP,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACIsP,gBAAkB,aADtBjY,EAGIkY,WAAa,SAACtF,EAADzR,GAA2B,IAArBgX,EAAqBhX,EAArBgX,OAAQC,EAAajX,EAAbiX,OAAa1O,EACK1J,EAAK2H,MAAtCvC,EAD4BsE,EAC5BtE,OAAQqS,EADoB/N,EACpB+N,UAAWC,EADShO,EACTgO,UAKvBW,IAHSrY,EAAKsY,aAAepc,OAAOub,IAAczX,EAAKsY,aAAgBtY,EAAK8O,OAGnEqJ,EACTI,IAHSvY,EAAKwY,aAAetc,OAAOwb,IAAc1X,EAAKwY,aAAgBxY,EAAK8O,QAAU,EAG7EsJ,EAEbC,EAAKtJ,KAAKmB,IAAInB,KAAKC,IAAIqJ,EAAIrY,EAAK8O,SAAU9O,EAAK8O,QAC/CyJ,EAAKxJ,KAAKmB,IAAInB,KAAKC,IAAIuJ,EAAIvY,EAAK8O,SAAU9O,EAAK8O,QAE/C,IAAM2J,EAAW1J,KAAK2J,KAAKL,EAAKA,EAAKE,EAAKA,GACtCE,EAAWzY,EAAK8O,SAChBuJ,GAAMrY,EAAK8O,OAAS2J,EACpBF,GAAMvY,EAAK8O,OAAS2J,GAGxB,IAAMvB,EAAS9R,EAAOlI,MAAM,CAAC,OAAQ,EAAG,UAClCia,EAAS/R,EAAOlI,MAAM,CAAC,OAAQ,EAAG,WAExB,IAAZga,GACA9I,GAAchJ,EAAO7G,IAAI,aAAa8P,aAClC6I,EACAnI,KAAK4J,MAAM3Y,EAAKsY,aAAgBD,EAAKrY,EAAK8O,OAAU9O,EAAKsY,gBAGjD,IAAZnB,GACA/I,GAAchJ,EAAO7G,IAAI,aAAa8P,aAClC8I,EACApI,KAAK4J,MAAM3Y,EAAKwY,aAAgBD,EAAKvY,EAAK8O,OAAU9O,EAAKwY,gBAjCzExY,EAsCI4Y,WAAa,WAAM,IACPxT,EAAWpF,EAAK2H,MAAhBvC,OAEF8R,EAAS9R,EAAOlI,MAAM,CAAC,OAAQ,EAAG,UAClCia,EAAS/R,EAAOlI,MAAM,CAAC,OAAQ,EAAG,WAExB,IAAZga,GACA9I,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAa6I,EAAQlX,EAAKsY,eAEpD,IAAZnB,GACA/I,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAa8I,EAAQnX,EAAKwY,eAhD5ExY,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAgX,EAAAxP,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAgX,EAAA,EAAAvN,IAAA,iBAAAhT,MAAA,SAoDmBohB,GAAQ,IACXzT,EAAWlL,KAAKyN,MAAhBvC,OACR,OAAQA,EAAOlI,MAAM,CAAC,OAAQ2b,EAAQ,QAAUzT,EAAOlI,MAAM,CAAC,OAAQ2b,EAAQ,QAAU,GAAK,IAtDrG,CAAApO,IAAA,aAAAhT,MAAA,WA2DQ,OADAyC,KAAK4e,cAA6B9d,IAAlBd,KAAK4e,SAAyB5e,KAAK4e,SAAW5e,KAAK6e,eAAe,GAC3E7e,KAAK4e,WA3DpB,CAAArO,IAAA,aAAAhT,MAAA,WAgEQ,OADAyC,KAAK8e,cAA6Bhe,IAAlBd,KAAK8e,SAAyB9e,KAAK8e,SAAW9e,KAAK6e,eAAe,GAC3E7e,KAAK8e,WAhEpB,CAAAvO,IAAA,SAAAhT,MAAA,WAmEa,IAAAyJ,EAAAhH,KAAAyQ,EACoCzQ,KAAKyN,MAAtCvC,EADHuF,EACGvF,OAAQqS,EADX9M,EACW8M,UAAWC,EADtB/M,EACsB+M,UAE3B,OACInR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CACI9X,MAAOgO,EAAO7G,IAAI,UAAY,WAC9BlH,YACIkP,EAAAC,EAAAC,cAAA,WACKgR,EACDlR,EAAAC,EAAAC,cAAA,WACCiR,KAIbnR,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO5P,eACnBwP,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQzI,UAAWC,KAAO9P,eACrB,SAAAqR,GAAuB,IAApBsG,EAAoBtG,EAApBsG,MAAOC,EAAavG,EAAbuG,OAEDwK,EAAWlK,KAAKC,IAAIR,EAAOC,GAAUyK,GACrCC,EAAYF,EAAW,EACvBnK,EAASqK,EAAY,EAE3BjY,EAAK4N,OAASA,EAEd,IAAMsK,IAAOlY,EAAKoX,aAAepc,OAAOub,IAAcvW,EAAKoX,aAAgBpX,EAAK4N,OAC1EuK,IAAOnY,EAAKsX,aAAetc,OAAOwb,IAAcxW,EAAKsX,aAAgBtX,EAAK4N,QAAU,EAE1F,OACIvI,EAAAC,EAAAC,cAAA,OACIC,UAAWC,KAAO7P,eAClB2Y,MAAO,CAAEjB,MAAOyK,EAAUxK,OAAQwK,EAAUnK,OAbnC,KAeTvI,EAAAC,EAAAC,cAAC6S,GAAA,cAAD,CACIC,QAASrY,EAAK+W,gBACduB,OAAQtY,EAAKgX,WACbuB,OAAQvY,EAAK0X,YAEbrS,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACIlF,UAAWC,KAAO3P,MAClByY,MAAO,CACHjB,MAAO2K,EAAYD,GACnBzK,OAAQ0K,EAAYD,GACpBQ,KAAM5K,EAzBT,GA0BG6K,IAAK7K,EA1BR,GA2BG8K,UAAS,aAAA9b,OAAesb,EAAf,QAAAtb,OAAuBub,EAAvB,OACTxK,gBAAiBhB,GAAiBzI,EAAO7G,IAAI,UAC7C0Q,OAAM,+BAlHtD+I,EAAA,CAAyC5Q,IAAMC,WA2IhC+E,mBAXf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/B2Y,EAAS7K,EAASjH,OAAOlI,MAAM,CAAC,OAAQ,EAAG,UAC3Cia,EAAS9K,EAASjH,OAAOlI,MAAM,CAAC,OAAQ,EAAG,UAEjD,MAAO,CACHua,UAAWnK,GAAiBzS,EAAOkC,EAAUma,GAC7CQ,UAAWpK,GAAiBzS,EAAOkC,EAAUoa,KAMjD,GAFW/K,CAGb4L,wDCpJmB6B,8MAKjBC,YAAc,SAAA3Y,GAAoC,IAAjCuF,EAAiCvF,EAAjCuF,UAAW+I,EAAsBtO,EAAtBsO,MAAU9H,EAAY3G,OAAA4G,EAAA,EAAA5G,CAAAG,EAAA,uBAC9C,OAAOoF,EAAAC,EAAAC,cAAA,MAAAzF,OAAA+Y,OAAA,CAAKrT,UAAWkE,YAAGlE,EAAWC,KAAOpO,OAAQkX,MAAOA,GAAW9H,6EAGjE,IAAA+B,EAC2BxP,KAAKyN,MAA7BqS,EADHtQ,EACGsQ,UAAcrS,EADjB3G,OAAA4G,EAAA,EAAA5G,CAAA0I,EAAA,eAGL,OACInD,EAAAC,EAAAC,cAACwT,GAAA,WAADjZ,OAAA+Y,OAAA,CACIG,sBAAuBhgB,KAAK4f,YAC5BK,oBAAqBjgB,KAAK4f,YAC1BrH,IAAK,SAAAtO,GAAC,OAAI6V,EAAU7V,KAChBwD,WAjBmBN,aAAlBwS,GACVxM,aAAe,CAClB2M,UAAW,cCIZ,IAAMI,GAAb,SAAA5R,GAAA,SAAA4R,IAAA,IAAA3R,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAkgB,GAAA,QAAA1R,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAAoZ,IAAApR,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACI9N,MAAQ,CACJwf,WAAY,IAFpBra,EAKIsa,eAAgB,EALpBta,EAOIua,gBAAkB,WAAM,IACZnV,EAAWpF,EAAK2H,MAAhBvC,OACAiV,EAAera,EAAKnF,MAApBwf,WAEFrd,EAAMmI,GAAoBC,IACnB,IAATpI,IACAgD,EAAKsa,eAAgB,EACrBlM,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKqd,IAG5Dra,EAAKkK,SAAS,CAAEmQ,WAAY,MAjBpCra,EA4BIwa,kBAAoB,SAAA5H,GAChB,IAAMyH,EAAazH,EAAEE,cAAcrb,MACnCuI,EAAKkK,SAAS,CAAEmQ,gBA9BxBra,EAiCIya,eAAiB,SAAA7H,GAEb,GAAgB,MADAA,EAAE8H,QAAU9H,EAAE8H,QAAU9H,EAAE+H,OAItC,OAFA3a,EAAKua,mBAEE,GAtCnBva,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAoZ,EAAA5R,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAoZ,EAAA,EAAA3P,IAAA,qBAAAhT,MAAA,SAoBuB0Z,EAAWC,EAAWC,GACjCF,EAAUyJ,kBAAoB1gB,KAAKyN,MAAMiT,iBACrC1gB,KAAKyN,MAAMvC,OAAO7G,IAAI,iBACtBrE,KAAK2gB,gBAAgBC,mBAvBrC,CAAArQ,IAAA,wBAAAhT,MAAA,WA0C4B,IAAAyJ,EAAAhH,KAAAwP,EACgBxP,KAAKyN,MAAjCiT,EADYlR,EACZkR,gBAAiBxV,EADLsE,EACKtE,OACrBrN,EAAS,GAab,OAZI6iB,GACAA,EAAgBvc,QAAQ,SAAC0c,EAAarJ,GAC9BxQ,EAAKoZ,eAAiB5I,IAAQkJ,EAAgBI,KAAO,IACrDjjB,GAAU,KACVmJ,EAAKoZ,eAAgB,GAEzBviB,GAAUgjB,EACN3V,EAAO7G,IAAI,mBACXxG,GAAU,UAIfA,IAzDf,CAAA0S,IAAA,SAAAhT,MAAA,WA4Da,IAAAwK,EAAA/H,KACGkL,EAAWlL,KAAKyN,MAAhBvC,OACAiV,EAAengB,KAAKW,MAApBwf,WACFY,EAAkB7V,EAAO7G,IAAI,mBAEnC,OACIgI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO7O,iBACnByO,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,KACK,SAAAhO,GAAA,IAAGqN,EAAHrN,EAAGqN,MAAOC,EAAVtN,EAAUsN,OAAV,OACGlI,EAAAC,EAAAC,cAACyU,GAAD,CACIzL,MAAO,CAAEhB,SAAQD,SACjBwL,UAAW,SAAA7V,GACPlC,EAAK4Y,gBAAkB1W,IAG3BoC,EAAAC,EAAAC,cAAA,OAAKC,UAAWkE,YAAG,iBAAkBjE,KAAO5O,SACvCkK,EAAKkZ,wBADV,qDAQfF,GACG1U,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACIsT,YAAY,YACZ3jB,MAAO4iB,EACPhK,SAAUnW,KAAKsgB,kBACfa,WAAYnhB,KAAKugB,eACjBa,aAAc/U,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAQE,KAAK,YAAYyP,SAAS,EAAMvI,QAAS9Y,KAAKqgB,yBA1F5FH,EAAA,CAAkChT,IAAMC,WA4GzB+E,mBAVf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAElC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,GACzCqN,gBAAiB/f,EAAMyC,MAAMJ,MAAM,CAAC,UAAWH,EAAU,mBAAoBwQ,MAMjF,GAFWnB,CAGbgO,ICrHWoB,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAxa,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAshB,GAAAxa,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAwa,GAAA5d,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAwa,EAAAC,GAAAD,EAAA,CAAwC5L,IAA3B4L,GACFnO,aAAe,CAClB2C,UAAU,GAYH5D,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,KAM7C,GAFWnB,CAGboP,yBChBWE,GAAb,SAAAlT,GAAA,SAAAkT,IAAA,OAAA1a,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAwhB,GAAA1a,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAA0a,GAAA9d,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAA0a,EAAAlT,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAA0a,EAAA,EAAAjR,IAAA,cAAAhT,MAAA,SACgBohB,GAAQ,IAAAnP,EACmBxP,KAAKyN,MAAhCgU,EADQjS,EACRiS,OAAQC,EADAlS,EACAkS,OAAQxW,EADRsE,EACQtE,OAElB3N,EAAmB,IAAXohB,EAAe8C,EAASC,EAEtC,OACIrV,EAAAC,EAAAC,cAAA,QACI+J,wBAAyB,CACrBC,OAAQnL,GAAkB7N,EAAO2N,EAAO7G,IAAP,iBAAAT,OAA4B+a,IAApC,MAAA/a,OAAqD+a,SATlG,CAAApO,IAAA,SAAAhT,MAAA,WAgBQ,OACI8O,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOlP,OACnB8O,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOjP,MAAOwC,KAAK8W,YAAY,IAC/CzK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOjP,MAAOwC,KAAK8W,YAAY,UApBnE0K,EAAA,CAAoCtU,IAAMC,WAqC3B+E,mBAVf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/B2Y,EAAS7K,EAASjH,OAAOlI,MAAM,CAAC,OAAQ,EAAG,UAC3Cia,EAAS9K,EAASjH,OAAOlI,MAAM,CAAC,OAAQ,EAAG,UACjD,MAAO,CACHye,OAAQrO,GAAiBzS,EAAOkC,EAAUma,GAC1C0E,OAAQtO,GAAiBzS,EAAOkC,EAAUoa,KAM9C,GAFW/K,CAGbsP,6CCrCWG,GAAb,SAAArT,GAAA,SAAAqT,IAAA,OAAA7a,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAA2hB,GAAA7a,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAA6a,GAAAje,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAA6a,EAAArT,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAA6a,EAAA,EAAApR,IAAA,cAAAhT,MAAA,WAUkB,IAAAuI,EAAA9F,KAAAwP,EACiCxP,KAAKyN,MAAxC6G,EADE9E,EACF8E,MAAOC,EADL/E,EACK+E,OAAQO,EADbtF,EACasF,IAAKkB,EADlBxG,EACkBwG,IAAKnC,EADvBrE,EACuBqE,MAQ3BtV,EANMqY,KACA5W,KAAKmY,cACZyJ,OAAO,OACPC,KAAK,QAASvN,GACduN,KAAK,SAAUtN,GAEFqN,OAAO,KAAKC,KAAK,YAArB,aAAAje,OAA+C0Q,EAAQ,EAAvD,MAAA1Q,OAA6D2Q,EAAS,IAAtE,MAGRuN,EAASjN,KAAKC,IAAIR,EAAOC,GAAU,IAAMwN,GAEzCC,EAAMpL,OAASqL,aAAaF,IAElCxjB,EACKqjB,OAAO,QACPC,KAAK,QAASnR,YAAG,WAAYjE,KAAO3O,WACpC+jB,KACG,IACAG,EAAI,CACAE,YAAaJ,EAXP,GAYNK,YAAaL,EACbM,YAAavN,KAAKwN,GAAK,IACvBC,SAAUzN,KAAKwN,GAAK,OAGhC9jB,EACKqjB,OAAO,QACPC,KAAK,QAASnR,YAAG,YAAajE,KAAO8V,YACrCV,KAAK,OAAQlO,GAAiBE,IACnCtV,EACKqjB,OAAO,iBACPC,KAAK,QAASC,GACdD,KAAK,SAAU,IACfA,KAAK,KAAMC,EAAS,GACpBD,KAAK,KAAM,IACXD,OAAO,aACPC,KAAK,QAASnR,YAAG,QAASjE,KAAOlP,QACjCgY,MAAM,QAAS5B,GAAiBE,IAErCtV,EACKqjB,OAAO,QACPC,KAAK,QAASnR,YAAG,WAAYjE,KAAO+V,WACpCX,KAAK,IAAKC,EAASjN,KAAK4N,KAAK5N,KAAKwN,GAAK,KAlC1B,IAmCbR,KAAK,IAAKC,EAASjN,KAAK6N,KAAK7N,KAAKwN,GAAK,MAAQ,EAAI,GACnDlS,KAAK2E,GACVvW,EACKqjB,OAAO,QACPC,KAAK,QAASnR,YAAG,WAAYjE,KAAOkW,WACpCd,KAAK,IAAKC,EAASjN,KAAK4N,IAAI5N,KAAKwN,GAAK,KAxCzB,IAyCbR,KAAK,IAAKC,EAASjN,KAAK6N,IAAI7N,KAAKwN,GAAK,MAAQ,EAAI,GAClDlS,KAAK6F,GAEVhW,KAAK4iB,OAAS,WAAM,IAAAnS,EAC6B3K,EAAK2H,MAA1CqH,EADQrE,EACRqE,IAAKkB,EADGvF,EACHuF,IAAKzY,EADFkT,EACElT,MAAO8N,EADToF,EACSpF,gBACnBwX,EAAatlB,GAASyY,EAAMlB,GAElCvW,EACKukB,OAAO,cACPjB,KAAK,UAAWgB,EAAa,EAAI,GACjChB,KACG,IACAG,EAAI,CACAE,YAAaJ,EAtDX,GAuDFK,YAAaL,EACbM,YAAavN,KAAKwN,GAAK,IACvBC,SAAUzN,KAAKwN,GAAK,IAAMxN,KAAKwN,IAAM,MAAQ,EAAIQ,OAI7DtkB,EAAMukB,OAAO,UAAUC,KAAK3X,GAAkB7N,EAAO8N,KAEzDrL,KAAK4iB,WApFb,CAAArS,IAAA,oBAAAhT,MAAA,WAwFQyC,KAAKqX,gBAxFb,CAAA9G,IAAA,qBAAAhT,MAAA,SA2FuB0Z,EAAWC,EAAWC,GACrCnX,KAAK4iB,QAAU5iB,KAAK4iB,WA5F5B,CAAArS,IAAA,SAAAhT,MAAA,WA+Fa,IAAAyJ,EAAAhH,KACL,OACIqM,EAAAC,EAAAC,cAAA,OACIgM,IAAK,SAAAtO,GACDjD,EAAKmR,aAAelO,SAnGxC0X,EAAA,CAAgCzU,IAAMC,WA8GvB+E,mBAJf,SAAyBvR,EAAOwR,GAC5B,MAAO,IAKP,GAFWD,CAGbyP,IClHWqB,GAAb,SAAA1U,GAAA,SAAA0U,IAAA,OAAAlc,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAgjB,GAAAlc,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAkc,GAAAtf,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAkc,EAAA1U,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAkc,EAAA,EAAAzS,IAAA,SAAAhT,MAAA,WACa,IAAAiS,EACqBxP,KAAKyN,MAAvBvC,EADHsE,EACGtE,OAAQ3N,EADXiS,EACWjS,MAEhB,OACI8O,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,UAAY,UAC3CgI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOlO,OACnB8N,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,KACK,SAAAhO,GAAA,IAAGqN,EAAHrN,EAAGqN,MAAOC,EAAVtN,EAAUsN,OAAV,QACKA,GACElI,EAAAC,EAAAC,cAAC0W,GAAD,CACI3O,MAAOA,EACPC,OAAQA,EACRO,IAAK5J,EAAO7G,IAAI,OAChB2R,IAAK9K,EAAO7G,IAAI,OAChB9G,MAAOyE,OAAOzE,IAAU,EACxB8N,gBAAiBH,EAAO7G,IAAI,mBAC5BwP,MAAO3I,EAAO7G,IAAI,mBAlBtD2e,EAAA,CAA+B9V,IAAMC,WAqCtB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMkB,EAAQlB,EAASjH,OAAO7G,IAAI,SAC5BxB,EAAWsP,EAASjH,OAAO7G,IAAI,YACrC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,KAM7C,GAFWnB,CAGb8Q,8CCxCWE,GAAb,SAAA5U,GAAA,SAAA4U,IAAA,OAAApc,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAkjB,GAAApc,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAoc,GAAAxf,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAoc,EAAA5U,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAoc,EAAA,EAAA3S,IAAA,cAAAhT,MAAA,WAYkB,IAAAuI,EAAA9F,KAAAwP,EACuBxP,KAAKyN,MAA9B6G,EADE9E,EACF8E,MAAOC,EADL/E,EACK+E,OAAQV,EADbrE,EACaqE,MAQjBtV,EANMqY,KACA5W,KAAKmY,cACZyJ,OAAO,OACPC,KAAK,QAASvN,GACduN,KAAK,SAAUtN,GAEFqN,OAAO,KAEzBrjB,EACKqjB,OAAO,QACPC,KAAK,QAASnR,YAAG,WAAYjE,KAAO3O,WACpC+jB,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,QAASvN,GACduN,KAAK,SAAUtN,GACpBhW,EACKqjB,OAAO,QACPC,KAAK,QAASnR,YAAG,YAAajE,KAAO8V,YACrCV,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,OAAQlO,GAAiBE,IAEnC7T,KAAK4iB,OAAS,WAAM,IAAAnS,EAC+C3K,EAAK2H,MAA5DqH,EADQrE,EACRqE,IAAKkB,EADGvF,EACHuF,IAAKzY,EADFkT,EACElT,MAAOgX,EADT9D,EACS8D,OAAQD,EADjB7D,EACiB6D,MAAOwB,EADxBrF,EACwBqF,SAAUqN,EADlC1S,EACkC0S,SAC5CN,EAAatlB,GAASyY,EAAMlB,GAE5ByN,EAAYhkB,EAAMukB,OAAO,cAAcjB,KAAK,UAAWgB,EAAa,EAAI,GAE1E/M,GACAyM,EAAUV,KAAK,SAAUhN,KAAKmB,IAAI6M,EAAatO,EAAQ,IAAIsN,KAAK,QAASvN,GACpE6O,GACDZ,EAAUV,KAAK,IAAKhN,KAAKmB,IAAIzB,EAASsO,EAAatO,EAAQ,MAG/DgO,EAAUV,KAAK,QAAShN,KAAKmB,IAAI6M,EAAavO,EAAO,IAAIuN,KAAK,SAAUtN,GACpE4O,GACAZ,EAAUV,KAAK,IAAKhN,KAAKmB,IAAI1B,EAAQuO,EAAavO,EAAO,MAIrEtU,KAAK4iB,WA3Db,CAAArS,IAAA,oBAAAhT,MAAA,WA+DQyC,KAAKqX,gBA/Db,CAAA9G,IAAA,qBAAAhT,MAAA,SAkEuB0Z,EAAWC,EAAWC,GACrCnX,KAAK4iB,QAAU5iB,KAAK4iB,WAnE5B,CAAArS,IAAA,SAAAhT,MAAA,WAsEa,IAAAyJ,EAAAhH,KACL,OACIqM,EAAAC,EAAAC,cAAA,OACIgM,IAAK,SAAAtO,GACDjD,EAAKmR,aAAelO,SA1ExCiZ,EAAA,CAAgChW,IAAMC,WAqFvB+E,mBAJf,SAAyBvR,EAAOwR,GAC5B,MAAO,IAKP,GAFWD,CAGbgR,ICxFWE,GAAb,SAAA9U,GAAA,SAAA8U,IAAA,OAAAtc,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAojB,GAAAtc,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAsc,GAAA1f,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAsc,EAAA9U,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAsc,EAAA,EAAA7S,IAAA,SAAAhT,MAAA,WACa,IAAAiS,EACqBxP,KAAKyN,MAAvBvC,EADHsE,EACGtE,OAAQ3N,EADXiS,EACWjS,MACV8lB,EAAoC,2BAAvBnY,EAAO7G,IAAI,QAE9B,OACIgI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,WAAagf,EAAa,GAAK,SAAUlmB,YAAaI,IACrF8O,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOlO,OACnB8N,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,KACK,SAAAhO,GAAA,IAAGqN,EAAHrN,EAAGqN,MAAOC,EAAVtN,EAAUsN,OAAV,QACKA,GACElI,EAAAC,EAAAC,cAAC+W,GAAD,CACIhP,MAAOA,EACPC,OAAQA,EACRO,IAAK5J,EAAO7G,IAAI,OAChB2R,IAAK9K,EAAO7G,IAAI,OAChB9G,MAAOyE,OAAOzE,GACd8N,gBAAiBH,EAAO7G,IAAI,mBAC5ByR,SAAUuN,EACVF,SAAUjY,EAAO7G,IAAI,gBACrBwP,MAAO3I,EAAO7G,IAAI,mBArBtD+e,EAAA,CAA+BlW,IAAMC,WAwCtB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,KAM7C,GAFWnB,CAGbkR,wBCxCWG,GAAb,SAAAjV,GAAA,SAAAiV,IAAA,IAAAhV,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAujB,GAAA,QAAA/U,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAAyc,IAAAzU,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MAiBIwF,gBAAkB,SAAAyE,GAAK,IACXxN,EAAWpF,EAAK2H,MAAhBvC,OACFsY,EAAOtY,EAAO7G,IAAI,QAClBof,EAAavY,EAAO7G,IAAI,cACxBqf,EAAWxY,EAAO7G,IAAI,YACtB2R,EAAM9K,EAAO7G,IAAI,OACjByQ,EAAM5J,EAAO7G,IAAI,OAEjBvB,EAAMmI,GAAoBC,GAE1ByY,EAAY3hB,OAAO0W,EAAEE,cAAcC,QAAQ8K,WAEjD7d,EAAK8d,iBAAmBjc,aAAO,CAC3B5G,OAAQ,WACJ,IAEI8iB,EAFEtmB,EAAQyE,OAAO8D,EAAK2H,MAAMlQ,QAAU,EAGtCkmB,EACAI,EAAYL,EAAOG,GAEnBE,EAAYtmB,EAAQimB,EAAOG,GAEX3N,EAER6N,EADAH,EACY5O,EAEAkB,EAET6N,EAAY/O,IAEf+O,EADAH,EACY1N,EAEAlB,IAKX,IAAThS,GACAoR,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAK+gB,IAGhEhc,MAAO,GACPG,eAAgB,IAChBF,WAAW,IAEfhC,EAAK8d,iBAAiBrc,SA9D9BzB,EAiEIsO,cAAgB,SAAAsE,GACR5S,EAAK8d,kBACL9d,EAAK8d,iBAAiB1c,QAnElCpB,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAyc,EAAAjV,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAyc,EAAA,EAAAhT,IAAA,iBAAAhT,MAAA,SACmBomB,GAGX,OAFmB3jB,KAAKyN,MAAhBvC,OAEI7G,IAAI,eAOG,IAAfsf,EACO,IAEJ,KATgB,IAAfA,EACO,SAEJ,WARnB,CAAApT,IAAA,SAAAhT,MAAA,WAuEa,IAAA2X,EAAA4O,EAAAtU,EACqBxP,KAAKyN,MAAvBvC,EADHsE,EACGtE,OAAQ3N,EADXiS,EACWjS,MAEV8lB,EAAoC,kBAAvBnY,EAAO7G,IAAI,QAExB0f,EAAeV,EAAa,SAAW,SAE7C,OACIhX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,UAAY0f,EAAc5mB,YAAaI,IACtE8O,EAAAC,EAAAC,cAAA,OACIC,UAAWkE,aAAEwE,EAAA,GAAApO,OAAAqO,GAAA,EAAArO,CAAAoO,EACRzI,KAAOuX,yBAA2BX,GAD1Bvc,OAAAqO,GAAA,EAAArO,CAAAoO,EAERzI,KAAOwX,kBAAoBZ,GAFnBnO,KAKb7I,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACI2P,SAAO,EACP9H,OAAK,EACL/M,UAAWC,KAAOjQ,OAClB0nB,iBAAgBb,EAAa,GAAK,EAClChO,YAAarV,KAAKiU,gBAClBqB,UAAWtV,KAAKoU,eAEfpU,KAAKmkB,eAAed,EAAa,GAAK,IAE3ChX,EAAAC,EAAAC,cAAA,OACIC,UAAWkE,aAAEoT,EAAA,GAAAhd,OAAAqO,GAAA,EAAArO,CAAAgd,EACRrX,KAAO2X,kBAAoBf,GADnBvc,OAAAqO,GAAA,EAAArO,CAAAgd,EAERrX,KAAO4X,iBAAmBhB,GAFlBS,MAKjBzX,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACI2P,SAAO,EACP9H,OAAK,EACL/M,UAAWC,KAAOjQ,OAClB0nB,iBAAgBb,GAAc,EAAI,EAClChO,YAAarV,KAAKiU,gBAClBqB,UAAWtV,KAAKoU,eAEfpU,KAAKmkB,eAAed,GAAc,EAAI,UA/G/DE,EAAA,CAA8BrW,IAAMC,WA+HrB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,KAM7C,GAFWnB,CAGbqR,yBCrIWe,GAAb,SAAAhW,GAAA,SAAAgW,IAAA,OAAAxd,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAskB,GAAAxd,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAwd,GAAA5gB,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAwd,EAAAhW,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAwd,EAAA,EAAA/T,IAAA,SAAAhT,MAAA,WACa,IAAAiS,EACqBxP,KAAKyN,MAAvBvC,EADHsE,EACGtE,OAAQ3N,EADXiS,EACWjS,MAEVsW,EAAQF,GAAiBzI,EAAO7G,IAAI,UAE1C,OACIgI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,UAAY,QAC3CgI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO1O,cACnBsO,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CAAQM,MAAO,CAAEkB,UAAW,WACvB,SAAAxP,GAAuB,IAApBqN,EAAoBrN,EAApBqN,MAAOC,EAAatN,EAAbsN,OACDuM,EAAOjM,KAAKC,IAAIR,EAAOC,IAAW,EACxC,OACIlI,EAAAC,EAAAC,cAAA,OAAK+H,MAAOwM,EAAMvM,OAAQuM,GACtBzU,EAAAC,EAAAC,cAAA,UACI6Q,EAAGvI,KAAKmB,IAAI8K,EAAO,EAAI,EAAG,GAC1ByD,GAAIzD,EAAO,EACX0D,GAAI1D,EAAO,EACXtU,UAAWC,KAAOzO,UAClBymB,OAAQ5Q,EACRrC,KAAMqC,EACN6Q,YAAannB,EAAQ,eAtB7D+mB,EAAA,CAA6BpX,IAAMC,WA0CpB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,IAAU,IAMvD,GAFWnB,CAGboS,wBC7CWK,GAAb,SAAArW,GAAA,SAAAqW,IAAA,IAAApW,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAA2kB,GAAA,QAAAnW,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAA6d,IAAA7V,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACImW,eAAiB,SAAAlM,IAGbmM,EAF2B/e,EAAK2H,MAAxBoX,gBACM7iB,OAAO0W,EAAEE,cAAcC,QAAQjW,SAHrDkD,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAA6d,EAAArW,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAA6d,EAAA,EAAApU,IAAA,SAAAhT,MAAA,WAOa,IAAAyJ,EAAAhH,KAAAwP,EAC2BxP,KAAKyN,MAA7BvC,EADHsE,EACGtE,OAAQ1I,EADXgN,EACWhN,YAEhB,OACI6J,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOqY,eACnBzY,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,KACK,SAAAhO,GAAA,IAAGqN,EAAHrN,EAAGqN,MAAOC,EAAVtN,EAAUsN,OAAV,OACGlI,EAAAC,EAAAC,cAACyU,GAAD,CAAWzL,MAAO,CAAEjB,QAAOC,WACvBlI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOsY,WACnB1Y,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,KAAOuY,SACjB9Z,EAAO7G,IAAI,QAAQ3F,IAAI,SAACumB,EAAKzN,GAAN,OACpBnL,EAAAC,EAAAC,cAAA,MACIgE,IAAKiH,EACLhL,UAAWkE,YAAGjE,KAAOwY,IAARne,OAAAqO,GAAA,EAAArO,CAAA,GAAgB2F,KAAOyY,UAAY1N,IAAQhV,IACxDsW,QAAS9R,EAAK4d,eACdO,cAAa3N,GAEZyN,EAAI5gB,IAAI,UAAR,OAAAT,OAA2B4T,EAAM,gBAxB9EmN,EAAA,CAA8BzX,IAAMC,WA2CrB+E,mBANf,SAAyBvR,EAAOwR,GAC5B,MAAO,CACH3P,YAAa7B,EAAMyC,MAAMiB,IAAI,iBAMjC,CACIwgB,e3BuLD,SAAwBjiB,GAC3B,MAAO,CACH5B,KAAMQ,EACNoB,W2B7LOsP,CAKbyS,ICtDmBS,oLAEb,OAAO,YAFwBlY,IAAMC,qDCIhCkY,GAAb,SAAA/W,GAAA,SAAA+W,IAAA,OAAAve,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAqlB,GAAAve,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAue,GAAA3hB,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAue,EAAA/W,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAue,EAAA,EAAA9U,IAAA,oBAAAhT,MAAA,WACwB,IACR2N,EAAWlL,KAAKyN,MAAhBvC,OACFoa,EAAMpa,EAAO7G,IAAI,OACjBkhB,EAAMra,EAAO7G,IAAI,OACvBrE,KAAKtB,IAAM8mB,KAAE9mB,IAAIsB,KAAKylB,iBAAiBC,QAAQ,CAACJ,EAAKC,GAAM,IAC3DC,KAAEG,UAAU,uDAAuDC,MAAM5lB,KAAKtB,KAC9E8mB,KAAEK,OAAO,CAACP,EAAKC,IAAMK,MAAM5lB,KAAKtB,OAPxC,CAAA6R,IAAA,SAAAhT,MAAA,WAUa,IAAAuI,EAAA9F,KACL,OACIqM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAAA,OACIC,UAAWC,KAAO/N,IAClB6W,MAAO,CAAEhB,OAAQ,OAAQD,MAAO,QAChCiE,IAAK,SAAAtO,GACDnE,EAAK2f,gBAAkBxb,UAjB/Cob,EAAA,CAA6BnY,IAAMC,WAiCpB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,IAAU,IAMvD,GAFWnB,CAGbmT,yBCnCWS,GAAb,SAAAxX,GAAA,SAAAwX,IAAA,OAAAhf,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAA8lB,GAAAhf,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAgf,GAAApiB,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAgf,EAAAxX,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAgf,EAAA,EAAAvV,IAAA,SAAAhT,MAAA,WACa,IAGDwoB,EAHCvW,EACqBxP,KAAKyN,MAAvBvC,EADHsE,EACGtE,OAAQ3N,EADXiS,EACWjS,MAWhB,OARI2N,EAAO7G,IAAI,UAEP0hB,EADAxoB,GAAS,GAAKA,GAAS2N,EAAO7G,IAAI,QAAQyc,KAC/B5V,EAAOlI,MAAM,CAAC,OAAQzF,EAAQ,IAE9B2N,EAAOlI,MAAM,CAAC,OAAQ,KAKrCqJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,WAC/BgI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO9N,gBAClBonB,GACG1Z,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,KACK,SAAAhO,GAAuB,IAChB+e,EACAC,EAFJ3R,EAAoBrN,EAApBqN,MAAOC,EAAatN,EAAbsN,OAWP,MAR8B,QAA1BrJ,EAAO7G,IAAI,YACX2hB,EAAWnR,KAAKC,IAAIR,EAAOC,GAC3B0R,EAAYpR,KAAKC,IAAIR,EAAOC,KAE5ByR,EAAW1R,EACX2R,EAAY1R,GAGTlI,EAAAC,EAAAC,cAAA,OAAK2Z,IAAKH,EAAUI,IAAK5oB,EAAO+W,MAAO0R,EAAUzR,OAAQ0R,YA9BhGH,EAAA,CAA+B5Y,IAAMC,WAgDtB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,IAAU,IAMvD,GAFWnB,CAGb4T,yBChDWM,GAAb,SAAA9X,GACI,SAAA8X,EAAY3Y,EAAO4Y,GAAS,IAAAvgB,EAAA,OAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAomB,IACxBtgB,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAsf,GAAAtX,KAAA9O,KAAMyN,EAAO4Y,KAMjBC,kBAAoB,SAAA5N,GAChB5S,EAAKkK,SAAS,CACVmQ,WAAYzH,EAAEE,cAAcrb,SATRuI,EAa5Bya,eAAiB,SAAA7H,GAEG,MADAA,EAAE8H,SAAW9H,EAAE+H,QAE3B/H,EAAEE,cAAc2N,QAhBIzgB,EAoB5B0gB,WAAa,WAAM,IACPtb,EAAWpF,EAAK2H,MAAhBvC,OACFiV,EAAera,EAAKnF,MAApBwf,WACFra,EAAK2gB,gBACLtG,EAAane,OAAOme,IAAejV,EAAO7G,IAAI,MAAO,IAGzD,IAAMvB,EAAMmI,GAAoBC,IACnB,IAATpI,GACAoR,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKqd,IA7BpCra,EAiC5B4gB,yBAA2B,SAAAhO,GACvBA,EAAEE,cAAc2N,QAlCQzgB,EAkD5B6gB,qBAAuB,SAAAjO,GAAK,IAChBxN,EAAWpF,EAAK2H,MAAhBvC,OACAnK,EAAW2X,EAAEE,cAAcC,QAA3B9X,OACAof,EAAera,EAAKnF,MAApBwf,WAEFqD,EAAOtY,EAAO7G,IAAI,OAAQ,GAC1ByQ,EAAM5J,EAAO7G,IAAI,MAAO,GACxB2R,EAAM9K,EAAO7G,IAAI,MAAO,GACxBqf,EAAWxY,EAAO7G,IAAI,YAAY,GAEpCuiB,EAAc5kB,OAAOme,IAA0B,SAAXpf,GAAqByiB,GAAQA,IAAS1O,EAC1E8R,EAAc5Q,EAEV4Q,EADAlD,EACc5O,EAEAkB,EAEX4Q,EAAc9R,IAEjB8R,EADAlD,EACc1N,EAEAlB,GAItBhP,EAAKkK,SACD,CACImQ,WAAYyG,GAEhB,WACI9gB,EAAK0gB,gBA9Eb1gB,EAAKnF,MAAQ,CACTwf,WAAY1S,EAAMlQ,OAHEuI,EADhC,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAsf,EAAA9X,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAsf,EAAA,EAAA7V,IAAA,qBAAAhT,MAAA,SAsCuB0Z,EAAWC,EAAWC,GACjCF,EAAU1Z,QAAUyC,KAAKyN,MAAMlQ,OAC/ByC,KAAKgQ,SAAS,CACVmQ,WAAYngB,KAAKyN,MAAMlQ,UAzCvC,CAAAgT,IAAA,SAAAhT,MAAA,WAsFa,IAOD6jB,EACAyF,EAPI3b,EAAWlL,KAAKyN,MAAhBvC,OACAiV,EAAengB,KAAKW,MAApBwf,WACAsG,EAAkBzmB,KAAlBymB,cAEFK,EAAS/W,IAAK7E,EAAO7G,IAAI,SAAU,KAgCzC,OA5BIoiB,GACAI,EACIxa,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACIE,KAAK,QACLkH,QAAS9Y,KAAK2mB,qBACdI,cAAY,QACZva,UAAWC,KAAOzP,gBAG1BokB,EACI/U,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACIE,KAAK,OACLkH,QAAS9Y,KAAK2mB,qBACdI,cAAY,OACZva,UAAWC,KAAOzP,iBAI1BokB,EACI/U,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACIE,KAAK,YACLyP,SAAO,EACPvI,QAAS9Y,KAAK0mB,yBACdla,UAAWC,KAAOzP,gBAM1BqP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAO6S,IAAK7E,EAAO7G,IAAI,QAAS,KAAOyiB,EAAM,KAAAljB,OAAQkjB,EAAR,KAAoB,OAC9Eza,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO1P,WACnBsP,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACIsT,YAAahW,EAAO7G,IAAI,QACxB9G,MAAO4iB,EACPhK,SAAUnW,KAAKsmB,kBACfnF,WAAYnhB,KAAKugB,eACjByG,OAAQhnB,KAAKwmB,WACbS,SAAUJ,EACVzF,aAAcA,EACd7L,MAAO,CACHkB,UAAWgQ,EAAgB,cAAW3lB,SAxIlE,CAAAyP,IAAA,gBAAAlM,IAAA,WAgDQ,MAA8B,iBADXrE,KAAKyN,MAAhBvC,OACM7G,IAAI,YAhD1B+hB,EAAA,CAAmClZ,IAAMC,WAyJ1B+E,mBARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,IAAU,IAMvD,GAFWnB,CAGbkU,yBC5JWc,GAAb,SAAA5Y,GAAA,SAAA4Y,IAAA,IAAA3Y,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAknB,GAAA,QAAA1Y,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAAogB,IAAApY,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MACI0Y,YAAc,SAAAzO,GAAK,IACPxN,EAAWpF,EAAK2H,MAAhBvC,OACA3N,EAAUmb,EAAEE,cAAcC,QAA1Btb,MAEFuF,EAAMmI,GAAoBC,IACnB,IAATpI,GACAoR,GAAchJ,EAAO7G,IAAI,aAAa8P,aAAarR,EAAKvF,IAPpEuI,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAogB,EAAA5Y,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAogB,EAAA,EAAA3W,IAAA,SAAAhT,MAAA,WAWa,IAAAyJ,EAAAhH,KAAAwP,EACqBxP,KAAKyN,MAAvBvC,EADHsE,EACGtE,OAAQ3N,EADXiS,EACWjS,MAEhB,OACI8O,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAACyI,GAAD,CAAa9X,MAAOgO,EAAO7G,IAAI,WAC/BgI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO1P,WACnBsP,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAa5H,MAAI,GACZtG,EAAO7G,IAAI,SAAU,IAAI3F,IAAI,SAACuS,EAAOuG,GAClC,IACIjC,EADEH,EAASpT,OAAOzE,KAAWia,EAAM,EAUvC,OARIpC,IACAG,EAAQ,CACJZ,gBAAiBhB,GAAiBzI,EAAO7G,IAAI,UAC7C+iB,WAAY,OACZvT,MAAO,YAKXxH,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACInB,IAAKiH,EACL6P,aAAY7P,EAAM,EAClBsB,QAAS9R,EAAKmgB,YACd/R,OAAQA,EACRG,MAAOA,GAENtE,YAtCrCiW,EAAA,CAA0Cha,IAAMC,WAyDjC+E,IC1CToV,GAAyB,CAC3BC,OAAQxT,GACRyT,cAAezT,GACf0T,OAAQ/R,GACRgS,gBAAiBpG,GACjBqG,IAAK7K,GACL8K,kBAAmB9J,GACnB+J,eAAgBrO,GAChBsO,eAAgBzR,GAChB0R,sBAAuB1R,GACvB2R,MAAOhF,GACPiF,IAAKzG,GACL0G,cAAe9E,GACf+E,uBAAwB/E,GACxBgF,SAAUlI,GACVmI,KAAM9E,GACN+E,cAAe/E,GACfgF,IAAKjE,GACLkE,KAAM7D,GACNhgB,MAAOygB,GACPqD,aAAcrD,GACdsD,QAAStD,GACTvgB,OAAQugB,GACRuD,IAAKvD,GACLwD,IAAKvD,GACLwD,MAAO/C,GACPgD,WAAY1C,GACZ2C,aAAc3C,GACd4C,kBDcW9W,YARf,SAAyBvR,EAAOwR,GAC5B,IAAMtP,EAAWsP,EAASjH,OAAO7G,IAAI,YAC/BgP,EAAQlB,EAASjH,OAAO7G,IAAI,SAClC,MAAO,CACH9G,MAAO6V,GAAiBzS,EAAOkC,EAAUwQ,IAAU,IAMvD,GAFWnB,CAGbgV,KCdW+B,GAAb,SAAA3a,GAAA,SAAA2a,IAAA,OAAAniB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAipB,GAAAniB,OAAA8H,EAAA,EAAA9H,CAAA9G,KAAA8G,OAAA+H,EAAA,EAAA/H,CAAAmiB,GAAAvlB,MAAA1D,KAAAY,YAAA,OAAAkG,OAAAuJ,EAAA,EAAAvJ,CAAAmiB,EAAA3a,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAmiB,EAAA,EAAA1Y,IAAA,gBAAAhT,MAAA,WACoB,IACJ2N,EAAWlL,KAAKyN,MAAhBvC,OACFge,EAAgB5B,GAAuBpc,EAAO7G,IAAI,UAAY0S,GACpE,OAAO1K,EAAAC,EAAAC,cAAC2c,EAAD,CAAehe,OAAQA,MAJtC,CAAAqF,IAAA,SAAAhT,MAAA,WAOa,IACG2N,EAAWlL,KAAKyN,MAAhBvC,OAMR,OACImB,EAAAC,EAAAC,cAAA,OACIC,UAAWkE,YAAGjE,KAAOxP,KAAR6J,OAAAqO,GAAA,EAAArO,CAAA,GAAiB2F,KAAO9O,SAAkC,SAAvBuN,EAAO7G,IAAI,UAC3DkR,MAAO,CACHiK,KAPY,GAONtU,EAAO7G,IAAI,KACjBob,IATa,GASRvU,EAAO7G,IAAI,KAChBiQ,MATY,GASLpJ,EAAO7G,IAAI,SARf,EASHkQ,OAXa,GAWLrJ,EAAO7G,IAAI,UAThB,IAYNrE,KAAKmpB,qBAxBtBF,EAAA,CAA4B/b,IAAMC,WAkCnB+E,mBAJf,SAAyBvR,EAAOwR,GAC5B,MAAO,IAKP,GAFWD,CAGb+W,ICnFWG,GAAb,SAAA9a,GAAA,SAAA8a,IAAA,IAAA7a,EAAAzI,EAAAgB,OAAAuD,EAAA,EAAAvD,CAAA9G,KAAAopB,GAAA,QAAA5a,EAAA5N,UAAAC,OAAA4N,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA/N,UAAA+N,GAAA,OAAA7I,EAAAgB,OAAA8H,EAAA,EAAA9H,CAAA9G,MAAAuO,EAAAzH,OAAA+H,EAAA,EAAA/H,CAAAsiB,IAAAta,KAAApL,MAAA6K,EAAA,CAAAvO,MAAA4D,OAAA6K,MAuBI4a,aAAe,WAAM,IAAA7Z,EACW1J,EAAK2H,MAAzBvK,EADSsM,EACTtM,SACRomB,EAFiB9Z,EACA8Z,UAEjBpmB,EAAQsH,KAAK,gBA1BrB1E,EA6BIyjB,qBAAuB,SAAA7Q,IAGnB8Q,EAF6B1jB,EAAK2H,MAA1B+b,kBACMxnB,OAAO0W,EAAEE,cAAcrb,SA/B7CuI,EAmCI2jB,WAAa,YAET7hB,EADiB9B,EAAK2H,MAAd7F,SApChB9B,EAAA,OAAAgB,OAAAuJ,EAAA,EAAAvJ,CAAAsiB,EAAA9a,GAAAxH,OAAAwJ,EAAA,EAAAxJ,CAAAsiB,EAAA,EAAA7Y,IAAA,oBAAAhT,MAAA,eAAAmsB,EAAA5iB,OAAAqI,EAAA,EAAArI,CAAAsI,EAAA9C,EAAA+C,KAAA,SAAAC,IAAA,IAAAmB,EAAAvN,EAAAymB,EAAA,OAAAva,EAAA9C,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAW,EAEwCzQ,KAAKyN,MAA7BvK,EAFhBuN,EAEgBvN,QAASymB,EAFzBlZ,EAEyBkZ,WAFzB/Z,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIkB6Z,IAJlB,OAAA/Z,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAMY1M,EAAQsH,KAAK,eANzB,wBAAAoF,EAAA1I,SAAAoI,EAAAtP,KAAA,qCAAA0pB,EAAAhmB,MAAA1D,KAAAY,YAAA,KAAA2P,IAAA,gBAAAhT,MAAA,WAUoB,IAAA+a,EACqBtY,KAAKyN,MAA9BhL,EADI6V,EACJ7V,QAASD,EADL8V,EACK9V,YAEXonB,EAAU,GAOhB,OANAnnB,EAAQ4B,IAAI,WAAWF,QAAQ,SAAA+G,GACbA,EAAO7G,IAAI,WACX7B,GAAsC,SAAvB0I,EAAO7G,IAAI,SACpCulB,EAAQpf,KAAK6B,EAAAC,EAAAC,cAACsd,GAAD,CAAQtZ,IAAKrF,EAAO7G,IAAI,MAAO6G,OAAQA,OAGrD0e,IApBf,CAAArZ,IAAA,SAAAhT,MAAA,WAwCa,IAAAyJ,EAAAhH,KAAA8pB,EACyB9pB,KAAKyN,MAA3BhL,EADHqnB,EACGrnB,QAASF,EADZunB,EACYvnB,SAEjB,IAAKE,EACD,OAAO4J,EAAAC,EAAAC,cAAA,YAGX,IAAMwd,EAAuC,UAAzBtnB,EAAQ4B,IAAI,WAAwB,EAExD,OACIgI,EAAAC,EAAAC,cAAA,OAAKC,UAAWkE,YAAGjE,KAAOxP,KAAM,CAAE+sB,WAAYD,KAC1C1d,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO3N,QACnBuN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO1N,aACnBsN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOzN,aAAcyD,EAAQ4B,IAAI,SACjDgI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOxN,gBACnBoN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAQE,KAAK,UAAUE,OAAQC,IAAOC,QAAS8G,QAAS9Y,KAAKypB,YAA7D,SAIJpd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CACI5B,UAAWC,KAAOrN,eAClB+W,SAAUnW,KAAKupB,qBACfhsB,MAAOgF,EACPkP,QAAS,CACL,CAAER,MAAO,eAAgB1T,MAAO,GAChC,CAAE0T,MAAO,0BAA2B1T,MAAO,KAC3C,CAAE0T,MAAO,wBAAyB1T,MAAO,KACzC,CAAE0T,MAAO,wBAAyB1T,MAAO,KACzC,CAAE0T,MAAO,wBAAyB1T,MAAO,KACzC,CAAE0T,MAAO,wBAAyB1T,MAAO,KACzC,CAAE0T,MAAO,yBAA0B1T,MAAO,KAC1C,CAAE0T,MAAO,yBAA0B1T,MAAO,MAC1C,CAAE0T,MAAO,yBAA0B1T,MAAO,KAC1C,CAAE0T,MAAO,yBAA0B1T,MAAO,SAItD8O,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOvN,kBACvBmN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAQE,KAAK,UAAUE,OAAQC,IAAOkY,OAAQnR,QAAS9Y,KAAKqpB,mBAK5Ehd,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO7N,WACnByN,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,KACK,SAAAhO,GAAuB,IAApBqN,EAAoBrN,EAApBqN,MAAOC,EAAatN,EAAbsN,OACP,OACIlI,EAAAC,EAAAC,cAACyU,GAAD,CAAWzL,MAAO,CAAEhB,SAAQD,UACxBjI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAO5N,gBACnBwN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAOtN,aAAc6H,EAAKkjB,2BA5FlFd,EAAA,CAAiClc,IAAMC,WAgHxB+E,mBARf,SAAyBvR,EAAOwR,GAC5B,MAAO,CACH3P,YAAa7B,EAAMyC,MAAMiB,IAAI,eAC7B5B,QAAS9B,EAAMyC,MAAMiB,IAAI,WACzB9B,SAAU5B,EAAMyC,MAAMiB,IAAI,cAM9B,CACIilB,OlCnFD,WACH,OAAO,SAAChX,EAAUC,GACd5Q,aAAayQ,QAAQ,0BAA2B,IAEhDG,IACKnP,MAAMiB,IAAI,WACVF,QAAQ,SAAApB,GACLmR,GAAcnR,EAAOsB,IAAI,OAAO6C,SAGxCoL,EAAS,CACLtR,KAAMO,MkCyEVooB,WlChED,WACH,sBAAA3b,EAAAlH,OAAAqI,EAAA,EAAArI,CAAAsI,EAAA9C,EAAA+C,KAAO,SAAAC,EAAOgD,EAAUC,GAAjB,IAAA4X,EAAAhoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA4L,EAAA1L,EAAAC,EAAAknB,EAAAQ,EAAA,OAAAhb,EAAA9C,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAqa,EACkE5X,IAAWnP,MAAMsP,WAA9EvQ,EADLgoB,EACKhoB,OAAQC,EADb+nB,EACa/nB,WAAYC,EADzB8nB,EACyB9nB,WAAYC,EADrC6nB,EACqC7nB,eAAgBC,EADrD4nB,EACqD5nB,SADrDqN,EAAAE,KAAA,EAG2B6C,KACzBtO,IADyB,GAAAT,OAClBoH,GAAgB,CAAE3F,MAAOlD,EAAOyQ,QAASxQ,aAAYC,aAAYC,mBAD/C,aAEzBK,IAAI,SAAU,QALhB,OAAAwL,EAAAyB,EAAAkM,KAGSrZ,EAHT0L,EAGGwO,KAINla,EAAUhC,IAAiBgC,GAU3BC,EAAUqB,GARVrB,GADIA,EAAUD,EAAQ4B,IAAI,YACR3F,IAAI,SAACqE,EAAQyU,GAC3B,OAAOzU,EACFJ,IAAI,QAASR,EAAOkC,IAAImT,IACxB7U,IAAI,OAAQ,IAAIlC,KAChBkC,IAAI,cAAe,IAAIlC,KACvBkC,IAAI,mBAAoB,IAAIlC,OAGR,MAE7BgC,EAAUA,EAAQE,IAAI,UAAWoB,GAAUtB,EAAQ4B,IAAI,WAAY,OAE/DulB,EAAUnnB,EAAQ4B,IAAI,WAEpB+lB,EAAmB,SAACC,EAAgBxnB,GACtC,IAAMC,EAAMunB,EAAehmB,IAAI,OAAQ,GACjC9G,EAAQ8sB,EAAehmB,IAAI,SACjC,IAAa,IAATvB,EAAY,CACZ,IAAMuQ,EAAQpI,GAAoBof,GAClCA,EAAiBA,EAAe1nB,IAAI,QAAS0Q,QAE/BvS,IAAVvD,IACAmF,EAAUA,EAAQO,MAAM,CAACJ,EAAU,OAAQwQ,GAAQ9V,IAG3D,OAAO8sB,GAIXT,EAAUA,EAAQlrB,IAAI,SAAAwM,GAGlB,IAAIof,GAFJpf,EAASkf,EAAiBlf,EAAQA,EAAO7G,IAAI,cAErBA,IAAI,QACxBimB,IACAA,EAAaA,EAAW5rB,IAAI,SAAA2rB,GACxB,OAAOD,EAAiBC,EAAgBnf,EAAO7G,IAAI,eAEvD6G,EAASA,EAAOvI,IAAI,OAAQ2nB,IAGhC,IAAIC,EAAoBrf,EAAO7G,IAAI,eAQnC,OAPIkmB,IACAA,EAAoBA,EAAkB7rB,IAAI,SAAA8rB,GAAgB,OACtDA,EAAiB7nB,IAAI,MAAOynB,EAAiBI,EAAiBnmB,IAAI,OAAQ6G,EAAO7G,IAAI,gBAEzF6G,EAASA,EAAOvI,IAAI,cAAe4nB,IAGhCrf,IAGXzI,EAAUA,EAAQE,IAAI,UAAWinB,GAEjClnB,EAAQyB,QAAQ,SAAApB,GACZ,IAAMsC,EAAQtC,EAAOsB,IAAI,SACnBxB,EAAWE,EAAOsB,IAAI,MAG5B6P,GAAcrR,GAAU4nB,KAAK,CACzBplB,QACAjD,aACAC,aACAC,mBAEJ4R,GAAcrR,GAAU6nB,iBAAiB,YAAa,SAAAxb,GAAoB,IAAjBpM,EAAiBoM,EAAjBpM,IAAKvF,EAAY2R,EAAZ3R,MAC1D+U,EAASrG,GAAY,CAAEpJ,WAAUC,MAAKvF,aAE1C2W,GAAcrR,GAAU8nB,qBAAqBpoB,KAGjD+P,EAAS,CACLtR,KAAMI,EACNqB,UACAC,YAlFD,yBAAAkN,EAAA1I,SAAAoI,EAAAtP,SAAP,gBAAAoQ,EAAAwa,GAAA,OAAA5c,EAAAtK,MAAA1D,KAAAY,YAAA,IkCgEIgH,KlC+ID,WACH,OAAO,SAAC0K,EAAUC,GACEA,IAAWnP,MAAMiB,IAAI,WAE7BF,QAAQ,SAAApB,GACZ,IAAMF,EAAWE,EAAOsB,IAAI,MAC5B6P,GAAcrR,GAAU+E,WkCpJ5B4hB,iBlCyHD,SAA0BjsB,GAE7B,OADAoE,aAAayQ,QAAQ,4BAA6B7U,GAC3C,SAAC+U,EAAUC,GACEA,IAAWnP,MAAMiB,IAAI,WAE7BF,QAAQ,SAAApB,GACZ,IAAMF,EAAWE,EAAOsB,IAAI,MAC5B6P,GAAcrR,GAAU8nB,qBAAqBptB,KAGjD+U,EAAS,CACLtR,KAAMS,EACNlE,akC3IG2U,CAQbkX,IC5HmByB,oLACR,IACGC,EAAU9qB,KAAKyN,MAAfqd,MACR,OACIze,EAAAC,EAAAC,cAACwe,EAAA,EAAD,CAAUD,MAAOA,GACbze,EAAAC,EAAAC,cAACye,EAAA,EAAD,KACI3e,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACItB,EAAAC,EAAAC,cAAC0e,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIra,OAAQ,kBAAMzE,EAAAC,EAAAC,cAAC6e,EAAA,EAAD,CAAU5O,GAAG,gBACjDnQ,EAAAC,EAAAC,cAAC0e,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAc7Z,UAAWjD,KAC3ChC,EAAAC,EAAAC,cAAC0e,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAW7Z,UAAW8X,eAT9Blc,IAAMC,yBCKxCke,IAAkBC,sBAGlB,IAAMR,GAAQznB,IAGRsJ,GAAS4e,SAASC,cAAc,SACtCC,IAAS3a,OAAOzE,EAAAC,EAAAC,cAACmf,GAAD,CAAMZ,MAAOA,KAAWne,ICjBhC,kBAAmBgf,WACnBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAC/BA,EAAaC,mCCFzB1vB,EAAAC,QAAA,CAAkB0nB,iBAAA,iCAAAD,yBAAA,yCAAAK,gBAAA,gCAAAD,kBAAA,kCAAA5nB,OAAA,4CCAlBF,EAAAC,QAAA,CAAkB+B,QAAA,wBAAAC,MAAA,sBAAAO,OAAA,uBAAAN,qBAAA,qCAAAC,YAAA,iDCAlBnC,EAAAC,QAAA,CAAkBuB,SAAA,yBAAAP,MAAA,sBAAA0uB,YAAA,4BAAAzJ,SAAA,yBAAAG,SAAA,8CCAlBrmB,EAAAC,QAAA,CAAkBuoB,cAAA,8BAAAG,IAAA,oBAAAF,UAAA,0BAAAG,UAAA,0BAAAF,QAAA","file":"static/js/main.e931f991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2gk2-\",\"styledButton\":\"styles_styledButton__1TcSa\",\"buttonContainer\":\"styles_buttonContainer__uwIX8\",\"sizeContainer\":\"styles_sizeContainer__2aPEB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stickContainer\":\"styles_stickContainer__1dJSg\",\"sizeContainer\":\"styles_sizeContainer__UHRKk\",\"mainContainer\":\"styles_mainContainer__3n-vI\",\"stick\":\"styles_stick__1-KQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1Lt_7\",\"controlButton\":\"styles_controlButton__qeuna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__3hAK_\",\"title\":\"styles_title__2jE3g\",\"information\":\"styles_information__3vjHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"styles_legend__o6t-n\",\"legendItem\":\"styles_legendItem__28T9k\",\"legendCell\":\"styles_legendCell__3Gjav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"styles_value__iSefZ\",\"line\":\"styles_line__1UuZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__1pP1E\",\"octicon\":\"styles_octicon__1MbaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2_-D1\",\"tabsRoot\":\"styles_tabsRoot__3NnPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outputContainer\":\"styles_outputContainer__3YvT8\",\"output\":\"styles_output__2-qog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backLine\":\"styles_backLine__2sGJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ledContainer\":\"styles_ledContainer__50WEm\",\"ledCircle\":\"styles_ledCircle__1sR7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderContainer\":\"styles_sliderContainer__1QJLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"styles_value__2ab5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartContainer\":\"styles_chartContainer__1tEw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"styles_control__3OEKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorPickerContainer\":\"styles_colorPickerContainer__EU0jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumb\":\"styles_thumb__2fYo-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__3MfBa\",\"chart\":\"styles_chart__109t2\",\"widgetLabelContainer\":\"styles_widgetLabelContainer__2NjAi\",\"widgetLabel\":\"styles_widgetLabel__1liWU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__2UA0W\",\"chart\":\"styles_chart__3wntN\",\"widgetLabelContainer\":\"styles_widgetLabelContainer__nKGzu\",\"widgetLabel\":\"styles_widgetLabel__1pKAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"styles_map__3xMEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"styles_imageContainer__1WaJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__WQ3WQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1BJOh\",\"workspace\":\"styles_workspace__3RhQO\",\"workspaceInner\":\"styles_workspaceInner__2Zi_G\",\"header\":\"styles_header__3HDHr\",\"headerInner\":\"styles_headerInner__2VF8p\",\"headerTitle\":\"styles_headerTitle__1lWDZ\",\"headerControls\":\"styles_headerControls__3sFf9\",\"headerDelimiter\":\"styles_headerDelimiter__3tUlq\",\"widgetsArea\":\"styles_widgetsArea__1b1PY\",\"selectAutoSync\":\"styles_selectAutoSync__35o2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__UK7Ky\",\"emptyFiller\":\"styles_emptyFiller__3gekg\",\"form\":\"styles_form__1VQ4Y\",\"form-appear\":\"styles_form-appear__18hax\",\"title\":\"styles_title__2oIaf\",\"error\":\"styles_error__3o2Zk\",\"connectionProblem\":\"styles_connectionProblem__1Oi_U\",\"tokensInput\":\"styles_tokensInput__35VTK\"};","// closest polyfill\r\nif (!Element.prototype.closest) {\r\n    Element.prototype.closest = function(css) {\r\n        let node = this;\r\n\r\n        while (node) {\r\n            if (node.matches(css)) {\r\n                return node;\r\n            }\r\n\r\n            node = node.parentElement;\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\n// matches polyfill\r\nif (!Element.prototype.matches) {\r\n    Element.prototype.matches =\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector;\r\n}\r\n","export const UPDATE_SETTINGS = 'app/settings/UPDATE_SETTINGS';\r\n","import * as Immutable from 'immutable';\r\nimport { UPDATE_SETTINGS } from './actionTypes';\r\n\r\nconst initialState = Immutable.fromJS({});\r\n\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case UPDATE_SETTINGS: {\r\n            const { settings } = action;\r\n\r\n            return state.merge(settings);\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import reducer from './reducer';\r\n\r\nexport default reducer;\r\n","export const SET_CONNECTION_PARAMS = 'app/blynk/SET_CONNECTION_PARAMS';\r\nexport const SET_PROJECT = 'app/blynk/SET_PROJECT';\r\nexport const SET_PIN_VALUE = 'app/blynk/SET_PIN_VALUE';\r\nexport const SET_PIN_HISTORY = 'app/blynk/SET_PIN_HISTORY';\r\nexport const SET_TOKEN = 'app/blynk/SET_TOKEN';\r\nexport const LOGOUT = 'app/blynk/LOGOUT';\r\nexport const SET_ACTIVE_TAB_ID = 'app/blynk/SET_ACTIVE_TAB_ID';\r\nexport const SET_AUTO_SYNC = 'app/blynk/SET_AUTO_SYNC';\r\n","import * as Immutable from 'immutable';\r\nimport {\r\n    SET_CONNECTION_PARAMS,\r\n    SET_PROJECT,\r\n    SET_PIN_VALUE,\r\n    SET_PIN_HISTORY,\r\n    LOGOUT,\r\n    SET_ACTIVE_TAB_ID,\r\n    SET_AUTO_SYNC,\r\n} from './actionTypes';\r\n\r\nconst defaultTokens = (localStorage.getItem('blynk-web-client:tokens') || '').split(',');\r\nconst defaultServerHost = localStorage.getItem('blynk-web-client:serverHost') || 'blynk-cloud.com';\r\nconst defaultPort = Number(localStorage.getItem('blynk-web-client:serverPort')) || 8080;\r\nconst defaultConnectionMode = localStorage.getItem('blynk-web-client:connectionMode') || 'no-ssl';\r\nconst defaultAutoSync = Number(localStorage.getItem('blynk-web-client:autoSync')) || 0;\r\n\r\nconst initialState = Immutable.fromJS({\r\n    tokens: defaultTokens,\r\n    serverHost: defaultServerHost,\r\n    serverPort: defaultPort,\r\n    connectionMode: defaultConnectionMode,\r\n\r\n    autoSync: defaultAutoSync,\r\n\r\n    activeTabId: 0,\r\n\r\n    project: null,\r\n\r\n    devices: {},\r\n});\r\n\r\nexport default function reducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case SET_CONNECTION_PARAMS: {\r\n            const { tokens, serverHost, serverPort, connectionMode } = action;\r\n            return state\r\n                .set('tokens', tokens)\r\n                .set('serverHost', serverHost)\r\n                .set('serverPort', serverPort)\r\n                .set('connectionMode', connectionMode);\r\n        }\r\n        case LOGOUT: {\r\n            return state\r\n                .set('tokens', new Immutable.List())\r\n                .set('activeTabId', 0)\r\n                .set('project', null)\r\n                .set('pins', new Immutable.Map())\r\n                .set('pinsHistory', new Immutable.Map())\r\n                .set('pinsWriteHistory', new Immutable.Map())\r\n                .set('devices', new Immutable.Map());\r\n        }\r\n        case SET_ACTIVE_TAB_ID: {\r\n            const { tabId } = action;\r\n            return state.set('activeTabId', tabId);\r\n        }\r\n        case SET_PROJECT: {\r\n            const { project, devices } = action;\r\n\r\n            return state.set('project', project).set('devices', devices);\r\n        }\r\n        case SET_PIN_VALUE: {\r\n            const { deviceId, pin, value } = action;\r\n\r\n            let device = state.getIn(['devices', deviceId]);\r\n\r\n            device = device.setIn(['pins', pin], value);\r\n\r\n            // Write value to pinsWriteHistory\r\n            // TODO This is very bad idea to store history like that!\r\n            // let pinWriteHistory = device.getIn(['pinsWriteHistory', pin], new Immutable.List());\r\n            // pinWriteHistory = pinWriteHistory.push(value);\r\n            // device = device.setIn(['pinsWriteHistory', pin], pinWriteHistory);\r\n\r\n            return state.setIn(['devices', deviceId], device);\r\n        }\r\n        case SET_PIN_HISTORY: {\r\n            const { deviceId, pin, history } = action;\r\n\r\n            let device = state.getIn(['devices', deviceId]);\r\n            device = device.setIn(['pinsHistory', pin], history);\r\n\r\n            return state.setIn(['devices', deviceId], device);\r\n        }\r\n        case SET_AUTO_SYNC: {\r\n            const { value } = action;\r\n\r\n            return state.set('autoSync', value);\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import reducer from './reducer';\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport settings from './settings';\r\nimport blynk from './blynk';\r\n\r\nexport default combineReducers({\r\n    settings,\r\n    blynk,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './modules';\r\n\r\nconst configureStore = () => {\r\n    const initialState = {};\r\n    const enhancers = [];\r\n    const middleware = [thunk];\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\n        if (typeof devToolsExtension === 'function') {\r\n            enhancers.push(devToolsExtension());\r\n        }\r\n    }\r\n\r\n    const composedEnhancers = compose(\r\n        applyMiddleware(...middleware),\r\n        ...enhancers,\r\n    );\r\n\r\n    const store = createStore(rootReducer, initialState, composedEnhancers);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (module.hot) {\r\n            module.hot.accept('./modules', () => {\r\n                store.replaceReducer(rootReducer);\r\n            });\r\n        }\r\n    }\r\n\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import * as Immutable from 'immutable';\r\n\r\nexport function listToMap(list, keyField = 'id') {\r\n    let result = new Immutable.Map();\r\n    list.forEach(listItem => {\r\n        result = result.set(listItem.get(keyField), listItem);\r\n    });\r\n    return result;\r\n}\r\n","import repeat from '@avinlab/repeat';\r\nimport throttle from 'lodash/throttle';\r\n\r\nconst MsgType = {\r\n    RESPONSE: 0,\r\n    LOGIN: 2,\r\n    PING: 6,\r\n    TWEET: 12,\r\n    EMAIL: 13,\r\n    NOTIFY: 14,\r\n    BRIDGE: 15,\r\n    HW_SYNC: 16,\r\n    HW_INFO: 17,\r\n    HARDWARE: 20,\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst MsgStatus = {\r\n    OK: 200,\r\n    ILLEGAL_COMMAND: 2,\r\n    NO_ACTIVE_DASHBOARD: 8,\r\n    INVALID_TOKEN: 9,\r\n    ILLEGAL_COMMAND_BODY: 11,\r\n};\r\n\r\nfunction getCommandByString(cmdString) {\r\n    switch (cmdString) {\r\n        case 'ping':\r\n            return MsgType.PING;\r\n        case 'login':\r\n            return MsgType.LOGIN;\r\n        case 'hardware':\r\n            return MsgType.HARDWARE;\r\n        case 'bridge':\r\n            return MsgType.BRIDGE;\r\n        case 'hwSync':\r\n            return MsgType.HW_SYNC;\r\n        default:\r\n    }\r\n}\r\n\r\nfunction getStringByCommandCode(cmd) {\r\n    switch (cmd) {\r\n        case 0:\r\n            return 'RESPONSE';\r\n        case 20:\r\n            return 'HARDWARE';\r\n        default:\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction getStatusByCode(statusCode) {\r\n    switch (statusCode) {\r\n        case 200:\r\n            return 'OK';\r\n        case 2:\r\n            return 'ILLEGAL_COMMAND';\r\n        case 8:\r\n            return 'NO_ACTIVE_DASHBOARD';\r\n        case 9:\r\n            return 'INVALID_TOKEN';\r\n        case 11:\r\n            return 'ILLEGAL_COMMAND_BODY';\r\n        default:\r\n    }\r\n}\r\n\r\n/**\r\n * ArrayBuffer to string\r\n * @param buf\r\n * @returns {string}\r\n */\r\nfunction ab2str(buf) {\r\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\r\n}\r\n\r\nclass EventHandler {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n\r\n    addEventListener(event, action) {\r\n        this._events[event] = this._events[event] || [];\r\n        if (!this._events[event].includes(action)) {\r\n            this._events[event].push(action);\r\n        }\r\n    }\r\n\r\n    removeEventListener(event, action) {\r\n        this._events[event] = this._events[event] || [];\r\n        this._events[event] = this._events[event].filter(i => i !== action);\r\n    }\r\n\r\n    dispatchEvent(event, details) {\r\n        this._events[event] = this._events[event] || [];\r\n        this._events[event].forEach(eventHandler => {\r\n            eventHandler(details);\r\n        });\r\n    }\r\n}\r\n\r\nclass BlynkWSClient extends EventHandler {\r\n    isRunning = false; // WS Connection status\r\n    socket = null; // WS Socket\r\n    pingTimer = null; // Internal ping timer\r\n    token = null; // Blynk auth token\r\n    debugging = false;\r\n\r\n    /**\r\n     * Init Blynk WS connection\r\n     * @param token\r\n     * @param serverHost\r\n     * @param serverPort\r\n     * @param connectionMode\r\n     */\r\n    init({ token, serverHost, serverPort, connectionMode }) {\r\n        this.stop();\r\n        this.token = token;\r\n\r\n        this.socket = new WebSocket(\r\n            `${connectionMode === 'no-ssl' ? 'ws' : 'wss'}://${serverHost}:${serverPort}/websockets`,\r\n        );\r\n        this.socket.binaryType = 'arraybuffer';\r\n\r\n        this.socket.onmessage = this.handleWSMessage;\r\n        this.socket.onopen = event => {\r\n            this.start();\r\n            this.debugging && console.info('WS: Connected');\r\n        };\r\n        this.socket.onclose = event => {\r\n            this.stop();\r\n            this.debugging && console.info('WS: Disconnected');\r\n        };\r\n        this.socket.onerror = event => {\r\n            console.warn('WS: Error');\r\n        };\r\n\r\n        this.syncTimer = repeat({\r\n            action: () => {\r\n                this.sync();\r\n            },\r\n            delay: 1000,\r\n            skipFirst: false,\r\n        });\r\n    }\r\n\r\n    start() {\r\n        if (this.isRunning) {\r\n            return;\r\n        }\r\n        this.isRunning = true;\r\n\r\n        this.send(`login ${this.token}`);\r\n\r\n        this.send(`bridge 9999 i ${this.token}`);\r\n\r\n        this.pingTimer = repeat({\r\n            action: () => {\r\n                this.send('ping');\r\n            },\r\n            delay: 1000 * 2,\r\n            firstTimeDelay: 1000 * 2,\r\n            skipFirst: true,\r\n        });\r\n        this.pingTimer.start();\r\n    }\r\n\r\n    setSyncTimerInterval(interval) {\r\n        if (!interval) {\r\n            this.syncTimer.stop();\r\n        } else {\r\n            this.syncTimer.updateDelay(interval);\r\n            this.syncTimer.stop();\r\n            this.syncTimer.start();\r\n        }\r\n    }\r\n\r\n    sync() {\r\n        this.send(`hwSync`);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.isRunning) {\r\n            return;\r\n        }\r\n\r\n        this.isRunning = false;\r\n        this.pingTimer.stop();\r\n        this.socket.close();\r\n    }\r\n\r\n    handleWSMessage = event => {\r\n        if (event.data instanceof ArrayBuffer) {\r\n            const bufArray = event.data;\r\n\r\n            const dataView = new DataView(bufArray);\r\n            const msgCommand = dataView.getInt8(0);\r\n\r\n            switch (msgCommand) {\r\n                case MsgType.RESPONSE: {\r\n                    this.debugging && console.info(this.messageToDebugString(bufArray));\r\n\r\n                    break;\r\n                }\r\n                case MsgType.HARDWARE: {\r\n                    this.handleHardwareMessage(ab2str(bufArray.slice(5)));\r\n                    break;\r\n                }\r\n                default:\r\n            }\r\n        } else {\r\n            console.warn(`WS: Unexpected type : ${event.data}`);\r\n        }\r\n    };\r\n\r\n    messageToDebugString(bufArray) {\r\n        const dataView = new DataView(bufArray);\r\n        const cmdString = getStringByCommandCode(dataView.getInt8(0));\r\n        const msgId = dataView.getUint16(1);\r\n        const responseCode = getStatusByCode(dataView.getUint16(3));\r\n        return `Command : ${cmdString}, msgId : ${msgId}, responseCode : ${responseCode}`;\r\n    }\r\n\r\n    /**\r\n     * Send event `write-pin` to subscribers\r\n     * @param pin\r\n     * @param value\r\n     */\r\n    dispatchWritePin(pin, value) {\r\n        this.dispatchEvent('write-pin', {\r\n            pin: `${pin}`,\r\n            value,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Send value to pin\r\n     * @param pin\r\n     * @param value\r\n     * @param dontSend\r\n     */\r\n    sendWritePin(pin, value, dontSend = false) {\r\n        const pinType = pin[0];\r\n        const pinNumber = pin.slice(1);\r\n\r\n        if (!dontSend) {\r\n            this.throttleSend(pin)(`bridge 9999 ${pinType}w ${pinNumber} ${value}`);\r\n        }\r\n\r\n        this.dispatchWritePin(pin, value);\r\n    }\r\n\r\n    _throttleSendFunctions = {};\r\n    throttleSend = pin => {\r\n        this._throttleSendFunctions[pin] = this._throttleSendFunctions[pin] || throttle(this.send.bind(this), 100);\r\n        return this._throttleSendFunctions[pin];\r\n    };\r\n\r\n    handleHardwareMessage(data) {\r\n        const [type, pin, value] = data.split(String.fromCharCode(0));\r\n        switch (type) {\r\n            case 'vw': {\r\n                // write virtual pin\r\n                this.dispatchWritePin(`v${pin}`, value);\r\n                break;\r\n            }\r\n            case 'aw': {\r\n                // write analog pin\r\n                this.dispatchWritePin(`a${pin}`, value);\r\n                break;\r\n            }\r\n            case 'dw': {\r\n                // write digital pin\r\n                this.dispatchWritePin(`d${pin}`, value);\r\n                break;\r\n            }\r\n            default:\r\n        }\r\n    }\r\n\r\n    send(data) {\r\n        if (!this.isRunning) {\r\n            return;\r\n        }\r\n        if (this.socket.readyState !== WebSocket.OPEN) {\r\n            return;\r\n        }\r\n\r\n        const commandAndBody = data.split(' ');\r\n        const message = this.createMessage(commandAndBody);\r\n\r\n        this.debugging && console.info(`WS sending : ${data}`);\r\n\r\n        this.socket.send(message);\r\n    }\r\n\r\n    createMessage(commandAndBody) {\r\n        const cmdString = commandAndBody[0];\r\n        const cmdBody = commandAndBody.length > 1 ? commandAndBody.slice(1).join('\\0') : null;\r\n        const cmd = getCommandByString(cmdString);\r\n        return this.buildBlynkMessage(cmd, 1, cmdBody);\r\n    }\r\n\r\n    buildBlynkMessage(cmd, msgId, cmdBody) {\r\n        const BLYNK_HEADER_SIZE = 5;\r\n        const bodyLength = cmdBody ? cmdBody.length : 0;\r\n        const bufArray = new ArrayBuffer(BLYNK_HEADER_SIZE + bodyLength);\r\n        const dataView = new DataView(bufArray);\r\n        dataView.setInt8(0, cmd);\r\n        dataView.setInt16(1, msgId);\r\n        dataView.setInt16(3, bodyLength);\r\n        if (bodyLength > 0) {\r\n            for (let i = 0, offset = 5; i < cmdBody.length; i += 1, offset += 1) {\r\n                dataView.setInt8(offset, cmdBody.charCodeAt(i));\r\n            }\r\n        }\r\n        return new Uint8Array(bufArray);\r\n    }\r\n}\r\n\r\nclass BlynkWSMultiClient {\r\n    _clients = {};\r\n\r\n    getBlynkWSClient = deviceId => {\r\n        if (!this._clients[String(deviceId)]) {\r\n            this._clients[String(deviceId)] = new BlynkWSClient();\r\n        }\r\n        return this._clients[String(deviceId)];\r\n    };\r\n}\r\n\r\nconst blynkWSMultiClient = new BlynkWSMultiClient();\r\n\r\nexport default blynkWSMultiClient.getBlynkWSClient;\r\n","export function getHttpBlynkUrl({ token, serverHost, serverPort, connectionMode }) {\r\n    return `${connectionMode === 'no-ssl' ? 'http' : 'https'}://${serverHost}:${serverPort}/${token}`;\r\n}\r\n","import escape from 'lodash/escape';\r\nimport escapeRegExp from 'lodash/escapeRegExp';\r\n\r\nexport function getWidgetPinAddress(widget) {\r\n    if (widget.get('pin') === -1) {\r\n        return -1;\r\n    }\r\n    return widget.get('pinType')[0].toLowerCase() + widget.get('pin');\r\n}\r\n\r\nexport function makeValueSpan(valueStr) {\r\n    return `<span class=\"pinValue\">${escape(valueStr)}</span>`;\r\n}\r\n\r\nexport function formatValueString(value, valueFormatting, pinExpression = 'pin') {\r\n    if (!valueFormatting) {\r\n        return `<span class=\"pinValue\">${escape(value)}</span>`;\r\n    }\r\n\r\n    return valueFormatting.replace(new RegExp(`/${escapeRegExp(pinExpression)}([.]?([#]*))/`), function(g1, g2, g3) {\r\n        let result;\r\n        if (g2) {\r\n            result = parseFloat(Number(value).toFixed(g3.length));\r\n        } else {\r\n            result = value;\r\n        }\r\n        return makeValueSpan(String(result));\r\n    });\r\n}\r\n","import request from 'superagent';\r\nimport * as Immutable from 'immutable';\r\nimport pako from 'pako';\r\nimport * as d3 from 'd3';\r\nimport {\r\n    SET_CONNECTION_PARAMS,\r\n    SET_PIN_VALUE,\r\n    SET_PROJECT,\r\n    SET_PIN_HISTORY,\r\n    LOGOUT,\r\n    SET_ACTIVE_TAB_ID,\r\n    SET_AUTO_SYNC,\r\n} from './actionTypes';\r\nimport { listToMap } from '../../../utils/immutable';\r\nimport blynkWSClient from '../../../common/blynkWSClient';\r\nimport { getHttpBlynkUrl } from '../../../utils/connection';\r\nimport { getWidgetPinAddress } from '../../../utils/data';\r\n\r\n/**\r\n * Setup connection options\r\n * @param token\r\n * @param serverHost\r\n * @param serverPort\r\n * @param connectionMode\r\n * @returns {{type: string, serverPort: *, serverHost: *, token: *}}\r\n */\r\nexport function setConnectionParams({ tokens, serverHost, serverPort, connectionMode }) {\r\n    // Save base options to localstorage\r\n    localStorage.setItem('blynk-web-client:tokens', tokens.join(','));\r\n    localStorage.setItem('blynk-web-client:serverHost', serverHost);\r\n    localStorage.setItem('blynk-web-client:serverPort', serverPort);\r\n    localStorage.setItem('blynk-web-client:connectionMode', connectionMode);\r\n\r\n    return {\r\n        type: SET_CONNECTION_PARAMS,\r\n        tokens,\r\n        serverHost,\r\n        serverPort,\r\n        connectionMode,\r\n    };\r\n}\r\n\r\nexport function logout() {\r\n    return (dispatch, getState) => {\r\n        localStorage.setItem('blynk-web-client:tokens', '');\r\n\r\n        getState()\r\n            .blynk.get('devices')\r\n            .forEach(device => {\r\n                blynkWSClient(device.get('id')).stop();\r\n            });\r\n\r\n        dispatch({\r\n            type: LOGOUT,\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * Get active blynk project\r\n * @returns {Function}\r\n */\r\nexport function getProject() {\r\n    return async (dispatch, getState) => {\r\n        const { tokens, serverHost, serverPort, connectionMode, autoSync } = getState().blynk.toObject();\r\n\r\n        let { body: project } = await request\r\n            .get(`${getHttpBlynkUrl({ token: tokens.first(), serverHost, serverPort, connectionMode })}/project`)\r\n            .set('accept', 'json');\r\n\r\n        project = Immutable.fromJS(project);\r\n        let devices = project.get('devices');\r\n        devices = devices.map((device, idx) => {\r\n            return device\r\n                .set('token', tokens.get(idx))\r\n                .set('pins', new Immutable.Map())\r\n                .set('pinsHistory', new Immutable.Map())\r\n                .set('pinsWriteHistory', new Immutable.Map());\r\n        });\r\n\r\n        devices = listToMap(devices, 'id');\r\n\r\n        project = project.set('widgets', listToMap(project.get('widgets'), 'id'));\r\n\r\n        let widgets = project.get('widgets');\r\n\r\n        const processWidgetPin = (widgetPinBlock, deviceId) => {\r\n            const pin = widgetPinBlock.get('pin', -1);\r\n            const value = widgetPinBlock.get('value');\r\n            if (pin !== -1) {\r\n                const pinId = getWidgetPinAddress(widgetPinBlock);\r\n                widgetPinBlock = widgetPinBlock.set('pinId', pinId);\r\n\r\n                if (value !== undefined) {\r\n                    devices = devices.setIn([deviceId, 'pins', pinId], value);\r\n                }\r\n            }\r\n            return widgetPinBlock;\r\n        };\r\n\r\n        // Prepare pin ids and get exist pins values\r\n        widgets = widgets.map(widget => {\r\n            widget = processWidgetPin(widget, widget.get('deviceId'));\r\n\r\n            let widgetPins = widget.get('pins');\r\n            if (widgetPins) {\r\n                widgetPins = widgetPins.map(widgetPinBlock => {\r\n                    return processWidgetPin(widgetPinBlock, widget.get('deviceId'));\r\n                });\r\n                widget = widget.set('pins', widgetPins);\r\n            }\r\n\r\n            let widgetDataStreams = widget.get('dataStreams');\r\n            if (widgetDataStreams) {\r\n                widgetDataStreams = widgetDataStreams.map(widgetDataStream =>\r\n                    widgetDataStream.set('pin', processWidgetPin(widgetDataStream.get('pin'), widget.get('deviceId'))),\r\n                );\r\n                widget = widget.set('dataStreams', widgetDataStreams);\r\n            }\r\n\r\n            return widget;\r\n        });\r\n\r\n        project = project.set('widgets', widgets);\r\n\r\n        devices.forEach(device => {\r\n            const token = device.get('token');\r\n            const deviceId = device.get('id');\r\n\r\n            // Connect to blynk ws server\r\n            blynkWSClient(deviceId).init({\r\n                token,\r\n                serverHost,\r\n                serverPort,\r\n                connectionMode,\r\n            });\r\n            blynkWSClient(deviceId).addEventListener('write-pin', ({ pin, value }) => {\r\n                dispatch(setPinValue({ deviceId, pin, value }));\r\n            });\r\n            blynkWSClient(deviceId).setSyncTimerInterval(autoSync);\r\n        });\r\n\r\n        dispatch({\r\n            type: SET_PROJECT,\r\n            project,\r\n            devices,\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * Test connection with blynk server\r\n * @returns {Function}\r\n */\r\nexport function testConnection() {\r\n    return async (dispatch, getState) => {\r\n        const { tokens, serverHost, serverPort, connectionMode } = getState().blynk.toObject();\r\n\r\n        await request\r\n            .get(`${getHttpBlynkUrl({ token: tokens.first(), serverHost, serverPort, connectionMode })}/isAppConnected`)\r\n            .set('accept', 'json');\r\n    };\r\n}\r\n\r\n/**\r\n * Set pin value\r\n * @param deviceId\r\n * @param pin - pin label\r\n * @param value - pin value\r\n * @returns {{pin: *, type: string, value: *}}\r\n */\r\nexport function setPinValue({ deviceId, pin, value }) {\r\n    return {\r\n        type: SET_PIN_VALUE,\r\n        deviceId,\r\n        pin,\r\n        value,\r\n    };\r\n}\r\n\r\n/**\r\n * Load pin history from server\r\n * @param pin\r\n * @param deviceId\r\n * @returns {Function}\r\n */\r\nexport function getPinHistory({ deviceId, pin }) {\r\n    return async (dispatch, getState) => {\r\n        const { serverHost, serverPort, connectionMode } = getState().blynk.toObject();\r\n\r\n        const token = getState().blynk.getIn(['devices', deviceId, 'token']);\r\n\r\n        try {\r\n            const res = await request\r\n                .get(\r\n                    `${getHttpBlynkUrl({\r\n                        token,\r\n                        serverHost,\r\n                        serverPort,\r\n                        connectionMode,\r\n                    })}/data/${pin.toUpperCase()}`,\r\n                )\r\n                .responseType('blob');\r\n\r\n            const processData = data =>\r\n                new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.onload = () => {\r\n                        const csv = pako.ungzip(reader.result, { to: 'string' });\r\n                        const history = d3.csvParseRows(csv).map(item => [Number(item[1]), Number(item[0])]);\r\n                        dispatch({\r\n                            type: SET_PIN_HISTORY,\r\n                            deviceId,\r\n                            pin,\r\n                            history,\r\n                        });\r\n                        resolve();\r\n                    };\r\n                    reader.readAsArrayBuffer(data);\r\n                });\r\n            await processData(res.body);\r\n        } catch (e) {\r\n            dispatch({\r\n                type: SET_PIN_HISTORY,\r\n                deviceId,\r\n                pin,\r\n                history: [],\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Set active tab\r\n * @param tabId\r\n * @returns {{tabId: *, type: string}}\r\n */\r\nexport function setActiveTabId(tabId) {\r\n    return {\r\n        type: SET_ACTIVE_TAB_ID,\r\n        tabId,\r\n    };\r\n}\r\n\r\n/**\r\n * Set auto sync timer delay for all ws clients\r\n * @param value\r\n * @returns {Function}\r\n */\r\nexport function setAutoSyncValue(value) {\r\n    localStorage.setItem('blynk-web-client:autoSync', value);\r\n    return (dispatch, getState) => {\r\n        const devices = getState().blynk.get('devices');\r\n\r\n        devices.forEach(device => {\r\n            const deviceId = device.get('id');\r\n            blynkWSClient(deviceId).setSyncTimerInterval(value);\r\n        });\r\n\r\n        dispatch({\r\n            type: SET_AUTO_SYNC,\r\n            value,\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * Sync HW pins for all devices\r\n * @returns {Function}\r\n */\r\nexport function sync() {\r\n    return (dispatch, getState) => {\r\n        const devices = getState().blynk.get('devices');\r\n\r\n        devices.forEach(device => {\r\n            const deviceId = device.get('id');\r\n            blynkWSClient(deviceId).sync();\r\n        });\r\n    };\r\n}\r\n","export const required = value => (value ? undefined : 'Field cannot be empty');\r\n","/* eslint-disable max-len */\r\nimport React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nexport default class GitHubLink extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={styles.main}>\r\n                <a href=\"https://github.com/avin/blynk-web-client\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <svg className={styles.octicon} viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\">\r\n                        <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\r\n                        />\r\n                    </svg>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Field } from 'react-final-form';\r\nimport cn from 'clsx';\r\nimport { Button, FormGroup, HTMLSelect, InputGroup, Intent, TextArea } from '@blueprintjs/core';\r\nimport * as Immutable from 'immutable';\r\nimport trim from 'lodash/trim';\r\nimport { setConnectionParams, testConnection } from '../../../redux/modules/blynk/actions';\r\nimport styles from './styles.module.scss';\r\nimport { required } from '../../../utils/validation';\r\nimport GitHubLink from './GitHubLink/GitHubLink';\r\n\r\nconst ErrorString = meta => (meta.error && meta.touched ? <div className={styles.error}>{meta.error}</div> : null);\r\n\r\nconst InputGroupField = ({ input, meta, ...props }) => (\r\n    <>\r\n        <InputGroup {...{ ...input, ...props }} />\r\n        <ErrorString {...meta} />\r\n    </>\r\n);\r\n\r\nconst TextAreaField = ({ input, meta, ...props }) => (\r\n    <>\r\n        <TextArea {...{ ...input, ...props }} />\r\n        <ErrorString {...meta} />\r\n    </>\r\n);\r\n\r\nconst HTMLSelectField = ({ input, meta, ...props }) => <HTMLSelect {...{ ...input, ...props }} />;\r\n\r\nexport class ConnectionPage extends React.Component {\r\n    state = {\r\n        busy: false,\r\n        connectionError: null,\r\n    };\r\n\r\n    handleSubmit = async params => {\r\n        const { setConnectionParams, history, testConnection } = this.props;\r\n\r\n        const tokens = params.tokens\r\n            .split(/[\\r]?\\n/)\r\n            .map(i => trim(i))\r\n            .filter(i => i);\r\n\r\n        setConnectionParams({\r\n            tokens: Immutable.fromJS(tokens),\r\n            serverHost: params.serverHost,\r\n            serverPort: params.serverPort,\r\n            connectionMode: params.connectionMode,\r\n        });\r\n\r\n        this.setState({ busy: true });\r\n        try {\r\n            await testConnection();\r\n\r\n            history.push('project');\r\n        } catch (e) {\r\n            const error = e.response ? e.response.text : e.message;\r\n            this.setState({ busy: false, connectionError: error });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { busy, connectionError } = this.state;\r\n        const { tokens, serverHost, serverPort, connectionMode } = this.props;\r\n\r\n        return (\r\n            <div className={cn('bp3-dark', styles.main)}>\r\n                <div className={styles.emptyFiller} />\r\n                <Form\r\n                    onSubmit={this.handleSubmit}\r\n                    initialValues={{\r\n                        tokens: tokens.join('\\n'),\r\n                        serverHost,\r\n                        serverPort,\r\n                        connectionMode,\r\n                    }}\r\n                    render={({ handleSubmit }) => (\r\n                        <form onSubmit={handleSubmit} className={cn('bp3-card', styles.form)}>\r\n                            <div className={styles.title}>Isamm 2019 IOT</div>\r\n                            <FormGroup\r\n                                label=\"Project's authentication tokens\"\r\n                                labelFor=\"tokens-input\"\r\n                                helperText=\"Paste here all auth tokens of your project\"\r\n                            >\r\n                                <Field\r\n                                    name=\"tokens\"\r\n                                    id=\"tokens-input\"\r\n                                    component={TextAreaField}\r\n                                    validate={required}\r\n                                    className={styles.tokensInput}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup label=\"Connection mode\" labelFor=\"connectionMode-input\">\r\n                                <Field\r\n                                    name=\"connectionMode\"\r\n                                    id=\"connectionMode-input\"\r\n                                    component={HTMLSelectField}\r\n                                    fill\r\n                                    options={[{ label: 'No SSL', value: 'no-ssl' }, { label: 'SSL', value: 'ssl' }]}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup label=\"Server Host\" labelFor=\"serverHost-input\">\r\n                                <Field\r\n                                    name=\"serverHost\"\r\n                                    id=\"serverHost-input\"\r\n                                    component={InputGroupField}\r\n                                    validate={required}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup label=\"Server Port\" labelFor=\"serverPort-input\">\r\n                                <Field\r\n                                    name=\"serverPort\"\r\n                                    id=\"serverPort-input\"\r\n                                    component={InputGroupField}\r\n                                    validate={required}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                disabled={busy}\r\n                                icon=\"log-in\"\r\n                                fill\r\n                                className={styles.submitButton}\r\n                                intent={Intent.PRIMARY}\r\n                            >\r\n                                {busy ? 'Connecting...' : 'Connect'}\r\n                            </Button>\r\n\r\n                            {connectionError && (\r\n                                <div className={styles.connectionProblem}>\r\n                                    Connection to server problem ({connectionError})\r\n                                </div>\r\n                            )}\r\n                        </form>\r\n                    )}\r\n                />\r\n\r\n                <GitHubLink />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        tokens: state.blynk.get('tokens'),\r\n        serverHost: state.blynk.get('serverHost'),\r\n        serverPort: state.blynk.get('serverPort'),\r\n        connectionMode: state.blynk.get('connectionMode'),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        setConnectionParams,\r\n        testConnection,\r\n    },\r\n)(ConnectionPage);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.scss';\r\n\r\nconst isEmptyString = str => str === '' || str === undefined;\r\n\r\nexport default class WidgetLabel extends React.Component {\r\n    static propTypes = {\r\n        title: PropTypes.node,\r\n        information: PropTypes.node,\r\n        emptyHide: PropTypes.bool,\r\n    };\r\n\r\n    static defaultProps = {\r\n        emptyHide: true,\r\n    };\r\n\r\n    render() {\r\n        const { title, information, emptyHide } = this.props;\r\n\r\n        if (isEmptyString(title) && isEmptyString(information) && emptyHide) {\r\n            return <div />;\r\n        }\r\n\r\n        return (\r\n            <div className={styles.root}>\r\n                <div className={styles.title}>{title}</div>\r\n                <div className={styles.information}>{information}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import createCachedSelector from 're-reselect';\r\nimport * as Immutable from 'immutable';\r\n\r\nexport const pinValueSelector = (state, deviceId, pinId) => {\r\n    let value = state.blynk.getIn(['devices', deviceId, 'pins', pinId]);\r\n    if (value && !isNaN(value)) {\r\n        value = parseFloat(Number(value).toFixed(2));\r\n    }\r\n    return value;\r\n};\r\n\r\nexport const widgetDataStreamsHistorySelector = createCachedSelector(\r\n    (state, widget) => widget,\r\n    state => state.blynk.getIn(['devices']),\r\n    (widget, devices) => {\r\n        const dataStreamsHistory = [];\r\n        widget.get('dataStreams', new Immutable.List()).forEach(dataStream => {\r\n            const deviceId = dataStream.get('targetId');\r\n            const pinId = dataStream.getIn(['pin', 'pinId']);\r\n            dataStreamsHistory.push(devices.getIn([deviceId, 'pinsHistory', pinId]));\r\n        });\r\n\r\n        return dataStreamsHistory;\r\n    },\r\n)((state, widget) => widget.get('id'));\r\n","import * as d3 from 'd3';\r\n\r\nexport function decodeBlynkColor(blynkColor, gradient = false) {\r\n    let color;\r\n    switch (blynkColor) {\r\n        case 600084223: // Green\r\n            color = '#23C48E';\r\n            break;\r\n        case 1602017535: // Purple\r\n            color = '#5F7CD8';\r\n            break;\r\n        case 79755519: // Blue\r\n            color = '#04C0F8';\r\n            break;\r\n        case -308477697: // Orange\r\n            color = '#ED9D00';\r\n            break;\r\n        case -750560001: // Red\r\n            color = '#D3435C';\r\n            break;\r\n        case -1: // White\r\n            color = '#FFFFFF';\r\n            break;\r\n        case 255: // Black\r\n            color = '#293742';\r\n            break;\r\n        default:\r\n            color = '#999';\r\n    }\r\n\r\n    if (!gradient) {\r\n        return color;\r\n    }\r\n\r\n    switch (blynkColor) {\r\n        case 2147483647: // Green/Red\r\n            color = ['#D3435C', '#ED9D00', '#23C48E'];\r\n            break;\r\n        case -2147483648: // Green/Blue\r\n            color = ['#5F7CD8', '#04C0F8', '#23C48E'];\r\n            break;\r\n        case 2147483646: // Red/Green\r\n            color = ['#23C48E', '#ED9D00', '#D3435C'];\r\n            break;\r\n        case -2147483647: // Blue/Green\r\n            color = ['#23C48E', '#04C0F8', '#5F7CD8'];\r\n            break;\r\n\r\n        default:\r\n            color = [color, color];\r\n    }\r\n\r\n    return color;\r\n}\r\n\r\nexport function numToCssColor(num) {\r\n    const color = parseColor(num);\r\n    if (color[0] === 0 && color[1] === 0 && color[2] === 0) {\r\n        return undefined;\r\n    }\r\n    return `rgba(${color.join(', ')})`;\r\n}\r\n\r\nfunction convertARGBtoRGBA(color) {\r\n    const a = (color & 0xff000000) >> 24;\r\n    const r = (color & 0x00ff0000) >> 16;\r\n    const g = (color & 0x0000ff00) >> 8;\r\n    const b = color & 0x000000ff;\r\n\r\n    return [r, g, b, a & 0xff];\r\n}\r\n\r\nfunction setAlphaComponent(color, alpha) {\r\n    return (color & 0x00ffffff) | (alpha << 24);\r\n}\r\n\r\nfunction parseColor(value) {\r\n    const decodedColor = Number(value);\r\n    return convertARGBtoRGBA(setAlphaComponent(decodedColor, 255));\r\n}\r\n\r\nexport function getWidgetValueColor(widget, value) {\r\n    const colorRange = decodeBlynkColor(widget.get('color'), true);\r\n    const valueProportion = (value - widget.get('min')) / widget.get('max') - widget.get('min');\r\n    if (isNaN(valueProportion)) {\r\n        return colorRange[colorRange.length - 1];\r\n    }\r\n    return d3.interpolateRgbBasis(colorRange)(valueProportion);\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@blueprintjs/core';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport cn from 'clsx';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport styles from './styles.module.scss';\r\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\r\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport { decodeBlynkColor } from '../../../../../../utils/color';\r\n\r\nexport class ButtonView extends React.Component {\r\n    state = {\r\n        pressed: false,\r\n    };\r\n\r\n    renderButtonLabel() {\r\n        const { widget } = this.props;\r\n\r\n        if (this.isButtonActive()) {\r\n            return widget.get('onLabel') || widget.getIn(['onButtonState', 'text']) || 'ON';\r\n        }\r\n        return widget.get('offLabel') || widget.getIn(['offButtonState', 'text']) || 'OFF';\r\n    }\r\n\r\n    handleMouseDown = () => {\r\n        const { widget, value } = this.props;\r\n\r\n        this.setState({\r\n            pressed: true,\r\n        });\r\n\r\n        const pin = getWidgetPinAddress(widget);\r\n\r\n        if (pin !== -1) {\r\n            if (widget.get('pushMode')) {\r\n                // If push mode\r\n                blynkWSClient(widget.get('deviceId')).sendWritePin(pin, widget.get('max'));\r\n            } else {\r\n                // If switch mode\r\n                // eslint-disable-next-line no-lonely-if\r\n                if (String(value) === String(widget.get('max'))) {\r\n                    blynkWSClient(widget.get('deviceId')).sendWritePin(pin, widget.get('min'));\r\n                } else {\r\n                    blynkWSClient(widget.get('deviceId')).sendWritePin(pin, widget.get('max'));\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const { widget } = this.props;\r\n\r\n        this.setState({\r\n            pressed: false,\r\n        });\r\n\r\n        const pin = getWidgetPinAddress(widget);\r\n\r\n        if (pin !== -1 && widget.get('pushMode')) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, widget.get('min'));\r\n        }\r\n    };\r\n\r\n    getButtonStyle({ width, height, isStyledButton }) {\r\n        const { widget } = this.props;\r\n\r\n        const buttonActive = this.isButtonActive();\r\n\r\n        if (isStyledButton) {\r\n            let borderRadius;\r\n            switch (widget.get('edge')) {\r\n                case 'SHARP':\r\n                    borderRadius = 0;\r\n                    break;\r\n                case 'ROUNDED':\r\n                    borderRadius = 3;\r\n                    break;\r\n                case 'PILL':\r\n                    borderRadius = height / 2;\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            return {\r\n                width,\r\n                height,\r\n                borderRadius,\r\n                backgroundColor: buttonActive\r\n                    ? decodeBlynkColor(widget.getIn(['onButtonState', 'backgroundColor']))\r\n                    : decodeBlynkColor(widget.getIn(['offButtonState', 'backgroundColor'])),\r\n\r\n                color: buttonActive\r\n                    ? decodeBlynkColor(widget.getIn(['onButtonState', 'textColor']))\r\n                    : decodeBlynkColor(widget.getIn(['offButtonState', 'textColor'])),\r\n            };\r\n        }\r\n\r\n        return {\r\n            margin: 2,\r\n            width: (Math.min(width, height) * widget.get('width')) / 2 - 4,\r\n            height: Math.min(width, height) - 4,\r\n            border: `2px solid ${decodeBlynkColor(widget.get('color'))}`,\r\n            color: this.isButtonActive()\r\n                ? decodeBlynkColor(widget.get('color') !== -1 ? -1 : 255)\r\n                : decodeBlynkColor(widget.get('color')),\r\n            backgroundColor: this.isButtonActive() ? decodeBlynkColor(widget.get('color')) : decodeBlynkColor(255),\r\n        };\r\n    }\r\n\r\n    isButtonActive() {\r\n        const { pressed } = this.state;\r\n        const { widget, value } = this.props;\r\n\r\n        return String(value) === String(widget.get('max')) || pressed;\r\n    }\r\n\r\n    render() {\r\n        const { widget } = this.props;\r\n\r\n        const isStyledButton = widget.get('type') === 'STYLED_BUTTON';\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label') || (isStyledButton ? '' : 'Button')} />\r\n                <div className={styles.buttonContainer}>\r\n                    <SizeMe className={styles.sizeContainer}>\r\n                        {({ width, height }) => (\r\n                            <Button\r\n                                className={cn({\r\n                                    [styles.button]: !isStyledButton,\r\n                                    [styles.styledButton]: isStyledButton,\r\n                                })}\r\n                                active={this.isButtonActive()}\r\n                                onMouseDown={this.handleMouseDown}\r\n                                onMouseUp={this.handleMouseUp}\r\n                                style={this.getButtonStyle({ width, height, isStyledButton })}\r\n                            >\r\n                                {this.renderButtonLabel()}\r\n                            </Button>\r\n                        )}\r\n                    </SizeMe>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const pinId = ownProps.widget.get('pinId');\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(ButtonView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Slider } from '@blueprintjs/core';\r\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\r\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport styles from './styles.module.scss';\r\n\r\nexport class SliderView extends React.Component {\r\n    handleChange = value => {\r\n        const { widget } = this.props;\r\n\r\n        const pin = getWidgetPinAddress(widget);\r\n        const fakeUpdate = widget.get('sendOnReleaseOn');\r\n        blynkWSClient(widget.get('deviceId')).sendWritePin(pin, value, fakeUpdate);\r\n    };\r\n\r\n    handleRelease = value => {\r\n        const { widget } = this.props;\r\n\r\n        if (widget.get('sendOnReleaseOn')) {\r\n            const pin = getWidgetPinAddress(widget);\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, value);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { widget, value, vertical } = this.props;\r\n\r\n        const sliderValue = Math.max(Math.min(Number(value), widget.get('max')), widget.get('min'));\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label') || (!vertical && 'Slider')} information={value} />\r\n                <div className={styles.sliderContainer}>\r\n                    <Slider\r\n                        value={sliderValue}\r\n                        labelRenderer={false}\r\n                        min={widget.get('min')}\r\n                        max={widget.get('max')}\r\n                        onChange={this.handleChange}\r\n                        onRelease={this.handleRelease}\r\n                        vertical={vertical}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(SliderView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { getWidgetValueColor } from '../../../../../../utils/color';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport { formatValueString } from '../../../../../../utils/data';\r\n\r\nexport class NumericalDisplayView extends React.Component {\r\n    renderValue() {\r\n        const { value, widget } = this.props;\r\n\r\n        return (\r\n            <span\r\n                dangerouslySetInnerHTML={{\r\n                    __html: formatValueString(value, widget.get('valueFormatting')),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { widget, value } = this.props;\r\n\r\n        let fontSize;\r\n        if (widget.get('fontSize') === 'LARGE') {\r\n            fontSize = `20px`;\r\n        } else if (widget.get('fontSize') === 'SMALL') {\r\n            fontSize = `14px`;\r\n        }\r\n\r\n        let textAlign;\r\n        if (widget.get('textAlignment') === 'MIDDLE') {\r\n            textAlign = 'center';\r\n        } else if (widget.get('textAlignment') === 'RIGHT') {\r\n            textAlign = 'right';\r\n        }\r\n\r\n        const color = getWidgetValueColor(widget, value);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"label\">{widget.get('label')}</div>\r\n                <div className={styles.value} style={{ textAlign, color, fontSize }}>\r\n                    {this.renderValue()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(NumericalDisplayView);\r\n","import React from 'react';\r\n\r\nexport default class UnknownView extends React.Component {\r\n    render() {\r\n        const { widget } = this.props;\r\n        return (\r\n            <div>\r\n                <b>UNKNOWN!</b> {widget.get('type')}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Immutable from 'immutable';\r\nimport TimeseriesMultiChart from '@avinlab/d3-timeseries-multi-chart';\r\nimport styles from './styles.module.scss';\r\nimport { decodeBlynkColor } from '../../../../../../../utils/color';\r\n\r\nexport default class DataStreamsChart extends React.Component {\r\n    static propTypes = {\r\n        showXAxis: PropTypes.bool,\r\n        width: PropTypes.number.isRequired,\r\n        height: PropTypes.number.isRequired,\r\n        controlBlockRef: PropTypes.instanceOf(Element),\r\n        legendBlockRef: PropTypes.instanceOf(Element),\r\n        dataStreams: PropTypes.oneOfType([PropTypes.instanceOf(Array), PropTypes.instanceOf(Immutable.Iterable)]),\r\n        dataStreamsHistory: PropTypes.oneOfType([PropTypes.instanceOf(Array), PropTypes.instanceOf(Immutable.Iterable)])\r\n            .isRequired,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.disabledItems !== this.props.disabledItems) {\r\n            this.renderChart();\r\n        }\r\n    }\r\n\r\n    renderChart() {\r\n        const { dataStreams, dataStreamsHistory, disabledItems } = this.props;\r\n\r\n        const chartDataStreams = [];\r\n        dataStreams.forEach((dataStream, idx) => {\r\n            let type;\r\n            switch (dataStream.get('graphType')) {\r\n                case 'LINE':\r\n                    type = 'line';\r\n                    break;\r\n                case 'BAR':\r\n                    type = 'bar';\r\n                    break;\r\n                case 'FILLED_LINE':\r\n                    type = 'area';\r\n                    break;\r\n                default:\r\n                    type = 'line';\r\n            }\r\n\r\n            if (!disabledItems.includes(idx)) {\r\n                const colors = decodeBlynkColor(dataStream.get('color'), true);\r\n\r\n                const chartDataStream = {\r\n                    label: dataStream.get('title'),\r\n                    color: colors[0],\r\n                    colorGradient: colors,\r\n                    data: dataStreamsHistory[idx],\r\n                    showAxis: dataStream.get('showYAxis'),\r\n                    strokeWidth: 1,\r\n                    showDots: type === 'bar',\r\n                    type,\r\n                };\r\n\r\n                switch (dataStream.get('yAxisScale')) {\r\n                    case 'MINMAX': {\r\n                        chartDataStream.scaleDomain = [dataStream.get('yAxisMin', 0), dataStream.get('yAxisMax', 0)];\r\n                        break;\r\n                    }\r\n                    case 'HEIGHT': {\r\n                        chartDataStream.scaleRange = [\r\n                            100 - dataStream.get('yAxisMax', 100),\r\n                            100 - dataStream.get('yAxisMin', 0),\r\n                        ];\r\n                        break;\r\n                    }\r\n                    case 'DELTA': {\r\n                        // TODO\r\n                        break;\r\n                    }\r\n                    default:\r\n                }\r\n\r\n                chartDataStreams.push(chartDataStream);\r\n            }\r\n        });\r\n\r\n        this.chart.render(chartDataStreams);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { width, height, showXAxis } = this.props;\r\n        this.chart = new TimeseriesMultiChart({\r\n            target: this.containerRef,\r\n            chartDuration: 3600 * 24000,\r\n            width,\r\n            height,\r\n            showTimeAxis: true || showXAxis,\r\n        });\r\n        this.renderChart();\r\n    }\r\n\r\n    render() {\r\n        const { width, height } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={styles.chartContainer}\r\n                style={{ width, height }}\r\n                ref={i => {\r\n                    this.containerRef = i;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.scss';\r\nimport { decodeBlynkColor } from '../../../../../../../utils/color';\r\n\r\nexport default class ChartLegend extends React.Component {\r\n    static propTypes = {\r\n        dataStreams: PropTypes.any,\r\n    };\r\n\r\n    handleClickItem = e => {\r\n        const { onClickItem } = this.props;\r\n        const { idx } = e.currentTarget.dataset;\r\n        onClickItem(Number(idx));\r\n    };\r\n\r\n    render() {\r\n        const { dataStreams, disabledItems } = this.props;\r\n\r\n        return (\r\n            <div className={styles.legend}>\r\n                {dataStreams.map((dataStream, idx) => {\r\n                    const color = decodeBlynkColor(dataStream.get('color'), true);\r\n\r\n                    return (\r\n                        <div key={idx} className={styles.legendItem} onClick={this.handleClickItem} data-idx={idx}>\r\n                            <div\r\n                                className={styles.legendCell}\r\n                                style={{\r\n                                    backgroundColor: disabledItems.includes(idx) ? undefined : color[0],\r\n                                    border: `1px solid ${color[0]}`,\r\n                                }}\r\n                            />\r\n                            {dataStream.get('title')}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Button, ButtonGroup } from '@blueprintjs/core';\r\nimport styles from './styles.module.scss';\r\n\r\nexport default class ChartControl extends React.Component {\r\n    handleSelectDuration = e => {\r\n        const { onChangeDuration } = this.props;\r\n        onChangeDuration(Number(e.currentTarget.dataset.duration));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.control}>\r\n                <ButtonGroup style={{ minWidth: 150 }} fill>\r\n                    {[\r\n                        ['1h', 3600 * 1000],\r\n                        ['6h', 3600 * 1000 * 6],\r\n                        ['12h', 3600 * 1000 * 12],\r\n                        ['1d', 3600 * 1000 * 24],\r\n                        ['3d', 3600 * 1000 * 24 * 3],\r\n                    ].map(([label, duration]) => (\r\n                        <Button key={label} onClick={this.handleSelectDuration} data-duration={duration} small>\r\n                            {label}\r\n                        </Button>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from '@blueprintjs/core';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport * as Immutable from 'immutable';\r\nimport { getPinHistory } from '../../../../../../redux/modules/blynk/actions';\r\nimport { widgetDataStreamsHistorySelector } from '../../../../../../redux/selectors';\r\nimport styles from './styles.module.scss';\r\nimport DataStreamsChart from './DataStreamsChart/DataStreamsChart';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport ChartLegend from './ChartLegend/ChartLegend';\r\nimport ChartControl from './ChartControl/ChartControl';\r\n\r\nexport class EnhancedGraphView extends React.Component {\r\n    state = {\r\n        historyIsReady: false,\r\n        hiddenDataStreams: [],\r\n    };\r\n\r\n    async getHistory() {\r\n        const { widget, getPinHistory } = this.props;\r\n\r\n        for (const dataStream of widget.get('dataStreams', new Immutable.List())) {\r\n            const pinId = dataStream.getIn(['pin', 'pinId']);\r\n            await getPinHistory({ deviceId: dataStream.get('targetId'), pin: pinId });\r\n        }\r\n\r\n        this.setState({\r\n            historyIsReady: true,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getHistory();\r\n    }\r\n\r\n    handleChangeDuration = duration => {\r\n        if (this.dataStreamsChart && this.dataStreamsChart.chart) {\r\n            this.dataStreamsChart.chart.setChartDuration(duration);\r\n        }\r\n    };\r\n\r\n    handleClickLegendItem = itemId => {\r\n        let { hiddenDataStreams } = this.state;\r\n        if (hiddenDataStreams.includes(itemId)) {\r\n            hiddenDataStreams = hiddenDataStreams.filter(i => i !== itemId);\r\n        } else {\r\n            hiddenDataStreams = [...hiddenDataStreams, itemId];\r\n        }\r\n        this.setState({ hiddenDataStreams });\r\n    };\r\n\r\n    renderChart() {\r\n        const { widget, dataStreamsHistory } = this.props;\r\n        const { hiddenDataStreams } = this.state;\r\n\r\n        const showXAxis = widget.get('xAxisValues');\r\n\r\n        if (!widget.get('dataStreams')) {\r\n            return <div>Empty chart</div>;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className={styles.header}>\r\n                    <ChartLegend\r\n                        dataStreams={widget.get('dataStreams')}\r\n                        onClickItem={this.handleClickLegendItem}\r\n                        disabledItems={hiddenDataStreams}\r\n                    />\r\n                    <ChartControl onChangeDuration={this.handleChangeDuration} />\r\n                </div>\r\n                <div className={styles.chart}>\r\n                    <SizeMe>\r\n                        {({ width, height }) =>\r\n                            !!height && (\r\n                                <DataStreamsChart\r\n                                    dataStreams={widget.get('dataStreams')}\r\n                                    dataStreamsHistory={dataStreamsHistory}\r\n                                    controlBlockRef={this.controlBlockRef}\r\n                                    legendBlockRef={this.legendBlockRef}\r\n                                    showXAxis={showXAxis}\r\n                                    width={width}\r\n                                    height={height}\r\n                                    disabledItems={hiddenDataStreams}\r\n                                    ref={i => {\r\n                                        this.dataStreamsChart = i;\r\n                                    }}\r\n                                />\r\n                            )\r\n                        }\r\n                    </SizeMe>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderLoading() {\r\n        return (\r\n            <div className={styles.loading}>\r\n                <Spinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { historyIsReady } = this.state;\r\n        const { widget } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel\r\n                    title={\r\n                        <div className={styles.widgetLabelContainer}>\r\n                            <span className={styles.widgetLabel}>{widget.get('label')}</span>\r\n                            <div\r\n                                ref={i => {\r\n                                    this.legendBlockRef = i;\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    information={\r\n                        <div\r\n                            ref={i => {\r\n                                this.controlBlockRef = i;\r\n                            }}\r\n                        />\r\n                    }\r\n                    emptyHide={false}\r\n                />\r\n                {historyIsReady ? this.renderChart() : this.renderLoading()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        dataStreamsHistory: widgetDataStreamsHistorySelector(state, ownProps.widget),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getPinHistory,\r\n    },\r\n)(EnhancedGraphView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ColorPicker from 'coloreact';\r\nimport chroma from 'chroma-js';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport styles from './styles.module.scss';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\r\n\r\nexport class RgbView extends React.Component {\r\n    handleChangeColor = color => {\r\n        const { widget } = this.props;\r\n\r\n        const pin1Id = widget.getIn(['pins', 0, 'pinId']);\r\n        const pin2Id = widget.getIn(['pins', 1, 'pinId']);\r\n        const pin3Id = widget.getIn(['pins', 2, 'pinId']);\r\n\r\n        if (pin1Id !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin1Id, color.rgb.r);\r\n        }\r\n        if (pin2Id !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin2Id, color.rgb.g);\r\n        }\r\n        if (pin3Id !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin3Id, color.rgb.b);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { widget, pin1Value, pin2Value, pin3Value } = this.props;\r\n\r\n        const color = chroma([pin1Value, pin2Value, pin3Value]).hex();\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label') || 'Zergba'} />\r\n                <div className={styles.colorPickerContainer}>\r\n                    <ColorPicker opacity={false} color={color} onChange={this.handleChangeColor} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pin1Id = ownProps.widget.getIn(['pins', 0, 'pinId']);\r\n    const pin2Id = ownProps.widget.getIn(['pins', 1, 'pinId']);\r\n    const pin3Id = ownProps.widget.getIn(['pins', 2, 'pinId']);\r\n\r\n    return {\r\n        pin1Value: pinValueSelector(state, deviceId, pin1Id),\r\n        pin2Value: pinValueSelector(state, deviceId, pin2Id),\r\n        pin3Value: pinValueSelector(state, deviceId, pin3Id),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(RgbView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport { Button } from '@blueprintjs/core';\r\nimport { DraggableCore } from 'react-draggable';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport styles from './styles.module.scss';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\r\nimport { decodeBlynkColor } from '../../../../../../utils/color';\r\n\r\nexport class TwoAxisJoystickView extends React.Component {\r\n    handleStartDrag = () => {};\r\n\r\n    handleDrag = (e, { deltaX, deltaY }) => {\r\n        const { widget, pin1Value, pin2Value } = this.props;\r\n\r\n        const x = ((-this.getMiddleX() + Number(pin1Value)) / this.getMiddleX()) * this.margin;\r\n        const y = ((-this.getMiddleY() + Number(pin2Value)) / this.getMiddleY()) * this.margin * -1;\r\n\r\n        let rX = x + deltaX;\r\n        let rY = y + deltaY;\r\n\r\n        rX = Math.max(Math.min(rX, this.margin), -this.margin);\r\n        rY = Math.max(Math.min(rY, this.margin), -this.margin);\r\n\r\n        const distance = Math.sqrt(rX * rX + rY * rY);\r\n        if (distance > this.margin) {\r\n            rX *= this.margin / distance;\r\n            rY *= this.margin / distance;\r\n        }\r\n\r\n        const pin1Id = widget.getIn(['pins', 0, 'pinId']);\r\n        const pin2Id = widget.getIn(['pins', 1, 'pinId']);\r\n\r\n        if (pin1Id !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(\r\n                pin1Id,\r\n                Math.floor(this.getMiddleX() + (rX / this.margin) * this.getMiddleX()),\r\n            );\r\n        }\r\n        if (pin2Id !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(\r\n                pin2Id,\r\n                Math.floor(this.getMiddleY() - (rY / this.margin) * this.getMiddleY()),\r\n            );\r\n        }\r\n    };\r\n\r\n    handleStop = () => {\r\n        const { widget } = this.props;\r\n\r\n        const pin1Id = widget.getIn(['pins', 0, 'pinId']);\r\n        const pin2Id = widget.getIn(['pins', 1, 'pinId']);\r\n\r\n        if (pin1Id !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin1Id, this.getMiddleX());\r\n        }\r\n        if (pin2Id !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin2Id, this.getMiddleY());\r\n        }\r\n    };\r\n\r\n    getMiddleValue(pinIdx) {\r\n        const { widget } = this.props;\r\n        return (widget.getIn(['pins', pinIdx, 'max']) - widget.getIn(['pins', pinIdx, 'min']) + 1) / 2;\r\n    }\r\n\r\n    getMiddleX() {\r\n        this._middleX = this._middleX !== undefined ? this._middleX : this.getMiddleValue(0);\r\n        return this._middleX;\r\n    }\r\n\r\n    getMiddleY() {\r\n        this._middleY = this._middleY !== undefined ? this._middleY : this.getMiddleValue(1);\r\n        return this._middleY;\r\n    }\r\n\r\n    render() {\r\n        const { widget, pin1Value, pin2Value } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel\r\n                    title={widget.get('label') || 'Joystick'}\r\n                    information={\r\n                        <div>\r\n                            {pin1Value}\r\n                            <br />\r\n                            {pin2Value}\r\n                        </div>\r\n                    }\r\n                />\r\n                <div className={styles.mainContainer}>\r\n                    <SizeMe className={styles.sizeContainer}>\r\n                        {({ width, height }) => {\r\n                            const moreSize = 20;\r\n                            const areaSize = Math.min(width, height) - moreSize * 2;\r\n                            const stickSize = areaSize / 2;\r\n                            const margin = stickSize / 2;\r\n\r\n                            this.margin = margin;\r\n\r\n                            const x = ((-this.getMiddleX() + Number(pin1Value)) / this.getMiddleX()) * this.margin;\r\n                            const y = ((-this.getMiddleY() + Number(pin2Value)) / this.getMiddleY()) * this.margin * -1;\r\n\r\n                            return (\r\n                                <div\r\n                                    className={styles.stickContainer}\r\n                                    style={{ width: areaSize, height: areaSize, margin: moreSize }}\r\n                                >\r\n                                    <DraggableCore\r\n                                        onStart={this.handleStartDrag}\r\n                                        onDrag={this.handleDrag}\r\n                                        onStop={this.handleStop}\r\n                                    >\r\n                                        <Button\r\n                                            className={styles.stick}\r\n                                            style={{\r\n                                                width: stickSize + moreSize * 2,\r\n                                                height: stickSize + moreSize * 2,\r\n                                                left: margin - moreSize,\r\n                                                top: margin - moreSize,\r\n                                                transform: `translate(${x}px, ${y}px)`,\r\n                                                backgroundColor: decodeBlynkColor(widget.get('color')),\r\n                                                border: `5px solid white`,\r\n                                            }}\r\n                                        />\r\n                                    </DraggableCore>\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    </SizeMe>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pin1Id = ownProps.widget.getIn(['pins', 0, 'pinId']);\r\n    const pin2Id = ownProps.widget.getIn(['pins', 1, 'pinId']);\r\n\r\n    return {\r\n        pin1Value: pinValueSelector(state, deviceId, pin1Id),\r\n        pin2Value: pinValueSelector(state, deviceId, pin2Id),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(TwoAxisJoystickView);\r\n","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport cn from 'clsx';\r\nimport styles from './styles.module.scss';\r\n\r\nexport default class Scrollbar extends Component {\r\n    static defaultProps = {\r\n        scrollRef: () => {},\r\n    };\r\n\r\n    renderThumb = ({ className, style, ...props }) => {\r\n        return <div className={cn(className, styles.thumb)} style={style} {...props} />;\r\n    };\r\n\r\n    render() {\r\n        const { scrollRef, ...props } = this.props;\r\n\r\n        return (\r\n            <Scrollbars\r\n                renderThumbHorizontal={this.renderThumb}\r\n                renderThumbVertical={this.renderThumb}\r\n                ref={i => scrollRef(i)}\r\n                {...props}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, InputGroup } from '@blueprintjs/core';\r\nimport cn from 'clsx';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport styles from './styles.module.scss';\r\nimport Scrollbar from '../../../../Scrollbar/Scrollbar';\r\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\r\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\r\n\r\nexport class TerminalView extends React.Component {\r\n    state = {\r\n        inputValue: '',\r\n    };\r\n\r\n    lastOwnChange = false;\r\n\r\n    handleSendInput = () => {\r\n        const { widget } = this.props;\r\n        const { inputValue } = this.state;\r\n\r\n        const pin = getWidgetPinAddress(widget);\r\n        if (pin !== -1) {\r\n            this.lastOwnChange = true;\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, inputValue);\r\n        }\r\n\r\n        this.setState({ inputValue: '' });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.pinWriteHistory !== this.props.pinWriteHistory) {\r\n            if (this.props.widget.get('autoScrollOn')) {\r\n                this.scrollComponent.scrollToBottom();\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeInput = e => {\r\n        const inputValue = e.currentTarget.value;\r\n        this.setState({ inputValue });\r\n    };\r\n\r\n    handleKeyPress = e => {\r\n        const keyCode = e.keyCode ? e.keyCode : e.which;\r\n        if (keyCode === 13) {\r\n            this.handleSendInput();\r\n\r\n            return false;\r\n        }\r\n    };\r\n\r\n    generateHistoryOutput() {\r\n        const { pinWriteHistory, widget } = this.props;\r\n        let output = '';\r\n        if (pinWriteHistory) {\r\n            pinWriteHistory.forEach((historyItem, idx) => {\r\n                if (this.lastOwnChange && idx === pinWriteHistory.size - 1) {\r\n                    output += '> ';\r\n                    this.lastOwnChange = false;\r\n                }\r\n                output += historyItem;\r\n                if (widget.get('attachNewLine')) {\r\n                    output += '\\r\\n';\r\n                }\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n\r\n    render() {\r\n        const { widget } = this.props;\r\n        const { inputValue } = this.state;\r\n        const terminalInputOn = widget.get('terminalInputOn');\r\n\r\n        return (\r\n            <>\r\n                <div className={styles.outputContainer}>\r\n                    <SizeMe>\r\n                        {({ width, height }) => (\r\n                            <Scrollbar\r\n                                style={{ height, width }}\r\n                                scrollRef={i => {\r\n                                    this.scrollComponent = i;\r\n                                }}\r\n                            >\r\n                                <pre className={cn('bp3-code-block', styles.output)}>\r\n                                    {this.generateHistoryOutput()}\r\n                                    !!! TERMINAL OUTPUT IS UNDER CONSTRUCTION !!!\r\n                                </pre>\r\n                            </Scrollbar>\r\n                        )}\r\n                    </SizeMe>\r\n                </div>\r\n                {terminalInputOn && (\r\n                    <InputGroup\r\n                        placeholder=\"Type here\"\r\n                        value={inputValue}\r\n                        onChange={this.handleChangeInput}\r\n                        onKeyPress={this.handleKeyPress}\r\n                        rightElement={<Button icon=\"key-enter\" minimal={true} onClick={this.handleSendInput} />}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId),\r\n        pinWriteHistory: state.blynk.getIn(['devices', deviceId, 'pinsWriteHistory', pinId]),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(TerminalView);\r\n","import { connect } from 'react-redux';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\n\r\nimport { SliderView } from '../SliderView/SliderView';\r\n\r\nexport class VerticalSliderView extends SliderView {\r\n    static defaultProps = {\r\n        vertical: true,\r\n    };\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(VerticalSliderView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport { formatValueString } from '../../../../../../utils/data';\r\n\r\nexport class LcdDisplayView extends React.Component {\r\n    renderValue(pinIdx) {\r\n        const { value1, value2, widget } = this.props;\r\n\r\n        const value = pinIdx === 1 ? value1 : value2;\r\n\r\n        return (\r\n            <span\r\n                dangerouslySetInnerHTML={{\r\n                    __html: formatValueString(value, widget.get(`textFormatLine${pinIdx}`), `pin${pinIdx}`),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={styles.value}>\r\n                    <div className={styles.line}>{this.renderValue(1)}</div>\r\n                    <div className={styles.line}>{this.renderValue(2)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pin1Id = ownProps.widget.getIn(['pins', 0, 'pinId']);\r\n    const pin2Id = ownProps.widget.getIn(['pins', 1, 'pinId']);\r\n    return {\r\n        value1: pinValueSelector(state, deviceId, pin1Id),\r\n        value2: pinValueSelector(state, deviceId, pin2Id),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(LcdDisplayView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as d3 from 'd3';\r\nimport cn from 'clsx';\r\nimport styles from './styles.module.scss';\r\nimport { decodeBlynkColor } from '../../../../../../../utils/color';\r\nimport { formatValueString } from '../../../../../../../utils/data';\r\n\r\nexport class GaugeChart extends React.Component {\r\n    static propTypes = {\r\n        min: PropTypes.number.isRequired,\r\n        max: PropTypes.number.isRequired,\r\n        value: PropTypes.number.isRequired,\r\n        width: PropTypes.number.isRequired,\r\n        height: PropTypes.number.isRequired,\r\n        color: PropTypes.number,\r\n    };\r\n\r\n    renderChart() {\r\n        const { width, height, min, max, color } = this.props;\r\n\r\n        const svg = d3\r\n            .select(this.containerRef)\r\n            .append('svg')\r\n            .attr('width', width)\r\n            .attr('height', height);\r\n\r\n        const chart = svg.append('g').attr('transform', `translate(${width / 2}, ${height / 1.5})`);\r\n\r\n        const thickness = 20;\r\n        const radius = Math.min(width, height) / 1.5 - thickness / 2;\r\n\r\n        const arc = d3.arc().cornerRadius(thickness / 2);\r\n\r\n        chart\r\n            .append('path')\r\n            .attr('class', cn('backLine', styles.backLine))\r\n            .attr(\r\n                'd',\r\n                arc({\r\n                    innerRadius: radius - thickness,\r\n                    outerRadius: radius,\r\n                    startAngle: -Math.PI / 1.5,\r\n                    endAngle: Math.PI / 1.5,\r\n                }),\r\n            );\r\n        chart\r\n            .append('path')\r\n            .attr('class', cn('frontLine', styles.frontLine))\r\n            .attr('fill', decodeBlynkColor(color));\r\n        chart\r\n            .append('foreignObject')\r\n            .attr('width', radius)\r\n            .attr('height', 50)\r\n            .attr('x', -radius / 2)\r\n            .attr('y', -25)\r\n            .append('xhtml:div')\r\n            .attr('class', cn('value', styles.value))\r\n            .style('color', decodeBlynkColor(color));\r\n\r\n        chart\r\n            .append('text')\r\n            .attr('class', cn('minLabel', styles.minLabel))\r\n            .attr('x', radius * Math.sin(-Math.PI / 1.5) + thickness)\r\n            .attr('y', radius * Math.cos(-Math.PI / 1.5) * -1 - 5)\r\n            .text(min);\r\n        chart\r\n            .append('text')\r\n            .attr('class', cn('maxLabel', styles.maxLabel))\r\n            .attr('x', radius * Math.sin(Math.PI / 1.5) - thickness)\r\n            .attr('y', radius * Math.cos(Math.PI / 1.5) * -1 - 5)\r\n            .text(max);\r\n\r\n        this.redraw = () => {\r\n            const { min, max, value, valueFormatting } = this.props;\r\n            const fillFactor = value / (max - min);\r\n\r\n            chart\r\n                .select('.frontLine')\r\n                .attr('opacity', fillFactor ? 1 : 0)\r\n                .attr(\r\n                    'd',\r\n                    arc({\r\n                        innerRadius: radius - thickness,\r\n                        outerRadius: radius,\r\n                        startAngle: -Math.PI / 1.5,\r\n                        endAngle: Math.PI / 1.5 - Math.PI * (1.33 * (1 - fillFactor)),\r\n                    }),\r\n                );\r\n\r\n            chart.select('.value').html(formatValueString(value, valueFormatting));\r\n        };\r\n        this.redraw();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderChart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.redraw && this.redraw();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={i => {\r\n                    this.containerRef = i;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {};\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(GaugeChart);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport styles from './styles.module.scss';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport GaugeChart from './GaugeChart/GaugeChart';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\n\r\nexport class GaugeView extends React.Component {\r\n    render() {\r\n        const { widget, value } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label') || 'Gauge'} />\r\n                <div className={styles.chart}>\r\n                    <SizeMe>\r\n                        {({ width, height }) =>\r\n                            !!height && (\r\n                                <GaugeChart\r\n                                    width={width}\r\n                                    height={height}\r\n                                    min={widget.get('min')}\r\n                                    max={widget.get('max')}\r\n                                    value={Number(value) || 0}\r\n                                    valueFormatting={widget.get('valueFormatting')}\r\n                                    color={widget.get('color')}\r\n                                />\r\n                            )\r\n                        }\r\n                    </SizeMe>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const pinId = ownProps.widget.get('pinId');\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(GaugeView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as d3 from 'd3';\r\nimport cn from 'clsx';\r\nimport styles from './styles.module.scss';\r\nimport { decodeBlynkColor } from '../../../../../../../utils/color';\r\n\r\nexport class LevelChart extends React.Component {\r\n    static propTypes = {\r\n        min: PropTypes.number.isRequired,\r\n        max: PropTypes.number.isRequired,\r\n        value: PropTypes.number.isRequired,\r\n        width: PropTypes.number.isRequired,\r\n        height: PropTypes.number.isRequired,\r\n        vertical: PropTypes.bool,\r\n        flipAxis: PropTypes.bool,\r\n        color: PropTypes.number,\r\n    };\r\n\r\n    renderChart() {\r\n        const { width, height, color } = this.props;\r\n\r\n        const svg = d3\r\n            .select(this.containerRef)\r\n            .append('svg')\r\n            .attr('width', width)\r\n            .attr('height', height);\r\n\r\n        const chart = svg.append('g');\r\n\r\n        chart\r\n            .append('rect')\r\n            .attr('class', cn('backLine', styles.backLine))\r\n            .attr('x', 0)\r\n            .attr('y', 0)\r\n            .attr('rx', 3)\r\n            .attr('ry', 3)\r\n            .attr('width', width)\r\n            .attr('height', height);\r\n        chart\r\n            .append('rect')\r\n            .attr('class', cn('frontLine', styles.frontLine))\r\n            .attr('rx', 3)\r\n            .attr('ry', 3)\r\n            .attr('x', 0)\r\n            .attr('y', 0)\r\n            .attr('fill', decodeBlynkColor(color));\r\n\r\n        this.redraw = () => {\r\n            const { min, max, value, height, width, vertical, flipAxis } = this.props;\r\n            const fillFactor = value / (max - min);\r\n\r\n            const frontLine = chart.select('.frontLine').attr('opacity', fillFactor ? 1 : 0);\r\n\r\n            if (vertical) {\r\n                frontLine.attr('height', Math.max(fillFactor * height, 0)).attr('width', width);\r\n                if (!flipAxis) {\r\n                    frontLine.attr('y', Math.max(height - fillFactor * height, 0));\r\n                }\r\n            } else {\r\n                frontLine.attr('width', Math.max(fillFactor * width, 0)).attr('height', height);\r\n                if (flipAxis) {\r\n                    frontLine.attr('x', Math.max(width - fillFactor * width, 0));\r\n                }\r\n            }\r\n        };\r\n        this.redraw();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderChart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.redraw && this.redraw();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={i => {\r\n                    this.containerRef = i;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {};\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(LevelChart);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport styles from './styles.module.scss';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport LevelChart from './LevelChart/LevelChart';\r\n\r\nexport class LevelView extends React.Component {\r\n    render() {\r\n        const { widget, value } = this.props;\r\n        const isVertical = widget.get('type') === 'VERTICAL_LEVEL_DISPLAY';\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label') || (isVertical ? '' : 'Level')} information={value} />\r\n                <div className={styles.chart}>\r\n                    <SizeMe>\r\n                        {({ width, height }) =>\r\n                            !!height && (\r\n                                <LevelChart\r\n                                    width={width}\r\n                                    height={height}\r\n                                    min={widget.get('min')}\r\n                                    max={widget.get('max')}\r\n                                    value={Number(value)}\r\n                                    valueFormatting={widget.get('valueFormatting')}\r\n                                    vertical={isVertical}\r\n                                    flipAxis={widget.get('isAxisFlipOn')}\r\n                                    color={widget.get('color')}\r\n                                />\r\n                            )\r\n                        }\r\n                    </SizeMe>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(LevelView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@blueprintjs/core';\r\nimport cn from 'clsx';\r\nimport repeat from '@avinlab/repeat';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport styles from './styles.module.scss';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\r\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\r\n\r\nexport class StepView extends React.Component {\r\n    getButtonLabel(direction) {\r\n        const { widget } = this.props;\r\n\r\n        if (!widget.get('isArrowsOn')) {\r\n            if (direction === -1) {\r\n                return '←';\r\n            }\r\n            return '→';\r\n        }\r\n\r\n        if (direction === -1) {\r\n            return '-';\r\n        }\r\n        return '+';\r\n    }\r\n\r\n    handleMouseDown = e => {\r\n        const { widget } = this.props;\r\n        const step = widget.get('step');\r\n        const isSendStep = widget.get('isSendStep');\r\n        const isLoopOn = widget.get('isLoopOn');\r\n        const max = widget.get('max');\r\n        const min = widget.get('min');\r\n\r\n        const pin = getWidgetPinAddress(widget);\r\n\r\n        const direction = Number(e.currentTarget.dataset.direction);\r\n\r\n        this.sendRepeatAction = repeat({\r\n            action: () => {\r\n                const value = Number(this.props.value) || 0;\r\n\r\n                let sendValue;\r\n                if (isSendStep) {\r\n                    sendValue = step * direction;\r\n                } else {\r\n                    sendValue = value + step * direction;\r\n\r\n                    if (sendValue > max) {\r\n                        if (isLoopOn) {\r\n                            sendValue = min;\r\n                        } else {\r\n                            sendValue = max;\r\n                        }\r\n                    } else if (sendValue < min) {\r\n                        if (isLoopOn) {\r\n                            sendValue = max;\r\n                        } else {\r\n                            sendValue = min;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (pin !== -1) {\r\n                    blynkWSClient(widget.get('deviceId')).sendWritePin(pin, sendValue);\r\n                }\r\n            },\r\n            delay: 80,\r\n            firstTimeDelay: 400,\r\n            skipFirst: false,\r\n        });\r\n        this.sendRepeatAction.start();\r\n    };\r\n\r\n    handleMouseUp = e => {\r\n        if (this.sendRepeatAction) {\r\n            this.sendRepeatAction.stop();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { widget, value } = this.props;\r\n\r\n        const isVertical = widget.get('type') === 'VERTICAL_STEP';\r\n\r\n        const defaultLabel = isVertical ? 'Step V' : 'Step H';\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label') || defaultLabel} information={value} />\r\n                <div\r\n                    className={cn({\r\n                        [styles.verticalButtonsContainer]: isVertical,\r\n                        [styles.buttonsContainer]: !isVertical,\r\n                    })}\r\n                >\r\n                    <Button\r\n                        minimal\r\n                        small\r\n                        className={styles.button}\r\n                        data-direction={isVertical ? 1 : -1}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    >\r\n                        {this.getButtonLabel(isVertical ? 1 : -1)}\r\n                    </Button>\r\n                    <div\r\n                        className={cn({\r\n                            [styles.dividerHorizontal]: isVertical,\r\n                            [styles.dividerVertical]: !isVertical,\r\n                        })}\r\n                    />\r\n                    <Button\r\n                        minimal\r\n                        small\r\n                        className={styles.button}\r\n                        data-direction={isVertical ? -1 : 1}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    >\r\n                        {this.getButtonLabel(isVertical ? -1 : 1)}\r\n                    </Button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(StepView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport styles from './styles.module.scss';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport { decodeBlynkColor } from '../../../../../../utils/color';\r\n\r\nexport class LedView extends React.Component {\r\n    render() {\r\n        const { widget, value } = this.props;\r\n\r\n        const color = decodeBlynkColor(widget.get('color'));\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label') || 'Led'} />\r\n                <div className={styles.ledContainer}>\r\n                    <SizeMe style={{ textAlign: 'center' }}>\r\n                        {({ width, height }) => {\r\n                            const size = Math.min(width, height) || 5;\r\n                            return (\r\n                                <svg width={size} height={size}>\r\n                                    <circle\r\n                                        r={Math.max(size / 2 - 4, 1)}\r\n                                        cx={size / 2}\r\n                                        cy={size / 2}\r\n                                        className={styles.ledCircle}\r\n                                        stroke={color}\r\n                                        fill={color}\r\n                                        fillOpacity={value / 255}\r\n                                    />\r\n                                </svg>\r\n                            );\r\n                        }}\r\n                    </SizeMe>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId) || 0,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(LedView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport cn from 'clsx';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport styles from './styles.module.scss';\r\nimport { setActiveTabId } from '../../../../../../redux/modules/blynk/actions';\r\nimport Scrollbar from '../../../../Scrollbar/Scrollbar';\r\n\r\nexport class TabsView extends React.Component {\r\n    handleClickTab = e => {\r\n        const { setActiveTabId } = this.props;\r\n        const tabId = Number(e.currentTarget.dataset.tabId);\r\n        setActiveTabId(tabId);\r\n    };\r\n\r\n    render() {\r\n        const { widget, activeTabId } = this.props;\r\n\r\n        return (\r\n            <div className={styles.tabsContainer}>\r\n                <SizeMe>\r\n                    {({ width, height }) => (\r\n                        <Scrollbar style={{ width, height }}>\r\n                            <div className={styles.tabsInner}>\r\n                                <ul className={styles.tabList}>\r\n                                    {widget.get('tabs').map((tab, idx) => (\r\n                                        <li\r\n                                            key={idx}\r\n                                            className={cn(styles.tab, { [styles.activeTab]: idx === activeTabId })}\r\n                                            onClick={this.handleClickTab}\r\n                                            data-tab-id={idx}\r\n                                        >\r\n                                            {tab.get('label') || `Tab ${idx + 1}`}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </Scrollbar>\r\n                    )}\r\n                </SizeMe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        activeTabId: state.blynk.get('activeTabId'),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        setActiveTabId,\r\n    },\r\n)(TabsView);\r\n","import React from 'react';\r\n\r\nexport default class EmptyView extends React.Component {\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport L from 'leaflet';\r\nimport styles from './styles.module.scss';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\n\r\nexport class MapView extends React.Component {\r\n    componentDidMount() {\r\n        const { widget } = this.props;\r\n        const lat = widget.get('lat');\r\n        const lon = widget.get('lon');\r\n        this.map = L.map(this.mapContainerRef).setView([lat, lon], 15);\r\n        L.tileLayer('https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png').addTo(this.map);\r\n        L.marker([lat, lon]).addTo(this.map);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    className={styles.map}\r\n                    style={{ height: '100%', width: '100%' }}\r\n                    ref={i => {\r\n                        this.mapContainerRef = i;\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId) || 0,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(MapView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport styles from './styles.module.scss';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\n\r\nexport class ImageView extends React.Component {\r\n    render() {\r\n        const { widget, value } = this.props;\r\n\r\n        let imageUrl;\r\n        if (widget.get('urls')) {\r\n            if (value >= 1 && value <= widget.get('urls').size) {\r\n                imageUrl = widget.getIn(['urls', value - 1]);\r\n            } else {\r\n                imageUrl = widget.getIn(['urls', 0]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label')} />\r\n                <div className={styles.imageContainer}>\r\n                    {imageUrl && (\r\n                        <SizeMe>\r\n                            {({ width, height }) => {\r\n                                let imgWidth;\r\n                                let imgHeight;\r\n                                if (widget.get('scaling') === 'FIT') {\r\n                                    imgWidth = Math.min(width, height);\r\n                                    imgHeight = Math.min(width, height);\r\n                                } else {\r\n                                    imgWidth = width;\r\n                                    imgHeight = height;\r\n                                }\r\n\r\n                                return <img src={imageUrl} alt={value} width={imgWidth} height={imgHeight} />;\r\n                            }}\r\n                        </SizeMe>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId) || 0,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(ImageView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, InputGroup } from '@blueprintjs/core';\r\nimport trim from 'lodash/trim';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport styles from './styles.module.scss';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\r\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\r\n\r\nexport class TextInputView extends React.Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            inputValue: props.value,\r\n        };\r\n    }\r\n\r\n    handleChangeValue = e => {\r\n        this.setState({\r\n            inputValue: e.currentTarget.value,\r\n        });\r\n    };\r\n\r\n    handleKeyPress = e => {\r\n        const keyCode = e.keyCode || e.which;\r\n        if (keyCode === 13) {\r\n            e.currentTarget.blur();\r\n        }\r\n    };\r\n\r\n    handleBlur = () => {\r\n        const { widget } = this.props;\r\n        let { inputValue } = this.state;\r\n        if (this.isNumberInput) {\r\n            inputValue = Number(inputValue) || widget.get('min', 0);\r\n        }\r\n\r\n        const pin = getWidgetPinAddress(widget);\r\n        if (pin !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, inputValue);\r\n        }\r\n    };\r\n\r\n    handleConfirmButtonClick = e => {\r\n        e.currentTarget.blur();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.setState({\r\n                inputValue: this.props.value,\r\n            });\r\n        }\r\n    }\r\n\r\n    get isNumberInput() {\r\n        const { widget } = this.props;\r\n        return widget.get('type') === 'NUMBER_INPUT';\r\n    }\r\n\r\n    handleClickPlusMinus = e => {\r\n        const { widget } = this.props;\r\n        const { action } = e.currentTarget.dataset;\r\n        const { inputValue } = this.state;\r\n\r\n        const step = widget.get('step', 1);\r\n        const min = widget.get('min', 0);\r\n        const max = widget.get('max', 0);\r\n        const isLoopOn = widget.get('isLoopOn', false);\r\n\r\n        let resultValue = Number(inputValue) + (action === 'plus' ? +step : -step) || min;\r\n        if (resultValue > max) {\r\n            if (isLoopOn) {\r\n                resultValue = min;\r\n            } else {\r\n                resultValue = max;\r\n            }\r\n        } else if (resultValue < min) {\r\n            if (isLoopOn) {\r\n                resultValue = max;\r\n            } else {\r\n                resultValue = min;\r\n            }\r\n        }\r\n\r\n        this.setState(\r\n            {\r\n                inputValue: resultValue,\r\n            },\r\n            () => {\r\n                this.handleBlur();\r\n            },\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { widget } = this.props;\r\n        const { inputValue } = this.state;\r\n        const { isNumberInput } = this;\r\n\r\n        const suffix = trim(widget.get('suffix', ''));\r\n\r\n        let rightElement;\r\n        let leftElement;\r\n        if (isNumberInput) {\r\n            leftElement = (\r\n                <Button\r\n                    icon=\"minus\"\r\n                    onClick={this.handleClickPlusMinus}\r\n                    data-action=\"minus\"\r\n                    className={styles.controlButton}\r\n                />\r\n            );\r\n            rightElement = (\r\n                <Button\r\n                    icon=\"plus\"\r\n                    onClick={this.handleClickPlusMinus}\r\n                    data-action=\"plus\"\r\n                    className={styles.controlButton}\r\n                />\r\n            );\r\n        } else {\r\n            rightElement = (\r\n                <Button\r\n                    icon=\"key-enter\"\r\n                    minimal\r\n                    onClick={this.handleConfirmButtonClick}\r\n                    className={styles.controlButton}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={trim(widget.get('label', '') + (suffix ? ` (${suffix})` : ''))} />\r\n                <div className={styles.container}>\r\n                    <InputGroup\r\n                        placeholder={widget.get('hint')}\r\n                        value={inputValue}\r\n                        onChange={this.handleChangeValue}\r\n                        onKeyPress={this.handleKeyPress}\r\n                        onBlur={this.handleBlur}\r\n                        leftIcon={leftElement}\r\n                        rightElement={rightElement}\r\n                        style={{\r\n                            textAlign: isNumberInput ? 'center' : undefined,\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId) || 0,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(TextInputView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, ButtonGroup } from '@blueprintjs/core';\r\nimport WidgetLabel from '../../WidgetLabel/WidgetLabel';\r\nimport { pinValueSelector } from '../../../../../../redux/selectors';\r\nimport { getWidgetPinAddress } from '../../../../../../utils/data';\r\nimport blynkWSClient from '../../../../../../common/blynkWSClient';\r\nimport { decodeBlynkColor } from '../../../../../../utils/color';\r\nimport styles from './styles.module.scss';\r\n\r\nexport class SegmentedControlView extends React.Component {\r\n    handleClick = e => {\r\n        const { widget } = this.props;\r\n        const { value } = e.currentTarget.dataset;\r\n\r\n        const pin = getWidgetPinAddress(widget);\r\n        if (pin !== -1) {\r\n            blynkWSClient(widget.get('deviceId')).sendWritePin(pin, value);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { widget, value } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <WidgetLabel title={widget.get('label')} />\r\n                <div className={styles.container}>\r\n                    <ButtonGroup fill>\r\n                        {widget.get('labels', []).map((label, idx) => {\r\n                            const active = Number(value) === idx + 1;\r\n                            let style;\r\n                            if (active) {\r\n                                style = {\r\n                                    backgroundColor: decodeBlynkColor(widget.get('color')),\r\n                                    fontWeight: 'bold',\r\n                                    color: '#182026',\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <Button\r\n                                    key={idx}\r\n                                    data-value={idx + 1}\r\n                                    onClick={this.handleClick}\r\n                                    active={active}\r\n                                    style={style}\r\n                                >\r\n                                    {label}\r\n                                </Button>\r\n                            );\r\n                        })}\r\n                    </ButtonGroup>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const deviceId = ownProps.widget.get('deviceId');\r\n    const pinId = ownProps.widget.get('pinId');\r\n    return {\r\n        value: pinValueSelector(state, deviceId, pinId) || 0,\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(SegmentedControlView);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport cn from 'clsx';\r\nimport styles from './styles.module.scss';\r\nimport ButtonView from './Views/ButtonView/ButtonView';\r\nimport SliderView from './Views/SliderView/SliderView';\r\nimport NumericalDisplayView from './Views/NumericalDisplayView/NumericalDisplayView';\r\nimport UnknownView from './Views/UnknownView/UnknownView';\r\nimport EnhancedGraphView from './Views/EnhancedGraphView/EnhancedGraphView';\r\nimport RgbView from './Views/RgbView/RgbView';\r\nimport TwoAxisJoystickView from './Views/TwoAxisJoystickView/TwoAxisJoystickView';\r\nimport TerminalView from './Views/TerminalView/TerminalView';\r\nimport VerticalSliderView from './Views/VerticalSliderView/VerticalSliderView';\r\nimport LcdDisplayView from './Views/LcdDisplayView/LcdDisplayView';\r\nimport GaugeView from './Views/GaugeView/GaugeView';\r\nimport LevelView from './Views/LevelView/LevelView';\r\nimport StepView from './Views/StepView/StepView';\r\nimport LedView from './Views/LedView/LedView';\r\nimport TabsView from './Views/TabsView/TabsView';\r\nimport EmptyView from './Views/EmptyView/EmptyView';\r\nimport MapView from './Views/MapView/MapView';\r\nimport ImageView from './Views/ImageView/ImageView';\r\nimport TextInputView from './Views/TextInputView/TextInputView';\r\nimport SegmentedControlView from './Views/SegmentedControlView/SegmentedControlView';\r\n\r\nconst WIDGET_VIEW_COMPONENTS = {\r\n    BUTTON: ButtonView,\r\n    STYLED_BUTTON: ButtonView,\r\n    SLIDER: SliderView,\r\n    VERTICAL_SLIDER: VerticalSliderView,\r\n    RGB: RgbView,\r\n    TWO_AXIS_JOYSTICK: TwoAxisJoystickView,\r\n    ENHANCED_GRAPH: EnhancedGraphView,\r\n    DIGIT4_DISPLAY: NumericalDisplayView,\r\n    LABELED_VALUE_DISPLAY: NumericalDisplayView,\r\n    GAUGE: GaugeView,\r\n    LCD: LcdDisplayView,\r\n    LEVEL_DISPLAY: LevelView,\r\n    VERTICAL_LEVEL_DISPLAY: LevelView,\r\n    TERMINAL: TerminalView,\r\n    STEP: StepView,\r\n    VERTICAL_STEP: StepView,\r\n    LED: LedView,\r\n    TABS: TabsView,\r\n    EMAIL: EmptyView,\r\n    NOTIFICATION: EmptyView,\r\n    TWITTER: EmptyView,\r\n    BRIDGE: EmptyView,\r\n    RTC: EmptyView,\r\n    MAP: MapView,\r\n    IMAGE: ImageView,\r\n    TEXT_INPUT: TextInputView,\r\n    NUMBER_INPUT: TextInputView,\r\n    SEGMENTED_CONTROL: SegmentedControlView,\r\n};\r\n\r\nexport class Widget extends React.Component {\r\n    renderContent() {\r\n        const { widget } = this.props;\r\n        const ViewComponent = WIDGET_VIEW_COMPONENTS[widget.get('type')] || UnknownView;\r\n        return <ViewComponent widget={widget} />;\r\n    }\r\n\r\n    render() {\r\n        const { widget } = this.props;\r\n\r\n        const sizeHeightFactor = 70;\r\n        const sizeWidthFactor = 60;\r\n        const margin = 1;\r\n\r\n        return (\r\n            <div\r\n                className={cn(styles.root, { [styles.tabsRoot]: widget.get('type') === 'TABS' })}\r\n                style={{\r\n                    left: widget.get('x') * sizeWidthFactor,\r\n                    top: widget.get('y') * sizeHeightFactor,\r\n                    width: widget.get('width') * sizeWidthFactor - margin,\r\n                    height: widget.get('height') * sizeHeightFactor - margin,\r\n                }}\r\n            >\r\n                {this.renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {};\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {},\r\n)(Widget);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport cn from 'clsx';\r\nimport { Button, HTMLSelect, Intent } from '@blueprintjs/core';\r\nimport SizeMe from '@avinlab/react-size-me';\r\nimport { getProject, logout, setAutoSyncValue, sync } from '../../../redux/modules/blynk/actions';\r\nimport styles from './styles.module.scss';\r\nimport Widget from './Widget/Widget';\r\nimport Scrollbar from '../Scrollbar/Scrollbar';\r\n\r\nexport class ProjectPage extends React.Component {\r\n    async componentDidMount() {\r\n        const { history, getProject } = this.props;\r\n        try {\r\n            await getProject();\r\n        } catch (e) {\r\n            history.push('/connection');\r\n        }\r\n    }\r\n\r\n    renderWidgets() {\r\n        const { project, activeTabId } = this.props;\r\n\r\n        const widgets = [];\r\n        project.get('widgets').forEach(widget => {\r\n            const tabId = widget.get('tabId');\r\n            if (tabId === activeTabId || widget.get('type') === 'TABS') {\r\n                widgets.push(<Widget key={widget.get('id')} widget={widget} />);\r\n            }\r\n        });\r\n        return widgets;\r\n    }\r\n\r\n    handleLogout = () => {\r\n        const { history, logout } = this.props;\r\n        logout();\r\n        history.push('/connection');\r\n    };\r\n\r\n    handleChangeAutoSync = e => {\r\n        const { setAutoSyncValue } = this.props;\r\n        const value = Number(e.currentTarget.value);\r\n        setAutoSyncValue(value);\r\n    };\r\n\r\n    handleSync = () => {\r\n        const { sync } = this.props;\r\n        sync();\r\n    };\r\n\r\n    render() {\r\n        const { project, autoSync } = this.props;\r\n\r\n        if (!project) {\r\n            return <div />;\r\n        }\r\n\r\n        const isDarkTheme = project.get('theme') === 'Blynk' || true;\r\n\r\n        return (\r\n            <div className={cn(styles.root, { 'bp3-dark': isDarkTheme })}>\r\n                <div className={styles.header}>\r\n                    <div className={styles.headerInner}>\r\n                        <div className={styles.headerTitle}>{project.get('name')}</div>\r\n                        <div className={styles.headerControls}>\r\n                            <div>\r\n                                <Button icon=\"refresh\" intent={Intent.PRIMARY} onClick={this.handleSync}>\r\n                                    Sync\r\n                                </Button>\r\n                            </div>\r\n                            <div>\r\n                                <HTMLSelect\r\n                                    className={styles.selectAutoSync}\r\n                                    onChange={this.handleChangeAutoSync}\r\n                                    value={autoSync}\r\n                                    options={[\r\n                                        { label: 'No Auto-sync', value: 0 },\r\n                                        { label: 'Auto-sync every 0.5 sec', value: 500 },\r\n                                        { label: 'Auto-sync every 1 sec', value: 1000 },\r\n                                        { label: 'Auto-sync every 2 sec', value: 2000 },\r\n                                        { label: 'Auto-sync every 3 sec', value: 3000 },\r\n                                        { label: 'Auto-sync every 5 sec', value: 5000 },\r\n                                        { label: 'Auto-sync every 10 sec', value: 10000 },\r\n                                        { label: 'Auto-sync every 15 sec', value: 15000 },\r\n                                        { label: 'Auto-sync every 30 sec', value: 30000 },\r\n                                        { label: 'Auto-sync every 60 sec', value: 60000 },\r\n                                    ]}\r\n                                />\r\n                            </div>\r\n                            <div className={styles.headerDelimiter} />\r\n                            <div>\r\n                                <Button icon=\"log-out\" intent={Intent.DANGER} onClick={this.handleLogout} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.workspace}>\r\n                    <SizeMe>\r\n                        {({ width, height }) => {\r\n                            return (\r\n                                <Scrollbar style={{ height, width }}>\r\n                                    <div className={styles.workspaceInner}>\r\n                                        <div className={styles.widgetsArea}>{this.renderWidgets()}</div>\r\n                                    </div>\r\n                                </Scrollbar>\r\n                            );\r\n                        }}\r\n                    </SizeMe>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        activeTabId: state.blynk.get('activeTabId'),\r\n        project: state.blynk.get('project'),\r\n        autoSync: state.blynk.get('autoSync'),\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        logout,\r\n        getProject,\r\n        sync,\r\n        setAutoSyncValue,\r\n    },\r\n)(ProjectPage);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport ConnectionPage from '../Pages/ConnectionPage/ConnectionPage';\r\nimport ProjectPage from '../Pages/ProjectPage/ProjectPage';\r\n\r\nexport default class Root extends React.Component {\r\n    render() {\r\n        const { store } = this.props;\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <>\r\n                        <Route exact path=\"/\" render={() => <Redirect to=\"/project\" />} />\r\n                        <Route exact path=\"/connection\" component={ConnectionPage} />\r\n                        <Route exact path=\"/project\" component={ProjectPage} />\r\n                    </>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n","import 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FocusStyleManager } from '@blueprintjs/core';\r\nimport configureStore from './redux/store';\r\nimport Root from './components/Root/Root';\r\nimport './styles/index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './browser';\r\n\r\nFocusStyleManager.onlyShowFocusOnTabs();\r\n\r\n// Init redux-store\r\nconst store = configureStore();\r\n\r\n// Mount React container\r\nconst target = document.querySelector('#root');\r\nReactDOM.render(<Root store={store} />, target);\r\n\r\nif (module.hot) {\r\n    module.hot.accept('./components/Root/Root', () => {\r\n        ReactDOM.render(<Root store={store} />, target);\r\n    });\r\n}\r\n\r\nserviceWorker.unregister();\r\n","export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"styles_buttonsContainer__3n1vH\",\"verticalButtonsContainer\":\"styles_verticalButtonsContainer__10L8b\",\"dividerVertical\":\"styles_dividerVertical__2pK-S\",\"dividerHorizontal\":\"styles_dividerHorizontal__3bGHM\",\"button\":\"styles_button__2G4kr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__WSj4e\",\"chart\":\"styles_chart__2gHlx\",\"header\":\"styles_header__JeVf_\",\"widgetLabelContainer\":\"styles_widgetLabelContainer__1Cl-t\",\"widgetLabel\":\"styles_widgetLabel__31T4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backLine\":\"styles_backLine__1O_1x\",\"value\":\"styles_value__qMcn3\",\"minMaxLabel\":\"styles_minMaxLabel__1XHkA\",\"minLabel\":\"styles_minLabel__2CG5l\",\"maxLabel\":\"styles_maxLabel__1tBDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabsContainer\":\"styles_tabsContainer__xCeyY\",\"tab\":\"styles_tab__1qIBT\",\"tabsInner\":\"styles_tabsInner__32ZpG\",\"activeTab\":\"styles_activeTab__2RKTp\",\"tabList\":\"styles_tabList__3yfkT\"};"],"sourceRoot":""}